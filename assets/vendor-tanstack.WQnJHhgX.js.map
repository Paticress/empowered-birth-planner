{"version":3,"file":"vendor-tanstack.WQnJHhgX.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n  return void 0;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Map();\n    this.#mutationId = Date.now();\n  }\n  #mutations;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    const scope = scopeFor(mutation);\n    const mutations = this.#mutations.get(scope) ?? [];\n    mutations.push(mutation);\n    this.#mutations.set(scope, mutations);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    const scope = scopeFor(mutation);\n    if (this.#mutations.has(scope)) {\n      const mutations = this.#mutations.get(scope)?.filter((x) => x !== mutation);\n      if (mutations) {\n        if (mutations.length === 0) {\n          this.#mutations.delete(scope);\n        } else {\n          this.#mutations.set(scope, mutations);\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m.state.status === \"pending\");\n    return !firstPendingMutation || firstPendingMutation === mutation;\n  }\n  runNext(mutation) {\n    const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m !== mutation && m.state.isPaused);\n    return foundMutation?.continue() ?? Promise.resolve();\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return [...this.#mutations.values()].flat();\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id ?? String(mutation.mutationId);\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const cachedData = this.getQueryData(options.queryKey);\n    if (cachedData === void 0)\n      return this.fetchQuery(options);\n    else {\n      const defaultedOptions = this.defaultQueryOptions(options);\n      const query = this.#queryCache.build(this, defaultedOptions);\n      if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n        void this.prefetchQuery(defaultedOptions);\n      }\n      return Promise.resolve(cachedData);\n    }\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters = {}, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters = {}, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters = {}, options) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options?.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map"],"names":["_cleanup","_setup","_b","_retryer","_Mutation_instances","dispatch_fn","_f","_mutations","_mutationId","_g","_queryCache","_mutationCache","_defaultOptions","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","_h","Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","resolveStaleTime","staleTime","query","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","some","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","equalItems","i","includes","value","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","replaceData","prevData","data","structuralSharing","addToEnd","items","item","max","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","_a","__privateAdd","_focused","__privateSet","onFocus","addEventListener","removeEventListener","__privateGet","setEventListener","setup","focused","setFocused","isFocused","forEach","document","visibilityState","WeakMap","onlineManager","_online","onOnline","onlineListener","offlineListener","setOnline","online","isOnline","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","CancelledError","super","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","thenable","resolve","_resolve","_reject","finalize","assign","catch","reason","pendingThenable","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","cb","schedule","push","batch","originalQueue","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","_c","_gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","Infinity","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","_d","_Query_instances","_initialState","_revertState","_cache","_abortSignalConsumed","defaultOptions","setOptions","observers","cache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","Date","now","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","__privateMethod","updatedAt","manual","setState","setStateOptions","reset","observer","resolveEnabled","enabled","isDisabled","getObserversCount","getCurrentResult","isStaleByTime","timeUntilStale","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","filter","invalidate","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","context","fetchFn","queryFnContext","persister","behavior","onFetch","onSettled","WeakSet","action","reducer","onQueryUpdate","QueryCache","_e","_queries","Map","build","client","defaultQueryOptions","getQueryDefaults","has","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","queries","event","Mutation","_observers","mutationId","mutationCache","failureReason","isPaused","variables","submittedAt","execute","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","mutationFn","restored","onMutate","runNext","onMutationUpdate","MutationCache","__privateWrapper","defaultMutationOptions","scope","scopeFor","mutations","firstPendingMutation","m","foundMutation","flat","resumePausedMutations","pausedMutations","all","map","id","String","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","queryCache","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","cachedData","fetchQuery","defaultedOptions","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchFilters","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getQueryCache","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}