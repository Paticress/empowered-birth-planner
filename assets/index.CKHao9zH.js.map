{"version":3,"file":"index.CKHao9zH.js","sources":["../../src/hooks/useNavigation.tsx","../../src/pages/NotFound.tsx","../../src/components/Header.tsx","../../src/components/BirthPlan/BirthPlanHeader.tsx","../../src/components/BirthPlan/BirthPlanWelcome.tsx","../../src/components/BirthPlan/QuestionField.tsx","../../src/components/BirthPlan/utils/sectionIcons.tsx","../../src/components/BirthPlan/QuestionnaireSection.tsx","../../src/components/BirthPlan/questionnaire/personalSection.ts","../../src/components/BirthPlan/questionnaire/index.ts","../../src/components/BirthPlan/questionnaire/atmosphereSection.ts","../../src/components/BirthPlan/questionnaire/laborPreferencesSection.ts","../../src/components/BirthPlan/questionnaire/birthSection.ts","../../src/components/BirthPlan/questionnaire/cesareanSection.ts","../../src/components/BirthPlan/questionnaire/postpartumSection.ts","../../src/components/BirthPlan/questionnaire/specialSituationsSection.ts","../../src/components/BirthPlan/BirthPlanSectionProgress.tsx","../../src/components/BirthPlan/BirthPlanQuestionnaire.tsx","../../src/components/BirthPlan/editor/SelectableOptions.tsx","../../src/components/BirthPlan/editor/OptionsDialog.tsx","../../src/components/BirthPlan/editor/EditorField.tsx","../../src/components/BirthPlan/utils/generation/personalInfo.ts","../../src/components/BirthPlan/utils/generation/baseUtils.ts","../../src/components/BirthPlan/utils/generation/atmosphere.ts","../../src/components/BirthPlan/utils/generation/laborPreferences.ts","../../src/components/BirthPlan/utils/generation/birthPreferences.ts","../../src/components/BirthPlan/utils/generation/cesareanPreferences.ts","../../src/components/BirthPlan/utils/generation/postpartumPreferences.ts","../../src/components/BirthPlan/utils/generation/specialSituations.ts","../../src/components/BirthPlan/editor/editorUtils.ts","../../src/components/BirthPlan/editor/EditorContent.tsx","../../src/components/BirthPlan/editor/EditorFooter.tsx","../../src/components/BirthPlan/editor/EditorHeader.tsx","../../src/components/BirthPlan/editor/EditorTip.tsx","../../src/components/BirthPlan/hooks/useEditorState.tsx","../../src/components/BirthPlan/utils/birthPlanUtils.ts","../../src/components/BirthPlan/editor/editorHelpers.tsx","../../src/components/BirthPlan/common/BackToTopButton.tsx","../../src/components/BirthPlan/BirthPlanEditor.tsx","../../src/components/BirthPlan/preview/PreviewHeader.tsx","../../src/components/BirthPlan/preview/PreviewSection.tsx","../../src/components/BirthPlan/preview/SignatureSection.tsx","../../src/components/BirthPlan/preview/PrintTitle.tsx","../../src/components/BirthPlan/preview/PrintFooter.tsx","../../src/components/BirthPlan/BirthPlanPreview.tsx","../../src/components/BirthPlan/EmailShareDialog.tsx","../../src/components/BirthPlan/share/NextSteps.tsx","../../src/components/BirthPlan/ShareOption.tsx","../../src/components/BirthPlan/share/ShareOptionsGrid.tsx","../../src/components/BirthPlan/utils/export/renderHeader.ts","../../src/components/BirthPlan/utils/export/renderContent.ts","../../src/components/BirthPlan/utils/export/index.ts","../../src/components/BirthPlan/utils/export/renderSignatures.ts","../../src/components/BirthPlan/utils/export/renderFooter.ts","../../src/components/BirthPlan/share/ExportHandlers.ts","../../src/components/BirthPlan/BirthPlanShare.tsx","../../src/components/BirthPlan/StageContent.tsx","../../src/components/Footer.tsx","../../src/components/BirthPlan/BuilderMainContent.tsx","../../src/components/BirthPlan/PaymentGate.tsx","../../src/components/BirthPlan/LoadingIndicator.tsx","../../src/components/BirthPlan/BirthPlanBuilder.tsx","../../src/components/BirthPlan/hooks/useBirthPlanState.tsx","../../src/components/BirthPlan/EmbeddedBirthPlanBuilder.tsx","../../src/App.tsx","../../src/main.tsx","../../src/registerSW.tsx"],"sourcesContent":["\nimport { useNavigate } from \"react-router-dom\";\n\n/**\n * Hook to handle navigation within the application\n * Uses react-router-dom's useNavigate hook\n */\nexport const useNavigation = () => {\n  const navigate = useNavigate();\n  \n  const navigateTo = (path: string) => {\n    console.log(\"Navigating to:\", path);\n    navigate(path);\n  };\n  \n  return { navigateTo };\n};\n","\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useNavigation } from \"@/hooks/useNavigation\";\nimport { useDomainDebug } from \"@/hooks/useDomainDebug\";\n\nconst NotFound = () => {\n  const location = useLocation();\n  const { navigateTo } = useNavigation();\n  useDomainDebug(); // Add domain debugging\n\n  useEffect(() => {\n    console.error(\n      \"404 Error: User attempted to access non-existent route:\",\n      location.pathname\n    );\n    \n    // Log additional information that might help with debugging\n    console.log(\"Current URL:\", window.location.href);\n    console.log(\"Hostname:\", window.location.hostname);\n    console.log(\"React Router Path:\", location.pathname);\n    console.log(\"Using HashRouter:\", window.location.hash !== \"\");\n  }, [location.pathname]);\n\n  const handleBackToHome = () => {\n    navigateTo(\"/\");\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"text-center max-w-md p-8 bg-white rounded-lg shadow-md\">\n        <h1 className=\"text-6xl font-bold text-red-500 mb-4\">404</h1>\n        <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Página não encontrada</h2>\n        <p className=\"text-gray-600 mb-6\">\n          O endereço <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">{location.pathname}</span> não existe neste site.\n        </p>\n        <button \n          onClick={handleBackToHome}\n          className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n        >\n          Voltar para o Início\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function Header() {\n  const [scrolled, setScrolled] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    const handleScroll = () => {\n      const isScrolled = window.scrollY > 10;\n      if (isScrolled !== scrolled) {\n        setScrolled(isScrolled);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [scrolled]);\n\n  const handleNavigate = (path: string) => {\n    console.log('Navigating to:', path);\n    navigate(path);\n  };\n\n  return (\n    <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n      scrolled ? 'bg-white/95 backdrop-blur-sm shadow-sm' : 'bg-white'\n    }`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16 md:h-20\">\n          <div className=\"flex items-center\">\n            <button \n              onClick={() => handleNavigate('/guia-online')}\n              className=\"flex items-center\"\n            >\n              <img \n                src=\"/lovable-uploads/6f452e84-0922-495e-bad9-57a66fa763f6.png\" \n                alt=\"Energia Materna Logo\" \n                className=\"h-10 md:h-14 w-auto\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","\nimport { FileText } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useNavigation } from '@/hooks/useNavigation';\n\ntype BuilderStage = 'welcome' | 'questionnaire' | 'editor' | 'preview' | 'share';\n\ninterface BirthPlanHeaderProps {\n  currentStage: BuilderStage;\n  onStageChange: (stage: BuilderStage) => void;\n}\n\nexport function BirthPlanHeader({ currentStage, onStageChange }: BirthPlanHeaderProps) {\n  return (\n    <header className=\"bg-maternal-500 text-white py-4 px-4 sm:px-6 lg:px-8 shadow-md print:hidden\">\n      <div className=\"max-w-6xl mx-auto flex justify-between items-center\">\n        <div className=\"flex items-center space-x-2\">\n          <FileText className=\"h-6 w-6 text-maternal-100\" />\n          <h1 className=\"text-xl font-bold\">Construa seu Plano de Parto</h1>\n        </div>\n        \n        <div>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={() => window.open(\"/guia-online\", \"_blank\")}\n            className=\"text-white bg-maternal-600 hover:bg-maternal-500 border-maternal-300\"\n          >\n            Voltar ao Guia\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","\nimport { Button } from '@/components/ui/button';\nimport { ChevronRight } from 'lucide-react';\n\ninterface BirthPlanWelcomeProps {\n  onStart: () => void;\n}\n\nexport function BirthPlanWelcome({ onStart }: BirthPlanWelcomeProps) {\n  return (\n    <div className=\"animate-fade-in\">\n      <h1 className=\"text-3xl font-bold text-maternal-900 mb-6\">Bem-vinda ao Construtor de Plano de Parto!</h1>\n      \n      <div className=\"prose max-w-none\">\n        <p className=\"text-lg mb-4\">\n          Olá! Estamos muito felizes que você decidiu criar seu plano de parto personalizado.\n        </p>\n        \n        <p className=\"mb-6\">\n          Este construtor vai te guiar através de um processo simples para criar um plano de parto\n          detalhado que atenda às suas necessidades específicas e preferências para o nascimento do seu bebê.\n        </p>\n        \n        <h2 className=\"text-2xl font-semibold text-maternal-800 mt-8 mb-4\">Como funciona?</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-maternal-50 p-6 rounded-lg border border-maternal-100\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-maternal-600 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold mr-2\">1</div>\n              <h3 className=\"font-semibold text-lg\">Responda um questionário</h3>\n            </div>\n            <p>Compartilhe informações sobre sua gravidez, condições de saúde e preferências para o parto.</p>\n          </div>\n          \n          <div className=\"bg-maternal-50 p-6 rounded-lg border border-maternal-100\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-maternal-600 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold mr-2\">2</div>\n              <h3 className=\"font-semibold text-lg\">Personalize seu plano</h3>\n            </div>\n            <p>Com base nas suas respostas, criaremos um plano inicial que você poderá editar e personalizar.</p>\n          </div>\n          \n          <div className=\"bg-maternal-50 p-6 rounded-lg border border-maternal-100\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-maternal-600 text-white rounded-full w-8 h-8 flex items-center justify-center font-bold mr-2\">3</div>\n              <h3 className=\"font-semibold text-lg\">Compartilhe e imprima</h3>\n            </div>\n            <p>Quando estiver pronto, você poderá compartilhar seu plano com sua equipe médica e imprimi-lo.</p>\n          </div>\n        </div>\n        \n        <div className=\"bg-maternal-100 p-6 rounded-lg border-l-4 border-maternal-600 mb-6\">\n          <p className=\"font-medium text-maternal-900\">\n            Importante: Este plano de parto é um documento de comunicação, não um contrato rígido.\n            É recomendável discutir seu plano finalizado com seu médico ou obstetra para garantir\n            que ele seja adequado para sua situação específica.\n          </p>\n        </div>\n      </div>\n      \n      <div className=\"mt-8 text-center\">\n        <Button \n          onClick={onStart}\n          className=\"bg-maternal-600 hover:bg-maternal-700 flex items-center mx-auto\"\n        >\n          Começar a criar meu Plano de Parto <ChevronRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import { \n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Question } from './types/questionnaire';\nimport { Control } from 'react-hook-form';\n\ninterface QuestionFieldProps {\n  question: Question;\n  errors: any;\n  control: Control<Record<string, any>, any>;\n}\n\nexport function QuestionField({ question, errors, control }: QuestionFieldProps) {\n  return (\n    <FormItem key={question.id} className=\"space-y-2\">\n      <div className=\"flex items-start gap-2\">\n        <FormLabel className=\"block font-medium text-maternal-900\">\n          {question.text} {question.isRequired && <span className=\"text-red-500\">*</span>}\n        </FormLabel>\n      </div>\n      \n      {question.description && (\n        <div className=\"text-sm text-maternal-600 italic mb-2\">\n          {question.description}\n        </div>\n      )}\n      \n      {question.type === 'text' && (\n        <TextQuestion question={question} control={control} />\n      )}\n      \n      {question.type === 'textarea' && (\n        <TextareaQuestion question={question} control={control} />\n      )}\n      \n      {question.type === 'radio' && question.options && (\n        <RadioQuestion question={question} control={control} />\n      )}\n      \n      {question.type === 'checkbox' && question.options && (\n        <CheckboxQuestion question={question} control={control} />\n      )}\n      \n      {question.type === 'select' && question.options && (\n        <SelectQuestion question={question} control={control} />\n      )}\n      \n      {errors[question.id] && (\n        <FormMessage>Este campo é obrigatório</FormMessage>\n      )}\n    </FormItem>\n  );\n}\n\nfunction TextQuestion({ question, control }: { question: Question; control: Control<Record<string, any>, any> }) {\n  return (\n    <FormField\n      control={control}\n      name={question.id}\n      rules={{ required: question.isRequired }}\n      render={({ field }) => (\n        <FormControl>\n          <Input\n            id={question.id}\n            type=\"text\"\n            className=\"w-full\"\n            {...field}\n          />\n        </FormControl>\n      )}\n    />\n  );\n}\n\nfunction TextareaQuestion({ question, control }: { question: Question; control: Control<Record<string, any>, any> }) {\n  return (\n    <FormField\n      control={control}\n      name={question.id}\n      rules={{ required: question.isRequired }}\n      render={({ field }) => (\n        <FormControl>\n          <Textarea\n            id={question.id}\n            className=\"w-full\"\n            rows={4}\n            {...field}\n          />\n        </FormControl>\n      )}\n    />\n  );\n}\n\nfunction RadioQuestion({ question, control }: { question: Question; control: Control<Record<string, any>, any> }) {\n  return (\n    <FormField\n      control={control}\n      name={question.id}\n      rules={{ required: question.isRequired }}\n      render={({ field }) => (\n        <FormControl>\n          <RadioGroup\n            onValueChange={field.onChange}\n            defaultValue={field.value}\n            className=\"space-y-2\"\n          >\n            {question.options?.map((option) => (\n              <div key={option} className=\"flex items-center space-x-2\">\n                <RadioGroupItem value={option} id={`${question.id}-${option}`} />\n                <label htmlFor={`${question.id}-${option}`} className=\"text-maternal-800\">\n                  {option}\n                </label>\n              </div>\n            ))}\n          </RadioGroup>\n        </FormControl>\n      )}\n    />\n  );\n}\n\nfunction CheckboxQuestion({ question, control }: { question: Question; control: Control<Record<string, any>, any> }) {\n  return (\n    <div className=\"space-y-2\">\n      {question.options?.map((option) => (\n        <FormField\n          key={option}\n          control={control}\n          name={`${question.id}.${option}`}\n          render={({ field }) => (\n            <div className=\"flex items-center space-x-2\">\n              <FormControl>\n                <Checkbox\n                  id={`${question.id}-${option}`}\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                  className=\"rounded-sm\"\n                />\n              </FormControl>\n              <label\n                htmlFor={`${question.id}-${option}`}\n                className=\"text-maternal-800\"\n              >\n                {option}\n              </label>\n            </div>\n          )}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction SelectQuestion({ question, control }: { question: Question; control: Control<Record<string, any>, any> }) {\n  return (\n    <FormField\n      control={control}\n      name={question.id}\n      rules={{ required: question.isRequired }}\n      render={({ field }) => (\n        <FormControl>\n          <Select\n            onValueChange={field.onChange}\n            defaultValue={field.value}\n          >\n            <SelectTrigger className=\"w-full\">\n              <SelectValue placeholder=\"Selecione uma opção\" />\n            </SelectTrigger>\n            <SelectContent>\n              {question.options?.map((option) => (\n                <SelectItem key={option} value={option}>\n                  {option}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </FormControl>\n      )}\n    />\n  );\n}\n","\nimport { \n  User, \n  Sun, \n  HeartPulse,\n  Baby, \n  Scissors, \n  Heart,\n  AlertTriangle,\n  LucideIcon\n} from 'lucide-react';\n\nexport const getSectionIcon = (sectionId: string): LucideIcon | null => {\n  const iconMap: Record<string, LucideIcon> = {\n    'personal': User,\n    'atmosphere': Sun,\n    'laborPreferences': HeartPulse,\n    'birth': Baby,\n    'cesarean': Scissors,\n    'postpartum': Heart,\n    'specialSituations': AlertTriangle\n  };\n  \n  return iconMap[sectionId] || null;\n};\n","\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\nimport { QuestionSection } from './types/questionnaire';\nimport { \n  Form,\n} from '@/components/ui/form';\nimport { useEffect } from 'react';\nimport { QuestionField } from './QuestionField';\nimport { getSectionIcon } from './utils/sectionIcons';\n\ninterface QuestionnaireSectionProps {\n  section: QuestionSection;\n  onNext: (data: Record<string, any>) => void;\n  onPrevious: () => void;\n  isFirstSection: boolean;\n  isLastSection: boolean;\n  initialData?: Record<string, any>;\n}\n\nexport function QuestionnaireSection({ \n  section, \n  onNext, \n  onPrevious, \n  isFirstSection, \n  isLastSection,\n  initialData = {}\n}: QuestionnaireSectionProps) {\n  const form = useForm({\n    defaultValues: initialData\n  });\n  \n  const { handleSubmit, formState, watch, control, setValue } = form;\n  const { errors } = formState;\n  \n  // Watch all form values for conditional questions\n  const watchedValues = watch();\n\n  // Set up initial values if provided\n  useEffect(() => {\n    if (Object.keys(initialData).length > 0) {\n      Object.entries(initialData).forEach(([key, value]) => {\n        setValue(key, value);\n      });\n    }\n  }, [initialData, setValue]);\n  \n  const SectionIcon = getSectionIcon(section.id);\n  \n  // Scroll to top when section changes\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [section.id]);\n  \n  return (\n    <div className=\"animate-fade-in\">\n      <h1 className=\"text-3xl font-bold text-maternal-900 mb-2\">Questionário do Plano de Parto</h1>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {SectionIcon && <SectionIcon className=\"h-6 w-6 text-maternal-600\" />}\n        <p className=\"text-lg text-maternal-700\">\n          {section.title}\n        </p>\n      </div>\n      \n      <div className=\"bg-maternal-50 p-4 rounded-lg mb-6\">\n        <p>{section.description}</p>\n      </div>\n      \n      <Form {...form}>\n        <form onSubmit={handleSubmit(onNext)}>\n          <Card className=\"mb-6\">\n            <CardHeader>\n              <div className=\"flex items-center gap-2\">\n                {SectionIcon && <SectionIcon className=\"h-5 w-5 text-maternal-600\" />}\n                <CardTitle>{section.title}</CardTitle>\n              </div>\n              <CardDescription>Responda às perguntas abaixo para personalizar seu plano de parto</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {section.questions.map((question) => {\n                // Check if this question should be conditionally displayed\n                if (question.conditionalDisplay) {\n                  const dependsOn = question.conditionalDisplay.dependsOn;\n                  const showWhen = question.conditionalDisplay.showWhen;\n                  const dependentValue = watchedValues[dependsOn];\n                  \n                  // If the dependent value doesn't match the condition, don't render this question\n                  if (Array.isArray(showWhen)) {\n                    if (!showWhen.includes(dependentValue)) return null;\n                  } else {\n                    if (dependentValue !== showWhen) return null;\n                  }\n                }\n                \n                return (\n                  <QuestionField \n                    key={question.id} \n                    question={question} \n                    errors={errors}\n                    control={control}\n                  />\n                );\n              })}\n            </CardContent>\n          </Card>\n          \n          <div className=\"flex justify-between mt-8\">\n            <Button \n              type=\"button\"\n              variant=\"outline\" \n              onClick={onPrevious}\n              disabled={isFirstSection}\n              className=\"flex items-center\"\n            >\n              <ArrowLeft className=\"mr-2 h-4 w-4\" /> Seção Anterior\n            </Button>\n            \n            <Button \n              type=\"submit\"\n              className=\"bg-maternal-600 hover:bg-maternal-700 flex items-center\"\n            >\n              {isLastSection ? 'Finalizar e Gerar Plano' : 'Próxima Seção'} \n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n}\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const personalSection: QuestionSection = {\n  id: 'personal',\n  title: 'Informações Pessoais',\n  description: 'Vamos começar com algumas informações básicas sobre você e sua gravidez',\n  questions: [\n    {\n      id: 'name',\n      text: 'Qual é o seu nome completo?',\n      type: 'text',\n      isRequired: true,\n    },\n    {\n      id: 'dueDate',\n      text: 'Qual é a sua data prevista para o parto?',\n      type: 'text',\n      isRequired: true,\n    },\n    {\n      id: 'healthProvider',\n      text: 'Quem é seu médico/obstetra?',\n      type: 'text',\n      isRequired: true,\n    },\n    {\n      id: 'birthLocation',\n      text: 'Onde você planeja dar à luz?',\n      type: 'radio',\n      options: ['Hospital/Maternidade', 'Casa de Parto', 'Domicílio (Parto em Casa)'],\n      isRequired: true,\n      description: 'É importante ter um hospital/maternidade de referência mesmo para partos domiciliares ou em casa de parto.'\n    },\n    {\n      id: 'hospital',\n      text: 'Qual hospital/maternidade de referência para o seu parto?',\n      type: 'text',\n      isRequired: true,\n      description: 'Hospital que você irá caso precise, mesmo se planeja parto domiciliar ou em casa de parto.'\n    },\n    {\n      id: 'pediatrician',\n      text: 'Você terá acompanhamento de um(a) Pediatra Neonatal particular?',\n      type: 'radio',\n      options: ['Sim', 'Não'],\n      isRequired: false,\n      description: 'Contratar um pediatra neonatal particular garante continuidade nos cuidados, desde o nascimento até o acompanhamento pediátrico posterior.'\n    },\n    {\n      id: 'pediatricianName',\n      text: 'Nome do(a) Pediatra Neonatal:',\n      type: 'text',\n      conditionalDisplay: {\n        dependsOn: 'pediatrician',\n        showWhen: 'Sim',\n      },\n      isRequired: false,\n    },\n    {\n      id: 'midwife',\n      text: 'Você terá acompanhamento de uma Enfermeira Obstetriz?',\n      type: 'radio',\n      options: ['Sim', 'Não'],\n      isRequired: false,\n    },\n    {\n      id: 'midwifeName',\n      text: 'Se sim, qual o nome da sua Enfermeira Obstetriz?',\n      type: 'text',\n      conditionalDisplay: {\n        dependsOn: 'midwife',\n        showWhen: 'Sim',\n      },\n      isRequired: false,\n    },\n    {\n      id: 'doula',\n      text: 'Você terá acompanhamento de uma doula?',\n      type: 'radio',\n      options: ['Sim', 'Não'],\n      isRequired: false,\n    },\n    {\n      id: 'doulaName',\n      text: 'Se sim, qual o nome da sua doula?',\n      type: 'text',\n      conditionalDisplay: {\n        dependsOn: 'doula',\n        showWhen: 'Sim',\n      },\n      isRequired: false,\n    },\n    {\n      id: 'companions',\n      text: 'Quem você gostaria que estivesse presente durante o parto?',\n      type: 'textarea',\n      isRequired: true,\n    },\n  ],\n};\n","\nimport { personalSection } from './personalSection';\nimport { atmosphereSection } from './atmosphereSection';\nimport { laborPreferencesSection } from './laborPreferencesSection';\nimport { birthSection } from './birthSection';\nimport { cesareanSection } from './cesareanSection';\nimport { postpartumSection } from './postpartumSection';\nimport { specialSituationsSection } from './specialSituationsSection';\nimport { QuestionSection } from '../types/questionnaire';\n\n// Export all sections in an array to maintain original order\nexport const questionnaireSections: QuestionSection[] = [\n  personalSection,\n  atmosphereSection,\n  laborPreferencesSection,\n  birthSection,\n  cesareanSection,\n  postpartumSection,\n  specialSituationsSection\n];\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const atmosphereSection: QuestionSection = {\n  id: 'atmosphere',\n  title: 'Atmosfera e Ambiente',\n  description: 'Suas preferências para o ambiente durante o trabalho de parto e nascimento',\n  questions: [\n    {\n      id: 'lighting',\n      text: 'Preferências para iluminação:',\n      type: 'checkbox',\n      options: [\n        'Luzes baixas/atenuadas',\n        'Luz natural quando possível',\n        'Evitar luzes fortes',\n        'Trazer minha própria iluminação (velas LED, etc)',\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'sound',\n      text: 'Preferências para som e música:',\n      type: 'checkbox',\n      options: [\n        'Ambiente tranquilo e silencioso',\n        'Trarei minha própria playlist',\n        'Conversas e comandos em tom de voz baixo',\n        'Sem preferências específicas',\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'clothing',\n      text: 'Preferências sobre vestimenta durante o trabalho de parto:',\n      type: 'radio',\n      options: [\n        'Usar minhas próprias roupas',\n        'Usar camisola do hospital',\n        'Ficar sem roupa se desejar',\n        'Decidir no momento'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'photos',\n      text: 'Sobre fotos e filmagens:',\n      type: 'checkbox',\n      options: [\n        'Permitido fotografar todo o processo',\n        'Fotografias apenas em momentos específicos',\n        'Sem fotografias',\n        'Trarei fotógrafo profissional',\n      ],\n      isRequired: false,\n    },\n  ],\n};\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const laborPreferencesSection: QuestionSection = {\n  id: 'laborPreferences',\n  title: 'Trabalho de Parto',\n  description: 'Suas preferências durante o trabalho de parto',\n  questions: [\n    {\n      id: 'mobility',\n      text: 'Sobre sua movimentação durante o trabalho de parto:',\n      type: 'checkbox',\n      options: [\n        'Liberdade para me movimentar conforme desejar',\n        'Acesso a banheira/chuveiro',\n        'Uso de bola de pilates',\n        'Caminhar livremente',\n        'Preferência por permanecer na cama'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'positions',\n      text: 'Posições que você gostaria de experimentar:',\n      type: 'checkbox',\n      options: [\n        'De cócoras',\n        'De quatro',\n        'Lateralizada',\n        'Em pé',\n        'Na banheira',\n        'Decidir no momento'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'hydration',\n      text: 'Sobre hidratação e alimentação:',\n      type: 'checkbox',\n      options: [\n        'Liberdade para beber água/líquidos',\n        'Liberdade para alimentação leve',\n        'Gostaria de ter acesso a picolés/gelo',\n        'Aceito apenas soro se necessário'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'monitoring',\n      text: 'Sobre monitoramento fetal:',\n      type: 'radio',\n      options: [\n        'Monitoramento intermitente, se possível',\n        'Aceito monitoramento contínuo apenas se necessário',\n        'Prefiro monitoramento contínuo',\n        'Conforme recomendação médica'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'painRelief',\n      text: 'Sobre alívio da dor:',\n      type: 'checkbox',\n      options: [\n        'Prefiro evitar analgesia farmacológica',\n        'Gostaria de ter acesso à analgesia se solicitar',\n        'Gostaria de usar métodos não-farmacológicos (chuveiro, massagem, etc)',\n        'Prefiro decidir durante o trabalho de parto'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'interventions',\n      text: 'Sobre procedimentos e intervenções:',\n      type: 'checkbox',\n      options: [\n        'Prefiro evitar ocitocina sintética',\n        'Prefiro evitar ruptura artificial de membranas',\n        'Aceito intervenções apenas se explicadas e necessárias',\n        'Quero ser informada antes de qualquer procedimento',\n        'Gostaria de tempo para tomar decisões (quando não for emergência)',\n        'Gostaria que alternativas menos invasivas sejam tentadas primeiro',\n        'Prefiro seguir as recomendações médicas'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'informedConsent',\n      text: 'Sobre consentimento informado:',\n      type: 'checkbox',\n      options: [\n        'Quero ser consultada sobre os riscos e benefícios de cada procedimento',\n        'Quero entender por que o procedimento é necessário',\n        'Gostaria de saber quais são as alternativas disponíveis',\n        'Em caso de incapacidade, meu(minha) acompanhante deve ser consultado(a)'\n      ],\n      isRequired: false,\n    },\n  ],\n};\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const birthSection: QuestionSection = {\n  id: 'birth',\n  title: 'Nascimento',\n  description: 'Suas preferências para o momento do nascimento',\n  questions: [\n    {\n      id: 'birthPositions',\n      text: 'Posições para o nascimento:',\n      type: 'checkbox',\n      options: [\n        'Liberdade para escolher a posição',\n        'Preferência por posição vertical/cócoras',\n        'Lateralizada',\n        'De quatro',\n        'Semi-sentada',\n        'Conforme orientação no momento'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'episiotomy',\n      text: 'Sobre episiotomia:',\n      type: 'radio',\n      options: [\n        'Prefiro evitar, mesmo que resulte em laceração natural',\n        'Aceito apenas se absolutamente necessário',\n        'Conforme recomendação médica no momento'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'cordCutting',\n      text: 'Sobre o corte do cordão umbilical:',\n      type: 'checkbox',\n      options: [\n        'Aguardar o cordão parar de pulsar antes do corte',\n        'Pai/acompanhante realizar o corte',\n        'Coleta de células-tronco',\n        'Conforme protocolo hospitalar'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'skinToSkin',\n      text: 'Contato pele a pele imediato:',\n      type: 'radio',\n      options: [\n        'Sim, mesmo antes dos procedimentos de rotina',\n        'Sim, após procedimentos essenciais',\n        'Não, prefiro que limpem o bebê primeiro',\n        'Conforme recomendação médica'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'placenta',\n      text: 'Sobre a placenta:',\n      type: 'radio',\n      options: [\n        'Quero ver a placenta',\n        'Gostaria de levar a placenta',\n        'Não tenho interesse na placenta',\n        'Conforme protocolo hospitalar'\n      ],\n      isRequired: false,\n    },\n  ],\n};\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const cesareanSection: QuestionSection = {\n  id: 'cesarean',\n  title: 'Em Caso de Cesárea',\n  description: 'Suas preferências caso seja necessária uma cesárea',\n  questions: [\n    {\n      id: 'cesareanPreferences',\n      text: 'Preferências para cesárea (se necessária):',\n      type: 'checkbox',\n      options: [\n        'Cesárea humanizada/gentil',\n        'Explicação dos procedimentos em tempo real',\n        'Música ambiente de minha escolha',\n        'Diminuição das luzes, se possível',\n        'Sem preferências específicas'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'anesthesia',\n      text: 'Tipo de anestesia preferida:',\n      type: 'radio',\n      options: [\n        'Raquidiana/peridural',\n        'Anestesia geral apenas se necessário',\n        'Conforme recomendação do anestesista'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'cesareanCompanion',\n      text: 'Sobre acompanhante na cesárea:',\n      type: 'radio',\n      options: [\n        'Desejo acompanhante presente durante todo o procedimento',\n        'Desejo acompanhante apenas após o nascimento',\n        'Não quero acompanhante na sala'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'curtain',\n      text: 'Sobre a cortina cirúrgica:',\n      type: 'radio',\n      options: [\n        'Gostaria que a cortina fosse abaixada no momento do nascimento',\n        'Prefiro que a cortina seja mantida o tempo todo',\n        'Sem preferências'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'cesareanSkinToSkin',\n      text: 'Contato pele a pele na cesárea:',\n      type: 'radio',\n      options: [\n        'Desejo contato pele a pele imediato ainda na sala cirúrgica',\n        'Desejo que o pai/acompanhante tenha contato pele a pele se eu não puder',\n        'Prefiro que o bebê seja examinado antes',\n        'Conforme possibilidade médica'\n      ],\n      isRequired: false,\n    },\n  ],\n};\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const postpartumSection: QuestionSection = {\n  id: 'postpartum',\n  title: 'Pós-Parto',\n  description: 'Suas preferências para o período pós-parto',\n  questions: [\n    {\n      id: 'firstHour',\n      text: 'Primeira hora após o nascimento:',\n      type: 'checkbox',\n      options: [\n        'Hora dourada ininterrupta (contato pele a pele)',\n        'Amamentação na primeira hora',\n        'Procedimentos de rotina adiados quando possível',\n        'Preferência que pai/acompanhante permaneça junto todo o tempo',\n        'Sem preferências específicas'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'breastfeeding',\n      text: 'Sobre amamentação:',\n      type: 'checkbox',\n      options: [\n        'Desejo amamentar exclusivamente',\n        'Aceito complemento apenas se necessário e com meu consentimento',\n        'Não desejo que ofereçam chupetas/bicos artificiais',\n        'Gostaria de suporte de consultora de amamentação',\n        'Não planejo amamentar'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'newbornCare',\n      text: 'Cuidados com o recém-nascido:',\n      type: 'checkbox',\n      options: [\n        'Desejo realizar o banho do bebê',\n        'Prefiro adiar o primeiro banho',\n        'Quero que exames sejam feitos com o bebê em contato comigo',\n        'Desejo alojamento conjunto o tempo todo',\n        'Desejo administrar as vacinas'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'vaccination',\n      text: 'Sobre vacinação do recém-nascido:',\n      type: 'radio',\n      options: [\n        'Todas as vacinas conforme protocolo',\n        'Desejo adiar algumas vacinas (especificar)',\n        'Desejo que sejam aplicadas com o bebê no meu colo',\n        'Sem preferências específicas'\n      ],\n      isRequired: false,\n    },\n    {\n      id: 'motherCare',\n      text: 'Cuidados com a mãe no pós-parto:',\n      type: 'checkbox',\n      options: [\n        'Respeito ao meu descanso e privacidade',\n        'Visitas limitadas conforme minha escolha',\n        'Preferência por analgesia não-opioide',\n        'Desejo suporte para amamentação',\n        'Informar-me sobre decisões relacionadas ao meu cuidado'\n      ],\n      isRequired: false,\n    },\n  ],\n};\n","\nimport { QuestionSection } from '../types/questionnaire';\n\nexport const specialSituationsSection: QuestionSection = {\n  id: 'specialSituations',\n  title: 'Situações Especiais',\n  description: 'Preferências para situações inesperadas e emergências que podem ocorrer durante o parto',\n  questions: [\n    {\n      id: 'complications',\n      text: 'Em caso de complicações:',\n      type: 'checkbox',\n      options: [\n        'Explicar claramente a situação antes de qualquer procedimento',\n        'O pai/acompanhante deve ser informado se eu não puder',\n        'Permitir que eu participe das decisões sempre que possível',\n        'Priorizar a saúde e segurança conforme indicação médica',\n        'Quero ser informada sobre riscos e benefícios de qualquer intervenção emergencial'\n      ],\n      isRequired: false,\n      description: 'Escolhas para casos em que o parto não ocorre conforme o planejado'\n    },\n    {\n      id: 'cascadeInterventions',\n      text: 'Prevenção do efeito cascata de intervenções:',\n      type: 'checkbox',\n      options: [\n        'Desejo ser consultada antes de qualquer intervenção, mesmo as consideradas rotineiras',\n        'Quero discutir alternativas antes de iniciar qualquer intervenção médica',\n        'Prefiro aguardar o tempo fisiológico do meu corpo antes de considerar aceleradores',\n        'Solicito que toda indução ou aceleração do parto seja justificada clinicamente',\n        'Gostaria de evitar ocitocina sintética a menos que seja absolutamente necessária',\n        'Se for necessária ocitocina, prefiro iniciar com doses baixas e aumentar gradualmente',\n        'Desejo evitar amniotomia (romper a bolsa) a menos que haja indicação clínica clara',\n        'Prefiro tentar métodos não-farmacológicos antes de recorrer a medicamentos',\n        'Entendo que cada intervenção pode levar à necessidade de outras e quero ser informada deste risco',\n        'Gostaria de ter tempo para considerar as opções antes de concordar com procedimentos eletivos'\n      ],\n      isRequired: false,\n      description: 'Preferências para evitar intervenções desnecessárias que podem desencadear complicações'\n    },\n    {\n      id: 'emergencyPreferences',\n      text: 'Situações de emergência:',\n      type: 'checkbox',\n      options: [\n        'Em caso de hemorragia, autorizo todas as intervenções necessárias',\n        'Em situações de sofrimento fetal, priorize a segurança do bebê',\n        'Se for necessária uma cesariana de emergência, desejo que meu acompanhante permaneça comigo',\n        'Caso ocorra prolapso de cordão, confio na equipe para tomar as medidas adequadas',\n        'Em caso de distocia de ombro, aceito as manobras necessárias para facilitar o nascimento',\n        'Desejo ser informada sobre a situação mesmo em emergências, se possível',\n        'Autorizo o uso de fórceps ou vácuo-extrator se houver indicação obstétrica de urgência',\n        'Em emergências, gostaria que meu acompanhante fosse mantido informado em tempo real',\n        'Caso precise ser anestesiada ou sedada, confio nas decisões médicas para nossa segurança',\n        'Prefiro que procedimentos invasivos sejam explicados mesmo que rapidamente'\n      ],\n      isRequired: false,\n      description: 'Suas preferências específicas para emergências obstétricas'\n    },\n    {\n      id: 'highRiskComplications',\n      text: 'Complicações de alto risco:',\n      type: 'checkbox',\n      options: [\n        'Em caso de descolamento prematuro de placenta, aceito cesariana imediata',\n        'Se houver sinais de rotura uterina, autorizo intervenção imediata',\n        'Para hemorragia pós-parto, aceito todas as medidas necessárias para controle',\n        'Em caso de prolapso de cordão, aceito posicionamento de quatro apoios e cesariana',\n        'Caso haja sinais de infecção uterina, aceito medicação e intervenções necessárias',\n        'Em casos de pré-eclâmpsia severa, confio no julgamento médico para seguir protocolos',\n        'Para placenta prévia com sangramento, aceito repouso e/ou cesariana conforme necessário',\n        'Se houver suspeita de embolia amniótica, autorizo todas as medidas de suporte',\n        'Em caso de aspiração de mecônio pelo bebê, concordo com aspiração e tratamento imediatos',\n        'Se houver parada cardíaca materna, priorize a ressuscitação e cesariana perimortem se necessário'\n      ],\n      isRequired: false,\n      description: 'Suas preferências para situações que representam riscos graves'\n    },\n    {\n      id: 'lowRiskOccurrences',\n      text: 'Ocorrências de baixo risco:',\n      type: 'checkbox',\n      options: [\n        'Caso seja detectada circular de cordão, prefiro que seja resolvida naturalmente quando possível',\n        'Para distocia de ombro leve, prefiro primeiro tentar mudanças de posição',\n        'Se o trabalho de parto estiver prolongado, gostaria de evitar acelerações se eu e o bebê estivermos bem',\n        'Caso a bolsa rompa, prefiro aguardar o início natural do trabalho de parto (até 24h se não houver sinais de infecção)',\n        'Se o bebê for considerado \"grande\", ainda assim gostaria de tentar parto normal com assistência adequada',\n        'Em caso de mecônio leve na água, prefiro monitoramento fetal ao invés de intervenção imediata',\n        'Para desacelerações ocasionais dos batimentos fetais, gostaria de tentar mudança de posição primeiro',\n        'Se houver febre materna leve, prefiro usar métodos físicos de resfriamento antes de medicação',\n        'Caso o colo uterino dilate lentamente, gostaria de ter paciência se os sinais vitais estiverem normais',\n        'Para dor lombar intensa durante o trabalho de parto, gostaria de tentar contrapressão e massagem'\n      ],\n      isRequired: false,\n      description: 'Preferências para situações comuns que geralmente não representam emergências'\n    },\n    {\n      id: 'nicu',\n      text: 'Se o bebê precisar ir para UTI neonatal:',\n      type: 'checkbox',\n      options: [\n        'Desejo ver o bebê antes da transferência',\n        'O pai/acompanhante deve acompanhar o bebê',\n        'Quero extrair leite para alimentação do bebê',\n        'Desejo praticar o método canguru assim que possível',\n        'Desejo participar dos cuidados do bebê',\n        'Quero ser informada constantemente sobre o estado de saúde do bebê'\n      ],\n      isRequired: false,\n      description: 'Preferências para situações em que o bebê necessita de cuidados intensivos'\n    },\n    {\n      id: 'unexpectedScenarios',\n      text: 'Em cenários não planejados, eu gostaria que:',\n      type: 'textarea',\n      isRequired: false,\n      description: 'Descreva como gostaria que a equipe procedesse em situações não previstas no plano'\n    },\n    {\n      id: 'specialWishes',\n      text: 'Outros desejos ou pedidos especiais:',\n      type: 'textarea',\n      isRequired: false,\n      description: 'Qualquer outra solicitação ou informação importante que não tenha sido abordada'\n    },\n  ],\n};\n","\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  Book, \n  CheckCircle, \n  User, \n  MoonStar, \n  Baby, \n  Stethoscope, \n  Heart, \n  AlertCircle,\n  ArrowLeft,\n  ArrowRight\n} from 'lucide-react';\n\ntype Section = {\n  id: string;\n  title: string;\n  color?: string;\n  icon?: React.ReactNode;\n};\n\ninterface BirthPlanSectionProgressProps {\n  sections: Section[];\n  currentSectionIndex: number;\n  onSectionClick: (index: number) => void;\n  stageType: 'questionnaire' | 'editor';\n  completedSections?: string[];\n  onPrevious?: () => void;\n  onNext?: () => void;\n}\n\nexport function BirthPlanSectionProgress({\n  sections,\n  currentSectionIndex,\n  onSectionClick,\n  stageType,\n  completedSections = [],\n  onPrevious,\n  onNext\n}: BirthPlanSectionProgressProps) {\n  // Calculate progress percentage based on completed sections or current index\n  const calculateProgress = () => {\n    if (completedSections.length > 0) {\n      return (completedSections.length / sections.length) * 100;\n    }\n    return ((currentSectionIndex + 1) / sections.length) * 100;\n  };\n\n  const progress = calculateProgress();\n  \n  // Get icon based on section id\n  const getSectionIcon = (sectionId: string) => {\n    switch (sectionId) {\n      case 'personalInfo':\n      case 'personal':\n        return <User size={16} />;\n      case 'atmosfera':\n      case 'atmosphere':\n        return <MoonStar size={16} />;\n      case 'trabalhoDeParto':\n      case 'labor':\n        return <Baby size={16} />;\n      case 'nascimento':\n      case 'birth':\n        return <Heart size={16} />;\n      case 'cesarea':\n      case 'cesarean':\n        return <Stethoscope size={16} />;\n      case 'posParto':\n      case 'postpartum':\n        return <Baby size={16} />;\n      case 'situacoesEspeciais':\n      case 'special':\n        return <AlertCircle size={16} />;\n      default:\n        return <Book size={16} />;\n    }\n  };\n\n  return (\n    <div className=\"mb-6 print:hidden\">\n      <div className=\"max-w-6xl mx-auto mb-2\">\n        {/* Only show progress bar for questionnaire stage */}\n        {stageType === 'questionnaire' && (\n          <>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm font-medium text-maternal-800\">Seu progresso</span>\n              <span className=\"text-sm font-medium text-maternal-800\" aria-live=\"polite\">{Math.round(progress)}%</span>\n            </div>\n            <Progress \n              value={progress} \n              className=\"h-2.5 bg-maternal-100\" \n              indicatorClassName=\"bg-maternal-500\"\n              aria-valuemin={0}\n              aria-valuemax={100}\n              aria-valuenow={progress}\n            />\n          </>\n        )}\n        \n        {/* Navigation buttons for editor top section */}\n        {stageType === 'editor' && onPrevious && onNext && (\n          <div className=\"flex justify-between mb-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onPrevious}\n              disabled={currentSectionIndex === 0}\n              className=\"flex items-center border-maternal-300 text-maternal-700 hover:bg-maternal-50\"\n            >\n              <ArrowLeft className=\"mr-2 h-4 w-4\" /> Seção Anterior\n            </Button>\n            \n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onNext}\n              disabled={currentSectionIndex === sections.length - 1}\n              className=\"flex items-center border-maternal-300 text-maternal-700 hover:bg-maternal-50\"\n            >\n              Próxima Seção <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between mt-4 gap-2 overflow-x-auto pb-2\">\n          {sections.map((section, index) => {\n            const isActive = index === currentSectionIndex;\n            const isCompleted = completedSections.includes(section.id) || index < currentSectionIndex;\n            \n            return (\n              <Button\n                key={section.id}\n                variant=\"ghost\"\n                size=\"sm\"\n                className={`flex-shrink-0 text-xs px-3 py-2 h-auto rounded-md flex items-center gap-1.5 ${\n                  isActive \n                    ? `bg-maternal-${section.color || '100'} text-maternal-900` \n                    : isCompleted \n                      ? 'text-maternal-700 bg-maternal-50' \n                      : 'text-maternal-500 hover:text-maternal-800 hover:bg-maternal-50'\n                }`}\n                onClick={() => onSectionClick(index)}\n              >\n                {getSectionIcon(section.id)}\n                <span className=\"hidden sm:inline\">{section.title}</span>\n                {isCompleted && !isActive && (\n                  <CheckCircle className=\"h-3 w-3 text-maternal-500 ml-1\" />\n                )}\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","\nimport { useState } from 'react';\nimport { QuestionnaireSection } from './QuestionnaireSection';\nimport { questionnaireSections } from './questionnaire';\nimport { BirthPlanSectionProgress } from './BirthPlanSectionProgress';\n\ninterface BirthPlanQuestionnaireProps {\n  onSubmit: (data: Record<string, any>) => void;\n}\n\nexport function BirthPlanQuestionnaire({ onSubmit }: BirthPlanQuestionnaireProps) {\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0);\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [completedSections, setCompletedSections] = useState<string[]>([]);\n  \n  const currentSection = questionnaireSections[currentSectionIndex];\n  const isFirstSection = currentSectionIndex === 0;\n  const isLastSection = currentSectionIndex === questionnaireSections.length - 1;\n  \n  const handleSectionSubmit = (data: Record<string, any>) => {\n    console.log(\"Section submitted with data:\", data);\n    \n    // Create a clean copy of the data to avoid mutation issues\n    const processedData = { ...data };\n    \n    // Save data from current section\n    const updatedFormData = {\n      ...formData,\n      ...processedData,\n    };\n    \n    console.log(\"Updated form data:\", updatedFormData);\n    setFormData(updatedFormData);\n    \n    // Mark this section as completed\n    if (!completedSections.includes(currentSection.id)) {\n      setCompletedSections([...completedSections, currentSection.id]);\n    }\n    \n    if (isLastSection) {\n      // If this is the last section, submit the complete form\n      console.log(\"Final form submission:\", updatedFormData);\n      onSubmit(updatedFormData);\n    } else {\n      // Otherwise, move to the next section\n      setCurrentSectionIndex(currentSectionIndex + 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  \n  const goToPreviousSection = () => {\n    if (!isFirstSection) {\n      setCurrentSectionIndex(currentSectionIndex - 1);\n      window.scrollTo(0, 0);\n    }\n  };\n  \n  const handleSectionClick = (index: number) => {\n    // Only allow navigating to completed sections or the current + 1 section\n    if (completedSections.includes(questionnaireSections[index].id) || \n        index === currentSectionIndex || \n        index === currentSectionIndex + 1 && completedSections.includes(questionnaireSections[currentSectionIndex].id)) {\n      setCurrentSectionIndex(index);\n      window.scrollTo(0, 0);\n    }\n  };\n  \n  return (\n    <>\n      <BirthPlanSectionProgress \n        sections={questionnaireSections}\n        currentSectionIndex={currentSectionIndex}\n        onSectionClick={handleSectionClick}\n        stageType=\"questionnaire\"\n        completedSections={completedSections}\n      />\n      \n      <QuestionnaireSection\n        section={currentSection}\n        onNext={handleSectionSubmit}\n        onPrevious={goToPreviousSection}\n        isFirstSection={isFirstSection}\n        isLastSection={isLastSection}\n        initialData={formData}\n      />\n    </>\n  );\n}\n","\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\n\ninterface SelectableOptionsProps {\n  question: any;\n  questionId: string;\n  selectedOptions: Record<string, Record<string, boolean>>;\n  setSelectedOptions: (value: Record<string, Record<string, boolean>>) => void;\n}\n\nexport function SelectableOptions({ \n  question, \n  questionId, \n  selectedOptions, \n  setSelectedOptions \n}: SelectableOptionsProps) {\n  if (!question.options || question.options.length === 0) {\n    return null;\n  }\n  \n  const handleCheckedChange = (option: string, checked: boolean) => {\n    const newSelectedOptions = {\n      ...selectedOptions,\n      [questionId]: {\n        ...selectedOptions[questionId],\n        [option]: checked\n      }\n    };\n    setSelectedOptions(newSelectedOptions);\n  };\n  \n  return (\n    <div className=\"space-y-2 ml-8 mt-2\">\n      {question.options.map((option: string) => {\n        const isSelected = selectedOptions[questionId]?.[option] || false;\n        return (\n          <div key={option} className=\"flex items-center space-x-2\">\n            <Checkbox\n              id={`option-${questionId}-${option}`}\n              checked={isSelected}\n              onCheckedChange={(checked) => {\n                handleCheckedChange(option, !!checked);\n              }}\n            />\n            <Label \n              htmlFor={`option-${questionId}-${option}`}\n              className={`text-sm ${isSelected ? 'font-medium' : 'text-gray-600'}`}\n            >\n              {option}\n            </Label>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","\nimport { Button } from '@/components/ui/button';\nimport { toast } from 'sonner';\nimport { SelectableOptions } from './SelectableOptions';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\n\ninterface OptionsDialogProps {\n  dialogOpen: boolean;\n  setDialogOpen: (value: boolean) => void;\n  activeFieldKey: string;\n  selectedOptions: Record<string, Record<string, boolean>>;\n  setSelectedOptions: (value: Record<string, Record<string, boolean>>) => void;\n  getRelevantQuestionsForField: (fieldKey: string) => Array<{question: any, sectionId: string}>;\n  handleAddSelectedOptions: () => void;\n}\n\nexport function OptionsDialog({\n  dialogOpen,\n  setDialogOpen,\n  activeFieldKey,\n  selectedOptions,\n  setSelectedOptions,\n  getRelevantQuestionsForField,\n  handleAddSelectedOptions\n}: OptionsDialogProps) {\n  return (\n    <DialogContent className=\"max-w-md\">\n      <DialogHeader>\n        <DialogTitle>Adicionar Respostas do Questionário</DialogTitle>\n      </DialogHeader>\n      \n      <div className=\"max-h-[60vh] overflow-y-auto py-4\">\n        {getRelevantQuestionsForField(activeFieldKey).length > 0 ? (\n          getRelevantQuestionsForField(activeFieldKey).map(({ question }) => {\n            const questionId = question.id;\n            \n            return (\n              <div key={questionId} className=\"py-3 border-b border-gray-100\">\n                <div className=\"font-medium text-maternal-900\">\n                  {question.text}\n                </div>\n                \n                <SelectableOptions \n                  question={question} \n                  questionId={questionId} \n                  selectedOptions={selectedOptions}\n                  setSelectedOptions={setSelectedOptions}\n                />\n              </div>\n            );\n          })\n        ) : (\n          <p className=\"text-center py-4 text-gray-500\">\n            Não há respostas disponíveis do questionário para este campo.\n          </p>\n        )}\n      </div>\n      \n      <DialogFooter>\n        <Button variant=\"outline\" onClick={() => setDialogOpen(false)}>\n          Cancelar\n        </Button>\n        <Button onClick={handleAddSelectedOptions}>\n          Adicionar Selecionados\n        </Button>\n      </DialogFooter>\n    </DialogContent>\n  );\n}\n","\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Input } from '@/components/ui/input';\nimport { Plus } from 'lucide-react';\nimport { Dialog, DialogTrigger } from \"@/components/ui/dialog\";\nimport { OptionsDialog } from './OptionsDialog';\nimport { useIsMobile } from '@/hooks/use-mobile';\n\ninterface EditorFieldProps {\n  field: { key: string; label: string };\n  activeSection: { id: string; title: string; color?: string; fields: Array<{ key: string; label: string }> };\n  sectionData: Record<string, any>;\n  handleFieldChange: (sectionId: string, fieldKey: string, value: any) => void;\n  shouldShowAddButton: (fieldKey: string) => boolean;\n  useSingleLineInput: boolean;\n  resetOptionsForField: (fieldKey: string) => void;\n  activeFieldKey: string;\n  dialogOpen: boolean;\n  setDialogOpen: (value: boolean) => void;\n  selectedOptions: Record<string, Record<string, boolean>>;\n  setSelectedOptions: (value: Record<string, Record<string, boolean>>) => void;\n  getRelevantQuestionsForField: (fieldKey: string) => Array<{question: any, sectionId: string}>;\n  handleAddSelectedOptions: () => void;\n}\n\nexport function EditorField({\n  field,\n  activeSection,\n  sectionData,\n  handleFieldChange,\n  shouldShowAddButton,\n  useSingleLineInput,\n  resetOptionsForField,\n  activeFieldKey,\n  dialogOpen,\n  setDialogOpen,\n  selectedOptions,\n  setSelectedOptions,\n  getRelevantQuestionsForField,\n  handleAddSelectedOptions\n}: EditorFieldProps) {\n  const fieldValue = sectionData[field.key] || '';\n  const showAddButton = shouldShowAddButton(field.key);\n  const isMobile = useIsMobile();\n  \n  return (\n    <div className=\"mb-4 md:mb-6 border border-maternal-100 rounded-lg p-3 md:p-4 bg-maternal-50/30\">\n      <div className={`flex flex-col ${!isMobile ? 'sm:flex-row sm:justify-between sm:items-center' : ''} mb-2`}>\n        <label \n          htmlFor={`${activeSection.id}-${field.key}`} \n          className=\"block font-medium text-maternal-800 text-sm md:text-base mb-2 sm:mb-0\"\n        >\n          {field.label}\n        </label>\n        \n        {showAddButton && (\n          <Dialog open={dialogOpen && activeFieldKey === field.key} onOpenChange={(open) => {\n            if (open && activeFieldKey !== field.key) {\n              resetOptionsForField(field.key);\n            } else if (!open) {\n              setDialogOpen(false);\n            }\n          }}>\n            <DialogTrigger asChild>\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                className=\"flex items-center gap-1 border-maternal-300 text-maternal-600 text-xs w-full sm:w-auto justify-center sm:justify-start mt-1 sm:mt-0\"\n                onClick={() => resetOptionsForField(field.key)}\n              >\n                <Plus className=\"h-3 w-3\" /> Adicionar do Questionário\n              </Button>\n            </DialogTrigger>\n            <OptionsDialog \n              dialogOpen={dialogOpen}\n              setDialogOpen={setDialogOpen}\n              activeFieldKey={activeFieldKey}\n              selectedOptions={selectedOptions}\n              setSelectedOptions={setSelectedOptions}\n              getRelevantQuestionsForField={getRelevantQuestionsForField}\n              handleAddSelectedOptions={handleAddSelectedOptions}\n            />\n          </Dialog>\n        )}\n      </div>\n      \n      {useSingleLineInput ? (\n        <Input\n          id={`${activeSection.id}-${field.key}`}\n          value={fieldValue}\n          onChange={(e) => handleFieldChange(\n            activeSection.id, \n            field.key, \n            e.target.value\n          )}\n          className=\"w-full border-maternal-200 focus:border-maternal-400 focus:ring-maternal-400\"\n          placeholder={`Insira ${field.label.toLowerCase()}`}\n        />\n      ) : (\n        <Textarea\n          id={`${activeSection.id}-${field.key}`}\n          value={Array.isArray(fieldValue) ? fieldValue.join('\\n') : fieldValue}\n          onChange={(e) => handleFieldChange(\n            activeSection.id, \n            field.key, \n            e.target.value\n          )}\n          rows={isMobile ? 4 : 6}\n          className=\"w-full border-maternal-200 focus:border-maternal-400 focus:ring-maternal-400\"\n          placeholder={`Insira suas preferências para ${field.label.toLowerCase()}`}\n        />\n      )}\n    </div>\n  );\n}\n","\n/**\n * Updates personal information section of the birth plan\n */\nexport const updatePersonalInfo = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.name) birthPlan.personalInfo.name = answers.name;\n  if (answers.dueDate) birthPlan.personalInfo.dueDate = answers.dueDate;\n  if (answers.healthProvider) birthPlan.personalInfo.healthProvider = answers.healthProvider;\n  if (answers.birthLocation) birthPlan.personalInfo.birthLocation = answers.birthLocation;\n  if (answers.hospital) birthPlan.personalInfo.hospital = answers.hospital;\n  \n  // Pediatra\n  if (answers.pediatrician === 'Sim') {\n    if (answers.pediatricianName) birthPlan.personalInfo.pediatrician = answers.pediatricianName;\n    if (answers.pediatricianRegistry) birthPlan.personalInfo.pediatricianRegistry = answers.pediatricianRegistry;\n  }\n  \n  // Enfermeira Obstetriz\n  if (answers.midwife === 'Sim') {\n    if (answers.midwifeName) birthPlan.personalInfo.midwife = answers.midwifeName;\n    if (answers.midwifeRegistry) birthPlan.personalInfo.midwifeRegistry = answers.midwifeRegistry;\n  }\n  \n  // Doula\n  if (answers.doula === 'Sim') {\n    if (answers.doulaName) birthPlan.personalInfo.doula = answers.doulaName;\n  }\n  \n  if (answers.companions) birthPlan.personalInfo.companions = answers.companions;\n};\n","\nimport { birthPlanSections } from '../birthPlanSections';\nimport { updatePersonalInfo } from './personalInfo';\nimport { updateAtmosphere } from './atmosphere';\nimport { updateLaborPreferences } from './laborPreferences';\nimport { updateBirthPreferences } from './birthPreferences';\nimport { updateCesareanPreferences } from './cesareanPreferences';\nimport { updatePostpartumPreferences } from './postpartumPreferences';\nimport { updateSpecialSituations } from './specialSituations';\n\n/**\n * Generates a default empty birth plan structure based on sections\n */\nexport const generateEmptyBirthPlan = (): Record<string, any> => {\n  const emptyPlan: Record<string, any> = {};\n  \n  birthPlanSections.forEach((section) => {\n    emptyPlan[section.id] = {};\n    section.fields.forEach((field) => {\n      emptyPlan[section.id][field.key] = '';\n    });\n  });\n  \n  return emptyPlan;\n};\n\n/**\n * Processes checkbox answers into a formatted string\n */\nexport const formatCheckboxAnswers = (checkboxData: Record<string, boolean>) => {\n  if (!checkboxData) return '';\n  \n  const selectedOptions = Object.entries(checkboxData)\n    .filter(([_, value]) => value)\n    .map(([key]) => key);\n  \n  return selectedOptions.join(', ');\n};\n\n/**\n * Generates an initial birth plan from questionnaire answers\n */\nexport const generateBirthPlanFromAnswers = (answers: Record<string, any>): Record<string, any> => {\n  console.log(\"Gerando plano de parto a partir das respostas:\", answers);\n  const birthPlan = generateEmptyBirthPlan();\n  \n  // Update each section with relevant answers\n  updatePersonalInfo(birthPlan, answers);\n  updateAtmosphere(birthPlan, answers);\n  updateLaborPreferences(birthPlan, answers);\n  updateBirthPreferences(birthPlan, answers);\n  updateCesareanPreferences(birthPlan, answers);\n  updatePostpartumPreferences(birthPlan, answers);\n  updateSpecialSituations(birthPlan, answers);\n  \n  console.log(\"Plano de parto gerado:\", birthPlan);\n  return birthPlan;\n};\n","\nimport { formatCheckboxAnswers } from './baseUtils';\n\n/**\n * Updates atmosphere section of the birth plan\n */\nexport const updateAtmosphere = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.lighting) {\n    birthPlan.atmosfera.lighting = formatCheckboxAnswers(answers.lighting);\n  }\n  if (answers.sound) {\n    birthPlan.atmosfera.sound = formatCheckboxAnswers(answers.sound);\n  }\n  if (answers.clothing) {\n    birthPlan.atmosfera.clothing = answers.clothing;\n  }\n  if (answers.photos) {\n    birthPlan.atmosfera.photos = formatCheckboxAnswers(answers.photos);\n  }\n};\n","\nimport { formatCheckboxAnswers } from './baseUtils';\n\n/**\n * Updates labor section of the birth plan\n */\nexport const updateLaborPreferences = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.mobility) {\n    birthPlan.trabalhoDeParto.mobility = formatCheckboxAnswers(answers.mobility);\n  }\n  if (answers.positions) {\n    birthPlan.trabalhoDeParto.positions = formatCheckboxAnswers(answers.positions);\n  }\n  if (answers.hydration) {\n    birthPlan.trabalhoDeParto.hydration = formatCheckboxAnswers(answers.hydration);\n  }\n  if (answers.monitoring) {\n    birthPlan.trabalhoDeParto.monitoring = answers.monitoring;\n  }\n  if (answers.painRelief) {\n    birthPlan.trabalhoDeParto.interventions = formatCheckboxAnswers(answers.painRelief);\n  }\n  if (answers.interventions) {\n    const currentValue = birthPlan.trabalhoDeParto.interventions;\n    const interventions = formatCheckboxAnswers(answers.interventions);\n    birthPlan.trabalhoDeParto.interventions = currentValue ? \n      `${currentValue}\\n${interventions}` : interventions;\n  }\n};\n","\nimport { formatCheckboxAnswers } from './baseUtils';\n\n/**\n * Updates birth section of the birth plan\n */\nexport const updateBirthPreferences = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.birthPositions) {\n    birthPlan.nascimento.birthPositions = formatCheckboxAnswers(answers.birthPositions);\n  }\n  if (answers.episiotomy) {\n    birthPlan.nascimento.episiotomy = answers.episiotomy;\n  }\n  if (answers.cordCutting) {\n    birthPlan.nascimento.cordCutting = formatCheckboxAnswers(answers.cordCutting);\n  }\n  if (answers.skinToSkin) {\n    birthPlan.nascimento.skinToSkin = answers.skinToSkin;\n  }\n  if (answers.placenta) {\n    birthPlan.nascimento.placenta = answers.placenta;\n  }\n};\n","\nimport { formatCheckboxAnswers } from './baseUtils';\n\n/**\n * Updates cesarean section of the birth plan\n */\nexport const updateCesareanPreferences = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.cesareanPreferences) {\n    birthPlan.cesarea.cesareanPreferences = formatCheckboxAnswers(answers.cesareanPreferences);\n  }\n  if (answers.anesthesia) {\n    birthPlan.cesarea.anesthesia = answers.anesthesia;\n  }\n  if (answers.cesareanCompanion) {\n    birthPlan.cesarea.cesareanCompanion = answers.cesareanCompanion;\n  }\n  if (answers.curtain) {\n    birthPlan.cesarea.curtain = answers.curtain;\n  }\n  if (answers.cesareanSkinToSkin) {\n    birthPlan.cesarea.cesareanSkinToSkin = answers.cesareanSkinToSkin;\n  }\n};\n","\nimport { formatCheckboxAnswers } from './baseUtils';\n\n/**\n * Updates postpartum section of the birth plan\n */\nexport const updatePostpartumPreferences = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.firstHour) {\n    birthPlan.posParto.firstHour = formatCheckboxAnswers(answers.firstHour);\n  }\n  if (answers.breastfeeding) {\n    birthPlan.posParto.breastfeeding = formatCheckboxAnswers(answers.breastfeeding);\n  }\n  if (answers.newbornCare) {\n    birthPlan.posParto.newbornCare = formatCheckboxAnswers(answers.newbornCare);\n  }\n  if (answers.vaccination) {\n    birthPlan.posParto.vaccination = answers.vaccination;\n  }\n  if (answers.motherCare) {\n    birthPlan.posParto.motherCare = formatCheckboxAnswers(answers.motherCare);\n  }\n};\n","\nimport { formatCheckboxAnswers } from './baseUtils';\n\n/**\n * Updates special situations section of the birth plan\n */\nexport const updateSpecialSituations = (birthPlan: Record<string, any>, answers: Record<string, any>): void => {\n  if (answers.complications) {\n    birthPlan.situacoesEspeciais.complications = formatCheckboxAnswers(answers.complications);\n  }\n  \n  if (answers.nicu) {\n    birthPlan.situacoesEspeciais.nicu = formatCheckboxAnswers(answers.nicu);\n  }\n  \n  if (answers.emergencyPreferences) {\n    birthPlan.situacoesEspeciais.emergencyScenarios = formatCheckboxAnswers(answers.emergencyPreferences);\n  }\n  \n  if (answers.highRiskComplications) {\n    birthPlan.situacoesEspeciais.highRiskComplications = formatCheckboxAnswers(answers.highRiskComplications);\n  }\n  \n  if (answers.lowRiskOccurrences) {\n    birthPlan.situacoesEspeciais.lowRiskOccurrences = formatCheckboxAnswers(answers.lowRiskOccurrences);\n  }\n  \n  if (answers.cascadeInterventions) {\n    birthPlan.situacoesEspeciais.cascadeInterventions = formatCheckboxAnswers(answers.cascadeInterventions);\n  }\n  \n  if (answers.specialWishes) {\n    birthPlan.situacoesEspeciais.specialWishes = answers.specialWishes;\n  }\n};\n","\nimport { parseOptionsFromText } from '../utils/birthPlanUtils';\nimport { questionnaireSections } from '../questionnaire';\nimport { birthPlanSections } from '../utils/birthPlanSections';\n\nexport const mapQuestionnaireToSectionId = (questionnaireId: string): string => {\n  const mapping: Record<string, string> = {\n    'personal': 'personalInfo',\n    'atmosphere': 'atmosfera',\n    'laborPreferences': 'trabalhoDeParto',\n    'birth': 'nascimento',\n    'cesarean': 'cesarea',\n    'postpartum': 'posParto',\n    'specialSituations': 'situacoesEspeciais'\n  };\n  return mapping[questionnaireId] || questionnaireId;\n};\n\nexport const getRelevantQuestionsForField = (\n  fieldKey: string, \n  questionnaireAnswers: Record<string, any> = {}\n) => {\n  const fieldToQuestionMap: Record<string, string[]> = {\n    'name': ['name'],\n    'dueDate': ['dueDate'],\n    'healthProvider': ['healthProvider'],\n    'birthLocation': ['birthLocation'],\n    'hospital': ['hospital'],\n    'midwife': ['midwife', 'midwifeName', 'midwifeRegistry'],\n    'doula': ['doula', 'doulaName'],\n    'companions': ['companions'],\n    \n    'lighting': ['lighting'],\n    'sound': ['sound'],\n    'clothing': ['clothing'],\n    'photos': ['photos'],\n    \n    'mobility': ['mobility'],\n    'positions': ['positions'],\n    'hydration': ['hydration'],\n    'monitoring': ['monitoring'],\n    'interventions': ['painRelief', 'interventions', 'informedConsent'],\n    \n    'birthPositions': ['birthPositions'],\n    'episiotomy': ['episiotomy'],\n    'cordCutting': ['cordCutting'],\n    'skinToSkin': ['skinToSkin'],\n    'placenta': ['placenta'],\n    \n    'cesareanPreferences': ['cesareanPreferences'],\n    'anesthesia': ['anesthesia'],\n    'cesareanCompanion': ['cesareanCompanion'],\n    'curtain': ['curtain'],\n    'cesareanSkinToSkin': ['cesareanSkinToSkin'],\n    \n    'firstHour': ['firstHour'],\n    'breastfeeding': ['breastfeeding'],\n    'newbornCare': ['newbornCare'],\n    'vaccination': ['vaccination'],\n    'motherCare': ['motherCare'],\n    \n    'complications': ['complications', 'cascadeInterventions'],\n    'nicu': ['nicu'],\n    'emergencyScenarios': ['emergencyPreferences'],\n    'highRiskComplications': ['highRiskComplications'],\n    'lowRiskOccurrences': ['lowRiskOccurrences'],\n    'cascadeInterventions': ['cascadeInterventions'],\n    'specialWishes': ['specialWishes']\n  };\n  \n  const relevantQuestionIds = fieldToQuestionMap[fieldKey] || [];\n  \n  const relevantQuestions: Array<{question: any, sectionId: string}> = [];\n  \n  for (const section of questionnaireSections) {\n    for (const question of section.questions) {\n      if (relevantQuestionIds.includes(question.id) && questionnaireAnswers[question.id] !== undefined) {\n        relevantQuestions.push({\n          question,\n          sectionId: section.id\n        });\n      }\n    }\n  }\n  \n  return relevantQuestions;\n};\n\nexport const findQuestionById = (questionId: string) => {\n  for (const section of questionnaireSections) {\n    const question = section.questions.find(q => q.id === questionId);\n    if (question) {\n      return { question, sectionId: section.id };\n    }\n  }\n  return null;\n};\n\nexport const parseCurrentFieldOptions = (fieldKey: string, sectionId: string, birthPlan: Record<string, any>): string[] => {\n  const currentValue = birthPlan[sectionId][fieldKey] || '';\n  return parseOptionsFromText(currentValue);\n};\n\nexport const initializeOptionsFromCurrentField = (\n  fieldKey: string, \n  sectionId: string, \n  birthPlan: Record<string, any>,\n  questionnaireAnswers: Record<string, any>\n) => {\n  const currentFieldOptions = parseCurrentFieldOptions(fieldKey, sectionId, birthPlan);\n  const relevantQuestions = getRelevantQuestionsForField(fieldKey, questionnaireAnswers);\n  \n  const initialSelectedOptions: Record<string, Record<string, boolean>> = {};\n  \n  relevantQuestions.forEach(({ question }) => {\n    const questionId = question.id;\n    initialSelectedOptions[questionId] = {};\n    \n    if (question.options) {\n      question.options.forEach((option: string) => {\n        let isSelected = currentFieldOptions.includes(option);\n        \n        const answer = questionnaireAnswers[questionId];\n        if (typeof answer === 'object' && !Array.isArray(answer) && answer[option]) {\n          isSelected = true;\n        }\n        \n        initialSelectedOptions[questionId][option] = isSelected;\n      });\n    }\n  });\n  \n  return initialSelectedOptions;\n};\n\nexport const getExcludedFields = () => {\n  return ['name', 'dueDate', 'healthProvider', 'hospital', 'companions'];\n};\n\nexport const shouldShowAddButton = (fieldKey: string, questionnaireAnswers: Record<string, any> = {}) => {\n  const excludedFields = getExcludedFields();\n  \n  if (excludedFields.includes(fieldKey)) {\n    return false;\n  }\n  \n  const relevantQuestions = getRelevantQuestionsForField(fieldKey, questionnaireAnswers);\n  return relevantQuestions.length > 0;\n};\n\nexport const getSingleLineFields = () => {\n  return [\n    'name', 'dueDate', 'healthProvider', 'healthProviderContact', 'healthProviderRegistry', \n    'birthLocation', 'hospital', 'hospitalAddress', 'hospitalPhone', \n    'midwife', 'midwifeContact', 'midwifeRegistry',\n    'doula', 'doulaContact', 'doulaRegistry'\n  ];\n};\n\nexport const checkSectionCompletion = (\n  sectionId: string, \n  plan: Record<string, any>,\n  completedSections: string[],\n  setCompletedSections: React.Dispatch<React.SetStateAction<string[]>>\n) => {\n  const section = birthPlanSections.find(section => section.id === sectionId);\n  if (!section) return;\n  \n  const filledFields = section.fields.filter(field => {\n    const value = plan[sectionId]?.[field.key];\n    return value && value.trim() !== '';\n  });\n  \n  if (filledFields.length >= 3 && !completedSections.includes(sectionId)) {\n    setCompletedSections(prev => [...prev, sectionId]);\n  } else if (filledFields.length < 3 && completedSections.includes(sectionId)) {\n    setCompletedSections(prev => prev.filter(id => id !== sectionId));\n  }\n};\n","\nimport { EditorField } from './EditorField';\nimport { birthPlanSections } from '../utils/birthPlanSections';\nimport { getSingleLineFields, shouldShowAddButton, getRelevantQuestionsForField } from './editorUtils';\nimport { useIsMobile } from '@/hooks/use-mobile';\n\ninterface EditorContentProps {\n  activeSectionIndex: number;\n  localBirthPlan: Record<string, any>;\n  handleFieldChange: (sectionId: string, fieldKey: string, value: any) => void;\n  resetOptionsForField: (fieldKey: string) => void;\n  activeFieldKey: string;\n  dialogOpen: boolean;\n  setDialogOpen: (value: boolean) => void;\n  selectedOptions: Record<string, Record<string, boolean>>;\n  setSelectedOptions: (value: Record<string, Record<string, boolean>>) => void;\n  questionnaireAnswers: Record<string, any>;\n  handleAddSelectedOptions: () => void;\n}\n\nexport function EditorContent({\n  activeSectionIndex,\n  localBirthPlan,\n  handleFieldChange,\n  resetOptionsForField,\n  activeFieldKey,\n  dialogOpen,\n  setDialogOpen,\n  selectedOptions,\n  setSelectedOptions,\n  questionnaireAnswers,\n  handleAddSelectedOptions\n}: EditorContentProps) {\n  const activeSection = birthPlanSections[activeSectionIndex];\n  const singleLineFields = getSingleLineFields();\n  const isMobile = useIsMobile();\n\n  return (\n    <div className={`bg-white border-l-4 border-maternal-${activeSection.color || '400'} rounded-lg p-4 md:p-6 mb-4 md:mb-6 shadow-md`}>\n      <h2 className={`${isMobile ? 'text-xl' : 'text-2xl'} font-semibold text-maternal-700 mb-3 md:mb-4`}>\n        {activeSection.title}\n      </h2>\n      \n      {activeSection.fields.map((field) => {\n        const sectionData = localBirthPlan[activeSection.id] || {};\n        const useSingleLineInput = singleLineFields.includes(field.key);\n        \n        return (\n          <EditorField \n            key={field.key}\n            field={field}\n            activeSection={activeSection}\n            sectionData={sectionData}\n            handleFieldChange={handleFieldChange}\n            shouldShowAddButton={(fieldKey) => shouldShowAddButton(fieldKey, questionnaireAnswers)}\n            useSingleLineInput={useSingleLineInput}\n            resetOptionsForField={resetOptionsForField}\n            activeFieldKey={activeFieldKey}\n            dialogOpen={dialogOpen}\n            setDialogOpen={setDialogOpen}\n            selectedOptions={selectedOptions}\n            setSelectedOptions={setSelectedOptions}\n            getRelevantQuestionsForField={(fieldKey) => getRelevantQuestionsForField(fieldKey, questionnaireAnswers)}\n            handleAddSelectedOptions={handleAddSelectedOptions}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, ChevronRight, Save } from 'lucide-react';\n\ninterface EditorFooterProps {\n  activeSectionIndex: number;\n  birthPlanSectionLength: number;\n  handleSave: () => void;\n  onNext: () => void;\n  setActiveSectionIndex: (index: number) => void;\n}\n\nexport function EditorFooter({\n  activeSectionIndex,\n  birthPlanSectionLength,\n  handleSave,\n  onNext,\n  setActiveSectionIndex\n}: EditorFooterProps) {\n  return (\n    <div className=\"flex justify-between mt-8\">\n      <Button \n        variant=\"outline\"\n        onClick={() => setActiveSectionIndex(Math.max(0, activeSectionIndex - 1))}\n        disabled={activeSectionIndex === 0}\n        className=\"flex items-center border-maternal-300 text-maternal-700 hover:bg-maternal-50\"\n      >\n        <ArrowLeft className=\"mr-2 h-4 w-4\" /> Seção Anterior\n      </Button>\n      \n      <Button \n        variant=\"outline\"\n        onClick={handleSave}\n        className=\"flex items-center border-maternal-300 text-maternal-700 hover:bg-maternal-50\"\n      >\n        <Save className=\"mr-2 h-4 w-4\" /> Salvar Alterações\n      </Button>\n      \n      {activeSectionIndex === birthPlanSectionLength - 1 ? (\n        <Button \n          onClick={() => {\n            handleSave();\n            onNext();\n          }}\n          className=\"bg-maternal-600 hover:bg-maternal-700 flex items-center\"\n        >\n          Visualizar Plano Completo <ChevronRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ) : (\n        <Button \n          onClick={() => setActiveSectionIndex(Math.min(birthPlanSectionLength - 1, activeSectionIndex + 1))}\n          className=\"bg-maternal-600 hover:bg-maternal-700 flex items-center\"\n        >\n          Próxima Seção <ChevronRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      )}\n    </div>\n  );\n}\n","\nexport function EditorHeader() {\n  return (\n    <h1 className=\"text-3xl font-bold text-maternal-800 mb-6\">Edite seu Plano de Parto</h1>\n  );\n}\n","\nexport function EditorTip() {\n  return (\n    <div className=\"bg-maternal-50 p-4 rounded-lg mb-6 border border-maternal-200\">\n      <p className=\"text-sm text-maternal-700\">\n        <strong>Dica:</strong> Seja específico sobre suas preferências, mas também flexível. \n        Lembre-se de que situações imprevistas podem ocorrer durante o parto.\n      </p>\n    </div>\n  );\n}\n","\nimport { useState, useEffect } from 'react';\nimport { toast } from 'sonner';\nimport { birthPlanSections } from '../utils/birthPlanSections';\nimport {\n  initializeOptionsFromCurrentField,\n  shouldShowAddButton,\n  checkSectionCompletion\n} from '../editor/editorUtils';\n\nexport function useEditorState(\n  birthPlan: Record<string, any>,\n  onUpdate: (updatedPlan: Record<string, any>) => void,\n  questionnaireAnswers: Record<string, any> = {}\n) {\n  const [activeSectionIndex, setActiveSectionIndex] = useState(0);\n  const [localBirthPlan, setLocalBirthPlan] = useState({ ...birthPlan });\n  const [selectedOptions, setSelectedOptions] = useState<Record<string, Record<string, boolean>>>({});\n  const [activeFieldKey, setActiveFieldKey] = useState<string>('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [completedSections, setCompletedSections] = useState<string[]>([]);\n\n  const handleFieldChange = (sectionId: string, fieldKey: string, value: any) => {\n    setLocalBirthPlan(prevPlan => {\n      const updatedPlan = {\n        ...prevPlan,\n        [sectionId]: {\n          ...prevPlan[sectionId],\n          [fieldKey]: value,\n        },\n      };\n      \n      // Mark section as completed if all required fields are filled\n      checkSectionCompletion(sectionId, updatedPlan, completedSections, setCompletedSections);\n      \n      return updatedPlan;\n    });\n  };\n  \n  // Navigate to previous section\n  const goToPreviousSection = () => {\n    if (activeSectionIndex > 0) {\n      setActiveSectionIndex(activeSectionIndex - 1);\n    }\n  };\n  \n  // Navigate to next section\n  const goToNextSection = () => {\n    if (activeSectionIndex < birthPlanSections.length - 1) {\n      setActiveSectionIndex(activeSectionIndex + 1);\n    }\n  };\n  \n  // Initialize completed sections when component mounts\n  useEffect(() => {\n    birthPlanSections.forEach(section => {\n      checkSectionCompletion(section.id, localBirthPlan, completedSections, setCompletedSections);\n    });\n  }, []);\n  \n  // Scroll to top when changing sections\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [activeSectionIndex]);\n\n  const handleSave = () => {\n    onUpdate(localBirthPlan);\n    toast(\"Seu plano de parto foi atualizado com sucesso.\");\n  };\n  \n  const resetOptionsForField = (fieldKey: string) => {\n    setActiveFieldKey(fieldKey);\n    \n    const activeSection = birthPlanSections[activeSectionIndex];\n    const initialSelectedOptions = initializeOptionsFromCurrentField(\n      fieldKey, \n      activeSection.id,\n      localBirthPlan,\n      questionnaireAnswers\n    );\n    \n    setSelectedOptions(initialSelectedOptions);\n    setDialogOpen(true);\n  };\n\n  return {\n    activeSectionIndex,\n    setActiveSectionIndex,\n    localBirthPlan,\n    setLocalBirthPlan,\n    selectedOptions,\n    setSelectedOptions,\n    activeFieldKey,\n    setActiveFieldKey,\n    dialogOpen,\n    setDialogOpen,\n    completedSections,\n    setCompletedSections,\n    handleFieldChange,\n    goToPreviousSection,\n    goToNextSection,\n    handleSave,\n    resetOptionsForField\n  };\n}\n","\nimport { generateEmptyBirthPlan, generateBirthPlanFromAnswers } from './birthPlanGenerationUtils';\nimport { birthPlanSections } from './birthPlanSections';\n\n// Re-export the utility functions\nexport {\n  generateEmptyBirthPlan,\n  generateBirthPlanFromAnswers\n};\n\n// Helper function to get user-friendly section names\nexport const getSectionDisplayName = (sectionId: string): string => {\n  const sectionNameMap: Record<string, string> = {\n    personalInfo: 'Informações Pessoais',\n    laborPreferences: 'Preferências para o Trabalho de Parto',\n    atmosfera: 'Ambiente e Acompanhamento',\n    trabalhoDeParto: 'Trabalho de Parto',\n    painManagement: 'Alívio da Dor',\n    nascimento: 'Parto',\n    newborn: 'Cuidados com o Recém-Nascido',\n    cesarea: 'Cesárea (Se Necessária)',\n    posParto: 'Pós-Parto',\n    situacoesEspeciais: 'Situações Especiais'\n  };\n  \n  return sectionNameMap[sectionId] || sectionId;\n};\n\n// Add any additional utility functions here if needed\nexport const formatBirthPlanSection = (section: Record<string, string>): string => {\n  return Object.entries(section)\n    .filter(([_, value]) => value && value.trim() !== '')\n    .map(([key, value]) => `${key}: ${value}`)\n    .join('\\n\\n');\n};\n\n/**\n * Parse text content into an array of options\n */\nexport const parseOptionsFromText = (text: string): string[] => {\n  if (!text) return [];\n  \n  // Split the text by commas and trim each option\n  return text.split(',').map(option => option.trim()).filter(option => option.length > 0);\n};\n\n/**\n * Creates a shareable text version of the birth plan\n */\nexport const createShareableText = (birthPlan: Record<string, any>) => {\n  const personalInfo = birthPlan.personalInfo || {};\n  \n  let text = `MEU PLANO DE PARTO\\n\\n`;\n  text += `Nome: ${personalInfo.name || 'Não informado'}\\n`;\n  text += `Data prevista: ${personalInfo.dueDate || 'Não informada'}\\n`;\n  text += `Local planejado para o parto: ${personalInfo.birthLocation || 'Não informado'}\\n`;\n  text += `Hospital/Maternidade de referência: ${personalInfo.hospital || 'Não informado'}\\n`;\n  text += `Endereço: ${personalInfo.hospitalAddress || 'Não informado'}\\n`;\n  text += `Telefone: ${personalInfo.hospitalPhone || 'Não informado'}\\n`;\n  text += `Médico/Obstetra: ${personalInfo.healthProvider || 'Não informado'}\\n`;\n  text += `Telefone: ${personalInfo.healthProviderContact || 'Não informado'}\\n`;\n  text += `CRM: ${personalInfo.healthProviderRegistry || 'Não informado'}\\n`;\n  \n  if (personalInfo.midwife) {\n    text += `Enfermeira Obstetriz: ${personalInfo.midwife || 'Não informada'}\\n`;\n    text += `Telefone: ${personalInfo.midwifeContact || 'Não informado'}\\n`;\n    text += `COREN: ${personalInfo.midwifeRegistry || 'Não informado'}\\n`;\n  }\n  \n  if (personalInfo.doula) {\n    text += `Doula: ${personalInfo.doula || 'Não informada'}\\n`;\n    text += `Telefone: ${personalInfo.doulaContact || 'Não informado'}\\n`;\n    text += `Certificação: ${personalInfo.doulaRegistry || 'Não informada'}\\n`;\n  }\n  \n  text += `Acompanhantes: ${personalInfo.companions || 'Não informados'}\\n\\n`;\n  \n  // Add other sections\n  birthPlanSections.forEach((section) => {\n    if (section.id === 'personalInfo') return; // Already added above\n    \n    text += `${section.title.toUpperCase()}:\\n`;\n    \n    const sectionData = birthPlan[section.id] || {};\n    \n    section.fields.forEach((field) => {\n      const value = sectionData[field.key];\n      if (!value) return;\n      \n      text += `- ${field.label}: ${Array.isArray(value) ? value.join(', ') : value}\\n`;\n    });\n    \n    text += '\\n';\n  });\n  \n  text += `Criado em ${new Date().toLocaleDateString()}`;\n  text += `\\n\\nEste documento representa minhas preferências para o parto e nascimento do meu bebê.`;\n  text += `\\n\\nAssinaturas:\\n\\n`;\n  text += `___________________________        ___________________________\\n`;\n  text += `${personalInfo.name || 'Gestante'}                 ${personalInfo.healthProvider || 'Médico/Obstetra'}\\n`;\n  text += `                                   CRM: ${personalInfo.healthProviderRegistry || '_________'}\\n\\n`;\n  \n  // Add enfermeira obstetriz and doula signatures\n  text += `___________________________        ___________________________\\n`;\n  if (personalInfo.midwife) {\n    text += `${personalInfo.midwife || 'Enfermeira Obstetriz'}            ${personalInfo.doula || 'Doula'}\\n`;\n    text += `COREN: ${personalInfo.midwifeRegistry || '_________'}       Certificação: ${personalInfo.doulaRegistry || '_________'}`;\n  } else {\n    text += `Enfermeira Obstétrica              ${personalInfo.doula || 'Doula'}\\n`;\n    text += `COREN: _________                 Certificação: ${personalInfo.doulaRegistry || '_________'}`;\n  }\n  \n  return text;\n};\n","\nimport { toast } from 'sonner';\nimport { mapQuestionnaireToSectionId, findQuestionById, checkSectionCompletion } from './editorUtils';\n\nexport const handleAddSelectedOptions = (\n  activeFieldKey: string,\n  selectedOptions: Record<string, Record<string, boolean>>,\n  localBirthPlan: Record<string, any>,\n  setLocalBirthPlan: React.Dispatch<React.SetStateAction<Record<string, any>>>,\n  completedSections: string[],\n  setCompletedSections: React.Dispatch<React.SetStateAction<string[]>>,\n  setSelectedOptions: React.Dispatch<React.SetStateAction<Record<string, Record<string, boolean>>>>,\n  setDialogOpen: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n  const updatedPlan = { ...localBirthPlan };\n  \n  const allSelectedOptions: string[] = [];\n  \n  Object.entries(selectedOptions).forEach(([questionId, options]) => {\n    if (Object.values(options).some(value => value)) {\n      const selectedForQuestion = Object.entries(options)\n        .filter(([_, isSelected]) => isSelected)\n        .map(([option]) => option);\n      \n      allSelectedOptions.push(...selectedForQuestion);\n    }\n  });\n  \n  if (allSelectedOptions.length > 0) {\n    const formattedOptions = allSelectedOptions.join(', ');\n    \n    const mappedSectionId = mapQuestionnaireToSectionId(\n      Object.keys(selectedOptions).map(id => findQuestionById(id)?.sectionId || '')[0]\n    );\n    \n    updatedPlan[mappedSectionId][activeFieldKey] = formattedOptions;\n    setLocalBirthPlan(updatedPlan);\n    \n    // Check if the section was completed after adding options\n    checkSectionCompletion(mappedSectionId, updatedPlan, completedSections, setCompletedSections);\n    \n    toast(\"As opções selecionadas foram adicionadas ao seu plano de parto.\");\n  } else {\n    toast(\"Nenhuma opção foi selecionada.\");\n  }\n  \n  setSelectedOptions({});\n  setDialogOpen(false);\n};\n","\nimport { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ArrowUp } from 'lucide-react';\n\ninterface BackToTopButtonProps {\n  threshold?: number;\n  className?: string;\n}\n\nexport function BackToTopButton({ threshold = 300, className = '' }: BackToTopButtonProps) {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const toggleVisibility = () => {\n      setIsVisible(window.scrollY > threshold);\n    };\n\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, [threshold]);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <Button\n          onClick={scrollToTop}\n          className={`fixed bottom-6 right-6 z-50 rounded-full p-3 shadow-lg print:hidden ${className}`}\n          aria-label=\"Voltar ao topo\"\n          variant=\"navigation\"\n          size=\"icon\"\n        >\n          <ArrowUp className=\"h-5 w-5\" />\n        </Button>\n      )}\n    </>\n  );\n}\n","\nimport { birthPlanSections } from './utils/birthPlanSections';\nimport { EditorContent } from './editor/EditorContent';\nimport { EditorFooter } from './editor/EditorFooter';\nimport { EditorHeader } from './editor/EditorHeader';\nimport { EditorTip } from './editor/EditorTip';\nimport { BirthPlanSectionProgress } from './BirthPlanSectionProgress';\nimport { useEditorState } from './hooks/useEditorState';\nimport { handleAddSelectedOptions } from './editor/editorHelpers';\nimport { BackToTopButton } from './common/BackToTopButton';\n\ninterface BirthPlanEditorProps {\n  birthPlan: Record<string, any>;\n  onUpdate: (updatedPlan: Record<string, any>) => void;\n  onNext: () => void;\n  onBack?: () => void;\n  questionnaireAnswers?: Record<string, any>;\n}\n\nexport function BirthPlanEditor({ \n  birthPlan, \n  onUpdate, \n  onNext,\n  onBack,\n  questionnaireAnswers = {}\n}: BirthPlanEditorProps) {\n  const {\n    activeSectionIndex,\n    setActiveSectionIndex,\n    localBirthPlan,\n    setLocalBirthPlan,\n    selectedOptions,\n    setSelectedOptions,\n    activeFieldKey,\n    dialogOpen,\n    setDialogOpen,\n    completedSections,\n    setCompletedSections,\n    handleFieldChange,\n    goToPreviousSection,\n    goToNextSection,\n    handleSave,\n    resetOptionsForField\n  } = useEditorState(birthPlan, onUpdate, questionnaireAnswers);\n\n  const processAddSelectedOptions = () => {\n    handleAddSelectedOptions(\n      activeFieldKey,\n      selectedOptions,\n      localBirthPlan,\n      setLocalBirthPlan,\n      completedSections,\n      setCompletedSections,\n      setSelectedOptions,\n      setDialogOpen\n    );\n  };\n  \n  return (\n    <div className=\"animate-fade-in\">\n      <EditorHeader />\n      \n      <BirthPlanSectionProgress \n        sections={birthPlanSections}\n        currentSectionIndex={activeSectionIndex}\n        onSectionClick={setActiveSectionIndex}\n        stageType=\"editor\"\n        completedSections={completedSections}\n        onPrevious={goToPreviousSection}\n        onNext={goToNextSection}\n      />\n      \n      <EditorContent \n        activeSectionIndex={activeSectionIndex}\n        localBirthPlan={localBirthPlan}\n        handleFieldChange={handleFieldChange}\n        resetOptionsForField={resetOptionsForField}\n        activeFieldKey={activeFieldKey}\n        dialogOpen={dialogOpen}\n        setDialogOpen={setDialogOpen}\n        selectedOptions={selectedOptions}\n        setSelectedOptions={setSelectedOptions}\n        questionnaireAnswers={questionnaireAnswers}\n        handleAddSelectedOptions={processAddSelectedOptions}\n      />\n      \n      <EditorTip />\n      \n      <EditorFooter \n        activeSectionIndex={activeSectionIndex}\n        birthPlanSectionLength={birthPlanSections.length}\n        handleSave={handleSave}\n        onNext={onNext}\n        setActiveSectionIndex={setActiveSectionIndex}\n      />\n      \n      <BackToTopButton />\n    </div>\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport { Printer, Download, FileText } from 'lucide-react';\nimport { toast } from '@/components/ui/use-toast';\nimport { exportAsPDF, exportAsWord } from '@/utils/export';\n\ninterface PreviewHeaderProps {\n  title: string;\n  birthPlan?: Record<string, any>;\n}\n\nexport function PreviewHeader({ title, birthPlan }: PreviewHeaderProps) {\n  // Functions to handle printing and downloading\n  const handlePrint = () => {\n    toast({\n      title: \"Preparando para impressão\",\n      description: \"Seu plano de parto está sendo preparado para impressão.\"\n    });\n    \n    window.print();\n  };\n  \n  const handleDownloadPDF = () => {\n    toast({\n      title: \"Download Iniciado\",\n      description: \"Seu plano de parto está sendo baixado como PDF.\"\n    });\n    \n    exportAsPDF('birth-plan-preview', 'meu-plano-de-parto.pdf')\n      .then(() => {\n        toast({\n          title: \"Download Concluído\",\n          description: \"Seu plano de parto foi baixado com sucesso.\"\n        });\n      })\n      .catch((error) => {\n        console.error(\"Erro ao exportar PDF:\", error);\n        toast({\n          title: \"Erro no Download\",\n          description: \"Ocorreu um erro ao gerar o PDF. Por favor, tente baixar como documento Word.\"\n        });\n      });\n  };\n  \n  const handleDownloadWord = () => {\n    if (!birthPlan) {\n      toast({\n        title: \"Erro no Download\",\n        description: \"Dados do plano de parto não disponíveis.\"\n      });\n      return;\n    }\n    \n    // Debug log to check if birth plan data is available\n    console.log(\"Birth plan data being sent to Word export:\", birthPlan);\n    \n    toast({\n      title: \"Download Iniciado\",\n      description: \"Seu plano de parto está sendo baixado como documento Word.\"\n    });\n    \n    exportAsWord(birthPlan, 'meu-plano-de-parto.docx')\n      .then(() => {\n        toast({\n          title: \"Download Concluído\",\n          description: \"Seu plano de parto foi baixado com sucesso como documento Word.\"\n        });\n      })\n      .catch((error) => {\n        console.error(\"Erro ao exportar Word:\", error);\n        toast({\n          title: \"Erro no Download\",\n          description: \"Ocorreu um erro ao gerar o documento Word. Por favor, tente novamente.\"\n        });\n      });\n  };\n  \n  return (\n    <div className=\"flex justify-between items-center mb-6 print:hidden\">\n      <h1 className=\"text-3xl font-bold text-maternal-900\">{title}</h1>\n      \n      <div className=\"flex space-x-2\">\n        <Button \n          variant=\"outline\" \n          onClick={handlePrint}\n          className=\"flex items-center\"\n        >\n          <Printer className=\"mr-2 h-4 w-4\" /> Imprimir\n        </Button>\n        \n        <Button \n          variant=\"outline\" \n          onClick={handleDownloadPDF}\n          className=\"flex items-center\"\n        >\n          <Download className=\"mr-2 h-4 w-4\" /> PDF\n        </Button>\n        \n        <Button \n          variant=\"outline\" \n          onClick={handleDownloadWord}\n          className=\"flex items-center\"\n        >\n          <FileText className=\"mr-2 h-4 w-4\" /> Word\n        </Button>\n      </div>\n    </div>\n  );\n}\n","\nimport { getSectionIcon } from '../utils/sectionIcons';\nimport { useIsMobile } from '@/hooks/use-mobile';\n\nexport interface PreviewSectionProps {\n  sectionId: string;\n  title: string;\n  sectionData?: Record<string, any>;\n  fields?: { key: string; label: string }[];\n}\n\nexport function PreviewSection({ sectionId, title, sectionData = {}, fields = [] }: PreviewSectionProps) {\n  const SectionIcon = getSectionIcon(sectionId);\n  const isMobile = useIsMobile();\n  \n  return (\n    <div className=\"mb-6 md:mb-8 print:mb-3 print:break-inside-avoid\">\n      <div className=\"flex items-center gap-2 mb-3 md:mb-4 print:mb-2\">\n        {SectionIcon && (\n          <span className=\"inline-block print:inline-block\">\n            <SectionIcon \n              className=\"h-4 w-4 md:h-5 md:w-5 text-maternal-700 print:text-black\" \n              aria-hidden=\"true\"\n              style={{ printColorAdjust: 'exact' }}\n            />\n          </span>\n        )}\n        <h2 className={`${isMobile ? 'text-xl' : 'text-2xl'} font-semibold text-maternal-800 print:text-lg print:font-bold`}>\n          {title}\n        </h2>\n      </div>\n      \n      <div className=\"space-y-3 md:space-y-4 print:space-y-1.5\">\n        {fields.map((field) => {\n          const value = sectionData[field.key];\n          \n          // Skip empty fields\n          if (!value || (Array.isArray(value) && value.length === 0)) {\n            return null;\n          }\n          \n          return (\n            <div key={field.key} className=\"print:mb-2\">\n              <h3 className=\"font-semibold text-maternal-700 mb-1 text-sm md:text-base print:text-sm\">{field.label}</h3>\n              <div className=\"bg-maternal-50 p-3 md:p-4 rounded-lg print:p-0 print:bg-transparent print:border-0\">\n                {Array.isArray(value) ? (\n                  <ul className=\"list-disc pl-5 space-y-1 text-sm md:text-base print:text-sm\">\n                    {value.map((item, index) => (\n                      <li key={index}>{item}</li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p className=\"text-sm md:text-base print:text-sm\">{value}</p>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","\ninterface SignatureSectionProps {\n  personalInfo: Record<string, any>;\n}\n\nexport function SignatureSection({ personalInfo }: SignatureSectionProps) {\n  const name = personalInfo.name || '';\n  \n  return (\n    <div className=\"hidden print:block mt-12 print:break-inside-avoid\">\n      <h2 className=\"text-xl font-semibold mb-8 border-b pb-2\">Assinaturas</h2>\n      \n      <div className=\"grid grid-cols-2 gap-8\">\n        <div>\n          <div className=\"border-b border-black h-12 mb-2\"></div>\n          <p className=\"text-center\">{name}</p>\n          <p className=\"text-center text-sm text-gray-600\">Gestante</p>\n        </div>\n        \n        <div>\n          <div className=\"border-b border-black h-12 mb-2\"></div>\n          <p className=\"text-center\">{personalInfo.healthProvider || '_________________'}</p>\n          <p className=\"text-center text-sm text-gray-600\">Médico/Obstetra</p>\n          <p className=\"text-center text-sm text-gray-600\">CRM: {personalInfo.healthProviderRegistry || '_________________'}</p>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-2 gap-8 mt-8\">\n        <div>\n          <div className=\"border-b border-black h-12 mb-2\"></div>\n          <p className=\"text-center\">{personalInfo.pediatrician || '_________________'}</p>\n          <p className=\"text-center text-sm text-gray-600\">Pediatra Neonatal</p>\n          <p className=\"text-center text-sm text-gray-600\">CRM: {personalInfo.pediatricianRegistry || '_________________'}</p>\n        </div>\n        \n        <div>\n          <div className=\"border-b border-black h-12 mb-2\"></div>\n          <p className=\"text-center\">{personalInfo.doula || '_________________'}</p>\n          <p className=\"text-center text-sm text-gray-600\">Doula</p>\n          <p className=\"text-center text-sm text-gray-600\">Registro: {personalInfo.doulaRegistry || '_________________'}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","\ninterface PrintTitleProps {\n  personName?: string;\n}\n\nexport function PrintTitle({ personName }: PrintTitleProps) {\n  return (\n    <div className=\"hidden print:block mb-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold\">PLANO DE PARTO</h1>\n        <img \n          src=\"/lovable-uploads/6f452e84-0922-495e-bad9-57a66fa763f6.png\" \n          alt=\"Energia Materna\" \n          className=\"h-12 energia-materna-logo\"\n        />\n      </div>\n      {personName && (\n        <h2 className=\"text-xl mt-2\">{personName}</h2>\n      )}\n      <p className=\"text-sm text-gray-700 mt-2 mb-4\">\n        Este documento reflete minhas preferências para o parto e nascimento do meu bebê. Ele foi elaborado após \n        cuidadosa pesquisa e reflexão, em colaboração com meu parceiro e equipe de saúde. Compreendo que \n        situações imprevistas podem surgir durante o trabalho de parto, e que a saúde e bem-estar do \n        bebê e meu são prioridade. Peço gentilmente que, na ausência de emergências médicas, minhas \n        escolhas sejam respeitadas, e que quaisquer intervenções necessárias sejam discutidas comigo \n        antes de serem realizadas.\n      </p>\n    </div>\n  );\n}\n","\nexport function PrintFooter() {\n  return (\n    <div className=\"hidden print:block mt-6 print-footer\">\n      <div className=\"flex justify-between items-center border-t pt-3\">\n        <div className=\"flex items-center gap-2\">\n          <img \n            src=\"/lovable-uploads/6f452e84-0922-495e-bad9-57a66fa763f6.png\" \n            alt=\"Energia Materna\" \n            className=\"h-8 energia-materna-logo\"\n          />\n          <p className=\"text-xs text-gray-600\">\n            © {new Date().getFullYear()} Energia Materna - www.energiamaterna.com.br\n          </p>\n        </div>\n        <div className=\"text-xs print:absolute print:bottom-4 print:right-4\">\n          <span className=\"print-page-number\"></span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","\nimport { PreviewHeader } from './preview/PreviewHeader';\nimport { PreviewSection } from './preview/PreviewSection';\nimport { SignatureSection } from './preview/SignatureSection';\nimport { PreviewFooter } from './preview/PreviewFooter';\nimport { PrintTitle } from './preview/PrintTitle';\nimport { PrintFooter } from './preview/PrintFooter';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\nimport { birthPlanSections } from './utils/birthPlanSections';\nimport { BirthPlanData } from './types/questionnaire';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { useEffect } from 'react';\n\ninterface BirthPlanPreviewProps {\n  birthPlan: BirthPlanData;\n  onEdit: () => void;\n  onNext: () => void;\n}\n\nexport function BirthPlanPreview({ birthPlan, onEdit, onNext }: BirthPlanPreviewProps) {\n  const isMobile = useIsMobile();\n  \n  // Debug log to check if birth plan data is available\n  console.log(\"Birth plan data in Preview component:\", birthPlan);\n  \n  const personalInfo = birthPlan.personalInfo || {};\n  \n  // Scroll to top on component mount\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  \n  return (\n    <div className=\"animate-fade-in\">\n      <PreviewHeader title=\"Visualização do Plano de Parto\" birthPlan={birthPlan} />\n      \n      <div \n        id=\"birth-plan-preview\" \n        className=\"bg-white border border-gray-200 rounded-lg p-4 md:p-6 print:p-0 print:border-0 print:shadow-none\"\n      >\n        <PrintTitle personName={personalInfo.name} />\n        \n        <div className=\"print:hidden\">\n          <p className={`${isMobile ? 'text-base' : 'text-lg'} mb-4 md:mb-6`}>\n            Esta é a versão final do seu plano de parto. Revise cuidadosamente todas as seções\n            e verifique se estão de acordo com seus desejos e necessidades.\n          </p>\n          \n          {/* Alert with disclaimer - Visible only on screen, not in print */}\n          <div className=\"bg-maternal-50 p-3 md:p-4 rounded-lg border-l-4 border-maternal-400 my-4 md:my-6\">\n            <p className=\"font-medium text-maternal-900 text-sm md:text-base\">\n              Este documento reflete minhas preferências para o parto e nascimento do meu bebê. Ele foi elaborado após \n              cuidadosa pesquisa e reflexão, em colaboração com meu parceiro e equipe de saúde. Compreendo que \n              situações imprevistas podem surgir durante o trabalho de parto, e que a saúde e bem-estar do \n              bebê e meu são prioridade. Peço gentilmente que, na ausência de emergências médicas, minhas \n              escolhas sejam respeitadas, e que quaisquer intervenções necessárias sejam discutidas comigo \n              antes de serem realizadas.\n            </p>\n          </div>\n        </div>\n        \n        {/* Personal information section */}\n        <PreviewSection \n          title=\"Informações Pessoais\" \n          sectionData={birthPlan.personalInfo || {}}\n          sectionId=\"personalInfo\"\n          fields={birthPlanSections.find(section => section.id === 'personalInfo')?.fields || []}\n        />\n        \n        {/* All other sections */}\n        {birthPlanSections\n          .filter(section => section.id !== 'personalInfo')\n          .map(section => (\n            <PreviewSection \n              key={section.id}\n              title={section.title} \n              sectionData={birthPlan[section.id] || {}}\n              sectionId={section.id}\n              fields={section.fields}\n            />\n          ))\n        }\n        \n        {/* Signature section */}\n        <SignatureSection personalInfo={birthPlan.personalInfo || {}} />\n        \n        {/* Footer only visible in print */}\n        <PrintFooter />\n      </div>\n      \n      <div className=\"flex flex-col sm:flex-row justify-between gap-3 mt-6 md:mt-8 print:hidden\">\n        <Button \n          variant=\"outline\"\n          onClick={onEdit}\n          className=\"flex items-center justify-center\"\n        >\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Voltar e Editar\n        </Button>\n        \n        <Button \n          onClick={onNext}\n          className=\"flex items-center justify-center bg-maternal-600 hover:bg-maternal-700\"\n        >\n          Compartilhar <ArrowRight className=\"ml-2 h-4 w-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","\nimport { useState } from 'react';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { toast } from 'sonner';\n\ninterface EmailShareDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onExportPDF: () => void; // This will be used to export the Word document instead\n}\n\nexport function EmailShareDialog({ open, onOpenChange, onExportPDF }: EmailShareDialogProps) {\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('Meu Plano de Parto');\n  const [message, setMessage] = useState(\n    'Olá,\\n\\nGostaria de compartilhar com você meu plano de parto para o nascimento do meu bebê. ' +\n    'Você encontrará em anexo um documento com minhas preferências, que gostaria de discutir em nossa próxima consulta.\\n\\n' +\n    'Desde já agradeço sua atenção e apoio neste momento tão especial.\\n\\n' +\n    'Atenciosamente,'\n  );\n  const [isSending, setIsSending] = useState(false);\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email) {\n      toast(\"Por favor, informe um endereço de e-mail.\");\n      return;\n    }\n    \n    setIsSending(true);\n    \n    try {\n      // First generate the Word document\n      await onExportPDF();\n      \n      // We would normally send the email via an API here\n      // For now, we'll just open the user's mail client with a pre-filled message\n      const mailtoLink = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(message)}`;\n      window.open(mailtoLink, '_blank');\n      \n      toast(\"E-mail preparado! Não se esqueça de anexar o documento Word que você baixou.\");\n      onOpenChange(false);\n      resetForm();\n    } catch (error) {\n      console.error(\"Error sending email:\", error);\n      toast(\"Ocorreu um erro ao preparar o e-mail. Por favor, tente novamente.\");\n    } finally {\n      setIsSending(false);\n    }\n  };\n  \n  const resetForm = () => {\n    setEmail('');\n    setSubject('Meu Plano de Parto');\n    setMessage(\n      'Olá,\\n\\nGostaria de compartilhar com você meu plano de parto para o nascimento do meu bebê. ' +\n      'Você encontrará em anexo um documento com minhas preferências, que gostaria de discutir em nossa próxima consulta.\\n\\n' +\n      'Desde já agradeço sua atenção e apoio neste momento tão especial.\\n\\n' +\n      'Atenciosamente,'\n    );\n  };\n  \n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[500px]\">\n        <DialogHeader>\n          <DialogTitle>Compartilhar por E-mail</DialogTitle>\n          <DialogDescription>\n            Envie seu plano de parto para seu médico, doula ou outro profissional de saúde\n          </DialogDescription>\n        </DialogHeader>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-4 mt-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">E-mail do destinatário</Label>\n            <Input \n              id=\"email\" \n              type=\"email\" \n              placeholder=\"nome@exemplo.com\" \n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"subject\">Assunto</Label>\n            <Input \n              id=\"subject\" \n              value={subject}\n              onChange={(e) => setSubject(e.target.value)}\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"message\">Mensagem</Label>\n            <Textarea \n              id=\"message\" \n              rows={6}\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </div>\n          \n          <DialogFooter className=\"mt-6\">\n            <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)}>\n              Cancelar\n            </Button>\n            <Button type=\"submit\" disabled={isSending}>\n              {isSending ? \"Enviando...\" : \"Enviar E-mail\"}\n            </Button>\n          </DialogFooter>\n        </form>\n        \n        <div className=\"mt-4 text-sm text-gray-500\">\n          <p>\n            <strong>Nota:</strong> Isso abrirá seu cliente de e-mail padrão. Você precisará anexar manualmente \n            o documento Word que foi baixado.\n          </p>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","\nimport React from 'react';\n\nexport function NextSteps() {\n  return (\n    <div className=\"bg-maternal-100 p-6 rounded-lg mb-8\">\n      <h3 className=\"text-xl font-semibold text-maternal-800 mb-4\">Próximos Passos</h3>\n      <ol className=\"list-decimal pl-5 space-y-2 mb-0\">\n        <li>Abra o documento Word e personalize-o conforme necessário</li>\n        <li>Discuta seu plano com seu parceiro ou acompanhante de parto</li>\n        <li>Agende uma consulta com seu médico para discutir o plano</li>\n        <li>Faça as alterações recomendadas pelo seu médico, se necessário</li>\n        <li>Imprima várias cópias para levar ao hospital/maternidade</li>\n        <li>Coloque uma cópia na sua bolsa de maternidade</li>\n      </ol>\n    </div>\n  );\n}\n","\nimport React from 'react';\nimport { LucideIcon } from 'lucide-react';\n\ninterface ShareOptionProps {\n  icon: LucideIcon;\n  title: string;\n  description: string;\n  onClick: () => void;\n}\n\nexport function ShareOption({ icon: Icon, title, description, onClick }: ShareOptionProps) {\n  return (\n    <button\n      className=\"flex flex-col items-center justify-center p-6 border rounded-lg hover:bg-maternal-50 transition-colors\"\n      onClick={onClick}\n    >\n      <Icon className=\"h-12 w-12 text-maternal-600 mb-4\" />\n      <span className=\"font-medium text-maternal-900\">{title}</span>\n      <span className=\"text-sm text-gray-500 mt-1\">{description}</span>\n    </button>\n  );\n}\n","\nimport React from 'react';\nimport { Copy, FileText, Share2, Mail } from 'lucide-react';\nimport { ShareOption } from '../ShareOption';\nimport { useIsMobile } from '@/hooks/use-mobile';\n\ninterface ShareOptionsGridProps {\n  onCopyText: () => void;\n  onExportWord: () => void;\n  onShareWhatsApp: () => void;\n  onOpenEmailDialog: () => void;\n}\n\nexport function ShareOptionsGrid({\n  onCopyText,\n  onExportWord,\n  onShareWhatsApp,\n  onOpenEmailDialog\n}: ShareOptionsGridProps) {\n  const isMobile = useIsMobile();\n  \n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-4 md:p-6 mb-6 md:mb-8\">\n      <h2 className={`${isMobile ? 'text-xl' : 'text-2xl'} font-semibold text-maternal-800 mb-4 md:mb-6`}>\n        Opções de Compartilhamento\n      </h2>\n      \n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 md:gap-6\">\n        <ShareOption\n          icon={Copy}\n          title=\"Copiar Texto\"\n          description=\"Copie o conteúdo para compartilhar\"\n          onClick={onCopyText}\n        />\n        \n        <ShareOption\n          icon={FileText}\n          title=\"Word (Editável)\"\n          description=\"Salve como documento editável\"\n          onClick={onExportWord}\n        />\n        \n        <ShareOption\n          icon={Share2}\n          title=\"WhatsApp\"\n          description=\"Compartilhe via WhatsApp\"\n          onClick={onShareWhatsApp}\n        />\n        \n        <ShareOption\n          icon={Mail}\n          title=\"E-mail\"\n          description=\"Envie por e-mail para sua equipe\"\n          onClick={onOpenEmailDialog}\n        />\n      </div>\n    </div>\n  );\n}\n","\n/**\n * Renders the title and introduction for the birth plan export\n * @param container The container element to render into\n */\nexport const renderHeader = (container: HTMLElement): void => {\n  // Add title and introduction\n  const titleContainer = document.createElement('div');\n  titleContainer.className = 'flex justify-between items-center mb-4';\n  \n  const title = document.createElement('h1');\n  title.className = 'text-2xl font-bold';\n  title.textContent = 'PLANO DE PARTO';\n  titleContainer.appendChild(title);\n  \n  const logo = document.createElement('img');\n  logo.src = '/lovable-uploads/6f452e84-0922-495e-bad9-57a66fa763f6.png';\n  logo.alt = 'Energia Materna';\n  logo.className = 'h-12';\n  titleContainer.appendChild(logo);\n  container.appendChild(titleContainer);\n  \n  // Add the disclaimer\n  const disclaimer = document.createElement('p');\n  disclaimer.className = 'text-sm text-gray-700 mt-2 mb-6';\n  disclaimer.textContent = 'Este documento reflete minhas preferências para o parto e nascimento do meu bebê. Ele foi elaborado após ' +\n    'cuidadosa pesquisa e reflexão, em colaboração com meu parceiro e equipe de saúde. Compreendo que ' +\n    'situações imprevistas podem surgir durante o trabalho de parto, e que a saúde e bem-estar do ' +\n    'bebê e meu são prioridade. Peço gentilmente que, na ausência de emergências médicas, minhas ' +\n    'escolhas sejam respeitadas, e que quaisquer intervenções necessárias sejam discutidas comigo ' +\n    'antes de serem realizadas.';\n  container.appendChild(disclaimer);\n};\n","\n/**\n * Renders the main content sections of the birth plan into the container\n * @param birthPlanData The birth plan data to render\n * @param container The container element to render into\n */\nexport const renderBirthPlanContent = (\n  birthPlanData: Record<string, any>,\n  container: HTMLElement\n): void => {\n  // Add personal info section\n  renderPersonalInfoSection(birthPlanData.personalInfo || {}, container);\n  \n  // Loop through all other birth plan sections\n  Object.entries(birthPlanData).forEach(([sectionKey, sectionData]) => {\n    if (sectionKey === 'personalInfo' || !sectionData || typeof sectionData !== 'object') return;\n    \n    renderSection(sectionKey, sectionData as Record<string, any>, container);\n  });\n};\n\n/**\n * Renders the personal information section\n */\nconst renderPersonalInfoSection = (\n  personalInfo: Record<string, any>,\n  container: HTMLElement\n): void => {\n  const personalSection = document.createElement('div');\n  personalSection.className = 'mb-6';\n  \n  const personalTitle = document.createElement('h2');\n  personalTitle.className = 'text-xl font-bold mb-2';\n  personalTitle.textContent = 'Informações Pessoais';\n  personalSection.appendChild(personalTitle);\n  \n  const personalList = document.createElement('div');\n  personalList.className = 'pl-4';\n  \n  // Add each personal info item\n  const personalFields = [\n    { key: 'name', label: 'Nome' },\n    { key: 'dueDate', label: 'Data prevista' },\n    { key: 'birthLocation', label: 'Local planejado para o parto' },\n    { key: 'hospital', label: 'Hospital/Maternidade' },\n    { key: 'hospitalAddress', label: 'Endereço' },\n    { key: 'hospitalPhone', label: 'Telefone' },\n    { key: 'healthProvider', label: 'Médico/Obstetra' },\n    { key: 'healthProviderContact', label: 'Telefone' },\n    { key: 'healthProviderRegistry', label: 'CRM' }\n  ];\n  \n  personalFields.forEach(field => {\n    if (personalInfo[field.key]) {\n      const item = document.createElement('div');\n      item.className = 'mb-2';\n      \n      const label = document.createElement('h3');\n      label.className = 'font-semibold';\n      label.textContent = field.label;\n      item.appendChild(label);\n      \n      const value = document.createElement('p');\n      value.textContent = personalInfo[field.key];\n      item.appendChild(value);\n      \n      personalList.appendChild(item);\n    }\n  });\n  \n  personalSection.appendChild(personalList);\n  container.appendChild(personalSection);\n};\n\n/**\n * Renders a single birth plan section\n */\nconst renderSection = (\n  sectionKey: string,\n  sectionData: Record<string, any>,\n  container: HTMLElement\n): void => {\n  const section = document.createElement('div');\n  section.className = 'mb-6';\n  \n  const sectionTitle = document.createElement('h2');\n  sectionTitle.className = 'text-xl font-bold mb-2';\n  sectionTitle.textContent = getSectionDisplayName(sectionKey);\n  section.appendChild(sectionTitle);\n  \n  const sectionContent = document.createElement('div');\n  sectionContent.className = 'pl-4';\n  \n  // Add each field in the section\n  Object.entries(sectionData).forEach(([key, value]) => {\n    if (!value) return;\n    \n    const item = document.createElement('div');\n    item.className = 'mb-2';\n    \n    const label = document.createElement('h3');\n    label.className = 'font-semibold';\n    label.textContent = key;\n    item.appendChild(label);\n    \n    const content = document.createElement('p');\n    content.textContent = Array.isArray(value) ? value.join(\", \") : value;\n    item.appendChild(content);\n    \n    sectionContent.appendChild(item);\n  });\n  \n  section.appendChild(sectionContent);\n  container.appendChild(section);\n};\n\n/**\n * Helper function to get user-friendly section names\n */\nconst getSectionDisplayName = (sectionId: string): string => {\n  const sectionNameMap: Record<string, string> = {\n    personalInfo: 'Informações Pessoais',\n    laborPreferences: 'Preferências para o Trabalho de Parto',\n    atmosfera: 'Ambiente e Acompanhamento',\n    trabalhoDeParto: 'Trabalho de Parto',\n    painManagement: 'Alívio da Dor',\n    nascimento: 'Parto',\n    newborn: 'Cuidados com o Recém-Nascido',\n    cesarea: 'Cesárea (Se Necessária)',\n    posParto: 'Pós-Parto',\n    situacoesEspeciais: 'Situações Especiais'\n  };\n  \n  return sectionNameMap[sectionId] || sectionId;\n};\n","\nimport { renderHeader } from './renderHeader';\nimport { renderBirthPlanContent } from './renderContent';\nimport { renderSignatures } from './renderSignatures';\nimport { renderFooter } from './renderFooter';\nimport { getSectionDisplayName } from '../birthPlanUtils';\n\n/**\n * Renders birth plan content into the DOM for export\n * @param birthPlanData The birth plan data to render\n * @param containerId The ID of the container to render into\n */\nexport const renderBirthPlanForExport = (\n  birthPlanData: Record<string, any>, \n  containerId: string = 'birth-plan-content'\n): void => {\n  const container = document.getElementById(containerId);\n  if (!container) return;\n  \n  // Clear previous content\n  container.innerHTML = '';\n  \n  // Render each section of the document\n  renderHeader(container);\n  renderBirthPlanContent(birthPlanData, container);\n  renderSignatures(birthPlanData.personalInfo || {}, container);\n  renderFooter(container);\n  \n  // Make the container visible for export\n  container.style.display = 'block';\n};\n\n// Export everything for use in other modules\nexport {\n  renderHeader,\n  renderBirthPlanContent,\n  renderSignatures,\n  renderFooter,\n  getSectionDisplayName\n};\n","\n/**\n * Renders the signature section at the bottom of the birth plan\n * @param personalInfo The personal information from the birth plan\n * @param container The container element to render into\n */\nexport const renderSignatures = (\n  personalInfo: Record<string, any>,\n  container: HTMLElement\n): void => {\n  // Add signature section\n  const signatureSection = document.createElement('div');\n  signatureSection.className = 'mt-12';\n  \n  const signatureTitle = document.createElement('h2');\n  signatureTitle.className = 'text-xl font-bold mb-4 border-b pb-2';\n  signatureTitle.textContent = 'Assinaturas';\n  signatureSection.appendChild(signatureTitle);\n  \n  const signatureGrid = document.createElement('div');\n  signatureGrid.className = 'grid grid-cols-2 gap-8';\n  \n  // Patient signature\n  const patientSignature = document.createElement('div');\n  const patientLine = document.createElement('div');\n  patientLine.className = 'border-b border-black h-12 mb-2';\n  patientSignature.appendChild(patientLine);\n  \n  const patientName = document.createElement('p');\n  patientName.className = 'text-center';\n  patientName.textContent = personalInfo.name || '';\n  patientSignature.appendChild(patientName);\n  \n  const patientLabel = document.createElement('p');\n  patientLabel.className = 'text-center text-sm text-gray-600';\n  patientLabel.textContent = 'Gestante';\n  patientSignature.appendChild(patientLabel);\n  \n  // Doctor signature\n  const doctorSignature = document.createElement('div');\n  const doctorLine = document.createElement('div');\n  doctorLine.className = 'border-b border-black h-12 mb-2';\n  doctorSignature.appendChild(doctorLine);\n  \n  const doctorName = document.createElement('p');\n  doctorName.className = 'text-center';\n  doctorName.textContent = personalInfo.healthProvider || '_________________';\n  doctorSignature.appendChild(doctorName);\n  \n  const doctorLabel = document.createElement('p');\n  doctorLabel.className = 'text-center text-sm text-gray-600';\n  doctorLabel.textContent = 'Médico/Obstetra';\n  doctorSignature.appendChild(doctorLabel);\n  \n  const doctorCRM = document.createElement('p');\n  doctorCRM.className = 'text-center text-sm text-gray-600';\n  doctorCRM.textContent = `CRM: ${personalInfo.healthProviderRegistry || '_________________'}`;\n  doctorSignature.appendChild(doctorCRM);\n  \n  signatureGrid.appendChild(patientSignature);\n  signatureGrid.appendChild(doctorSignature);\n  \n  // Additional signatures\n  const additionalSignatures = document.createElement('div');\n  additionalSignatures.className = 'grid grid-cols-2 gap-8 mt-8';\n  \n  // Pediatrician signature\n  const pediatricianSignature = document.createElement('div');\n  const pediatricianLine = document.createElement('div');\n  pediatricianLine.className = 'border-b border-black h-12 mb-2';\n  pediatricianSignature.appendChild(pediatricianLine);\n  \n  const pediatricianName = document.createElement('p');\n  pediatricianName.className = 'text-center';\n  pediatricianName.textContent = personalInfo.pediatrician || '_________________';\n  pediatricianSignature.appendChild(pediatricianName);\n  \n  const pediatricianLabel = document.createElement('p');\n  pediatricianLabel.className = 'text-center text-sm text-gray-600';\n  pediatricianLabel.textContent = 'Pediatra Neonatal';\n  pediatricianSignature.appendChild(pediatricianLabel);\n  \n  const pediatricianCRM = document.createElement('p');\n  pediatricianCRM.className = 'text-center text-sm text-gray-600';\n  pediatricianCRM.textContent = `CRM: ${personalInfo.pediatricianRegistry || '_________________'}`;\n  pediatricianSignature.appendChild(pediatricianCRM);\n  \n  // Doula signature\n  const doulaSignature = document.createElement('div');\n  const doulaLine = document.createElement('div');\n  doulaLine.className = 'border-b border-black h-12 mb-2';\n  doulaSignature.appendChild(doulaLine);\n  \n  const doulaName = document.createElement('p');\n  doulaName.className = 'text-center';\n  doulaName.textContent = personalInfo.doula || '_________________';\n  doulaSignature.appendChild(doulaName);\n  \n  const doulaLabel = document.createElement('p');\n  doulaLabel.className = 'text-center text-sm text-gray-600';\n  doulaLabel.textContent = 'Doula';\n  doulaSignature.appendChild(doulaLabel);\n  \n  const doulaRegistry = document.createElement('p');\n  doulaRegistry.className = 'text-center text-sm text-gray-600';\n  doulaRegistry.textContent = `Registro: ${personalInfo.doulaRegistry || '_________________'}`;\n  doulaSignature.appendChild(doulaRegistry);\n  \n  additionalSignatures.appendChild(pediatricianSignature);\n  additionalSignatures.appendChild(doulaSignature);\n  \n  signatureSection.appendChild(signatureGrid);\n  signatureSection.appendChild(additionalSignatures);\n  container.appendChild(signatureSection);\n};\n","\n/**\n * Renders the footer for the birth plan\n * @param container The container element to render into\n */\nexport const renderFooter = (container: HTMLElement): void => {\n  // Add footer with date\n  const footer = document.createElement('div');\n  footer.className = 'mt-8 text-center';\n  footer.textContent = `Criado em ${new Date().toLocaleDateString()}`;\n  container.appendChild(footer);\n};\n","import { toast } from 'sonner';\nimport { exportAsPDF, exportAsText, exportAsWord } from '@/utils/export';\nimport { renderBirthPlanForExport } from '../utils/export';\n\nexport const useExportHandlers = (birthPlan: Record<string, any>) => {\n  // Handler for copying text to clipboard\n  const handleCopyText = () => {\n    if (!birthPlan) return;\n    \n    const text = createShareableText(birthPlan);\n    \n    navigator.clipboard.writeText(text)\n      .then(() => {\n        toast(\"Seu plano de parto foi copiado e está pronto para ser compartilhado.\");\n      })\n      .catch(() => {\n        toast(\"Não foi possível copiar o texto para a área de transferência.\");\n      });\n  };\n  \n  // Handler for exporting as PDF\n  const handleExportPDF = () => {\n    if (!birthPlan) return;\n    \n    // First, render the birth plan content explicitly for PDF export\n    renderBirthPlanForExport(birthPlan);\n    \n    // Then export it\n    exportAsPDF('birth-plan-content', 'meu-plano-de-parto.pdf')\n      .then(() => {\n        toast(\"PDF gerado com sucesso!\");\n      })\n      .catch((error) => {\n        console.error(\"Erro ao gerar PDF:\", error);\n        toast(\"Ocorreu um erro ao gerar o PDF. Por favor, tente exportar como documento Word.\");\n      });\n  };\n  \n  // Handler for exporting as Word document\n  const handleExportWord = () => {\n    if (!birthPlan || Object.keys(birthPlan).length === 0) {\n      toast(\"Dados do plano de parto insuficientes para gerar um documento.\");\n      return;\n    }\n    \n    // Debug log to check if birth plan data is available\n    console.log(\"Birth plan data being sent to Word export:\", birthPlan);\n    \n    exportAsWord(birthPlan, 'meu-plano-de-parto.docx')\n      .then(() => {\n        toast(\"Documento Word gerado com sucesso!\");\n      })\n      .catch((error) => {\n        console.error(\"Erro ao gerar documento Word:\", error);\n        toast(\"Ocorreu um erro ao gerar o documento Word. Por favor, tente novamente.\");\n      });\n  };\n  \n  // Handler for exporting as text file\n  const handleExportText = () => {\n    if (!birthPlan) return;\n    \n    // Render content before exporting\n    renderBirthPlanForExport(birthPlan);\n    \n    exportAsText('birth-plan-content', 'meu-plano-de-parto.txt')\n      .then(() => {\n        toast(\"Arquivo de texto gerado com sucesso!\");\n      })\n      .catch((error) => {\n        console.error(\"Erro ao gerar arquivo de texto:\", error);\n        toast(\"Ocorreu um erro ao gerar o arquivo de texto. Por favor, tente novamente.\");\n      });\n  };\n  \n  // Handler for sharing via WhatsApp\n  const handleShareViaWhatsApp = () => {\n    if (!birthPlan) return;\n    \n    // Create a simple text message for WhatsApp with a mention of the already generated document\n    const message = encodeURIComponent(\"Olá! Compartilho com você meu plano de parto. Acabei de gerar um documento editável.\");\n    const whatsappUrl = `https://wa.me/?text=${message}`;\n    \n    // First generate the Word document\n    exportAsWord(birthPlan, 'meu-plano-de-parto.docx')\n      .then(() => {\n        // Then open WhatsApp\n        window.open(whatsappUrl, '_blank');\n        toast(\"Documento Word gerado e pronto para compartilhamento no WhatsApp.\");\n      })\n      .catch((error) => {\n        console.error(\"Erro ao exportar documento Word para WhatsApp:\", error);\n        toast(\"Não foi possível gerar o documento para compartilhamento.\");\n      });\n  };\n  \n  return {\n    handleCopyText,\n    handleExportPDF,\n    handleExportWord,\n    handleExportText,\n    handleShareViaWhatsApp\n  };\n};\n\n/**\n * Creates a shareable text version of the birth plan\n */\nexport const createShareableText = (birthPlan: Record<string, any>) => {\n  const personalInfo = birthPlan.personalInfo || {};\n  \n  let text = `MEU PLANO DE PARTO\\n\\n`;\n  text += `Nome: ${personalInfo.name || 'Não informado'}\\n`;\n  text += `Data prevista: ${personalInfo.dueDate || 'Não informada'}\\n`;\n  text += `Local planejado para o parto: ${personalInfo.birthLocation || 'Não informado'}\\n`;\n  text += `Hospital/Maternidade de referência: ${personalInfo.hospital || 'Não informado'}\\n`;\n  text += `Endereço: ${personalInfo.hospitalAddress || 'Não informado'}\\n`;\n  text += `Telefone: ${personalInfo.hospitalPhone || 'Não informado'}\\n`;\n  text += `Médico/Obstetra: ${personalInfo.healthProvider || 'Não informado'}\\n`;\n  text += `Telefone: ${personalInfo.healthProviderContact || 'Não informado'}\\n`;\n  text += `CRM: ${personalInfo.healthProviderRegistry || 'Não informado'}\\n`;\n  \n  if (personalInfo.midwife) {\n    text += `Enfermeira Obstetriz: ${personalInfo.midwife || 'Não informada'}\\n`;\n    text += `Telefone: ${personalInfo.midwifeContact || 'Não informado'}\\n`;\n    text += `COREN: ${personalInfo.midwifeRegistry || 'Não informado'}\\n`;\n  }\n  \n  if (personalInfo.doula) {\n    text += `Doula: ${personalInfo.doula || 'Não informada'}\\n`;\n    text += `Telefone: ${personalInfo.doulaContact || 'Não informado'}\\n`;\n    text += `Certificação: ${personalInfo.doulaRegistry || 'Não informada'}\\n`;\n  }\n  \n  text += `Acompanhantes: ${personalInfo.companions || 'Não informados'}\\n\\n`;\n  \n  // Add other sections\n  Object.entries(birthPlan).forEach(([sectionKey, sectionData]) => {\n    if (sectionKey === 'personalInfo' || !sectionData || typeof sectionData !== 'object') return;\n    \n    text += `${getSectionDisplayName(sectionKey).toUpperCase()}:\\n`;\n    \n    // Add each field in the section\n    Object.entries(sectionData as Record<string, any>).forEach(([key, value]) => {\n      if (!value) return;\n      \n      text += `- ${key}: ${Array.isArray(value) ? value.join(', ') : value}\\n`;\n    });\n    \n    text += '\\n';\n  });\n  \n  text += `Criado em ${new Date().toLocaleDateString()}`;\n  text += `\\n\\nEste documento representa minhas preferências para o parto e nascimento do meu bebê.`;\n  text += `\\n\\nAssinaturas:\\n\\n`;\n  text += `___________________________        ___________________________\\n`;\n  text += `${personalInfo.name || 'Gestante'}                 ${personalInfo.healthProvider || 'Médico/Obstetra'}\\n`;\n  text += `                                   CRM: ${personalInfo.healthProviderRegistry || '_________'}\\n\\n`;\n  \n  // Add enfermeira obstetriz and doula signatures\n  text += `___________________________        ___________________________\\n`;\n  if (personalInfo.midwife) {\n    text += `${personalInfo.midwife || 'Enfermeira Obstetriz'}            ${personalInfo.doula || 'Doula'}\\n`;\n    text += `COREN: ${personalInfo.midwifeRegistry || '_________'}       Certificação: ${personalInfo.doulaRegistry || '_________'}`;\n  } else {\n    text += `Enfermeira Obstétrica              ${personalInfo.doula || 'Doula'}\\n`;\n    text += `COREN: _________                 Certificação: ${personalInfo.doulaRegistry || '_________'}`;\n  }\n  \n  return text;\n};\n\n/**\n * Helper function to get user-friendly section names\n */\nexport const getSectionDisplayName = (sectionId: string): string => {\n  const sectionNameMap: Record<string, string> = {\n    personalInfo: 'Informações Pessoais',\n    laborPreferences: 'Preferências para o Trabalho de Parto',\n    atmosfera: 'Ambiente e Acompanhamento',\n    trabalhoDeParto: 'Trabalho de Parto',\n    painManagement: 'Alívio da Dor',\n    nascimento: 'Parto',\n    newborn: 'Cuidados com o Recém-Nascido',\n    cesarea: 'Cesárea (Se Necessária)',\n    posParto: 'Pós-Parto',\n    situacoesEspeciais: 'Situações Especiais'\n  };\n  \n  return sectionNameMap[sectionId] || sectionId;\n};\n","\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft } from 'lucide-react';\nimport { EmailShareDialog } from './EmailShareDialog';\nimport { NextSteps } from './share/NextSteps';\nimport { ShareOptionsGrid } from './share/ShareOptionsGrid';\nimport { useExportHandlers } from './share/ExportHandlers';\nimport { useIsMobile } from '@/hooks/use-mobile';\n\ninterface BirthPlanShareProps {\n  birthPlan: Record<string, any>;\n  onEdit: () => void;\n}\n\nexport function BirthPlanShare({ birthPlan, onEdit }: BirthPlanShareProps) {\n  const [emailDialogOpen, setEmailDialogOpen] = useState(false);\n  const isMobile = useIsMobile();\n  \n  // Debug log to check birth plan data\n  console.log(\"Birth plan data in Share component:\", birthPlan);\n  \n  // Scroll to top on component mount\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  \n  // Get all export handlers\n  const {\n    handleCopyText,\n    handleExportPDF,\n    handleExportWord,\n    handleExportText,\n    handleShareViaWhatsApp\n  } = useExportHandlers(birthPlan);\n  \n  return (\n    <div className=\"animate-fade-in\">\n      <h1 className={`${isMobile ? 'text-2xl' : 'text-3xl'} font-bold text-maternal-900 mb-4 md:mb-6`}>\n        Compartilhe seu Plano de Parto\n      </h1>\n      \n      <div className=\"prose max-w-none mb-6 md:mb-8\">\n        <p className={`${isMobile ? 'text-base' : 'text-lg'}`}>\n          Seu plano de parto está pronto! Agora você pode compartilhá-lo com sua equipe médica, \n          familiares ou outros cuidadores que estarão envolvidos no nascimento do seu bebê.\n        </p>\n        \n        <div className=\"bg-maternal-50 p-3 md:p-4 rounded-lg border-l-4 border-maternal-400 my-4 md:my-6\">\n          <p className=\"font-medium text-maternal-900 mb-0 text-sm md:text-base\">\n            <strong>Dica:</strong> Exporte seu plano de parto como documento Word para poder editá-lo \n            conforme suas necessidades específicas antes de compartilhar com sua equipe médica.\n          </p>\n        </div>\n      </div>\n      \n      {/* Hidden container for document generation */}\n      <div id=\"birth-plan-content\" className=\"hidden\">\n        {/* Content will be dynamically generated before export */}\n      </div>\n      \n      {/* Share options grid */}\n      <ShareOptionsGrid \n        onCopyText={handleCopyText}\n        onExportWord={handleExportWord}\n        onShareWhatsApp={handleShareViaWhatsApp}\n        onOpenEmailDialog={() => setEmailDialogOpen(true)}\n      />\n      \n      {/* Next steps section */}\n      <NextSteps />\n      \n      {/* Back button */}\n      <div className=\"flex justify-between mt-6 md:mt-8\">\n        <Button \n          variant=\"outline\"\n          onClick={onEdit}\n          className=\"flex items-center\"\n        >\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Voltar e Editar\n        </Button>\n      </div>\n      \n      {/* Email Dialog */}\n      <EmailShareDialog \n        open={emailDialogOpen} \n        onOpenChange={setEmailDialogOpen} \n        onExportPDF={handleExportWord} // Using Word export here\n      />\n    </div>\n  );\n}\n","\nimport { BirthPlanWelcome } from './BirthPlanWelcome';\nimport { BirthPlanQuestionnaire } from './BirthPlanQuestionnaire';\nimport { BirthPlanEditor } from './BirthPlanEditor';\nimport { BirthPlanPreview } from './BirthPlanPreview';\nimport { BirthPlanShare } from './BirthPlanShare';\nimport { BuilderStage } from './types/questionnaire';\n\ninterface StageContentProps {\n  currentStage: BuilderStage;\n  birthPlanContent: Record<string, any>;\n  questionnaireAnswers: Record<string, any>;\n  onQuestionnaireSubmit: (data: Record<string, any>) => void;\n  onUpdateBirthPlan: (data: Record<string, any>) => void;\n  onNextStage: () => void;\n  onGoToStage: (stage: BuilderStage) => void;\n}\n\nexport function StageContent({\n  currentStage,\n  birthPlanContent,\n  questionnaireAnswers,\n  onQuestionnaireSubmit,\n  onUpdateBirthPlan,\n  onNextStage,\n  onGoToStage\n}: StageContentProps) {\n  switch (currentStage) {\n    case 'welcome':\n      return <BirthPlanWelcome onStart={onNextStage} />;\n      \n    case 'questionnaire':\n      return <BirthPlanQuestionnaire onSubmit={onQuestionnaireSubmit} />;\n      \n    case 'editor':\n      return (\n        <BirthPlanEditor \n          birthPlan={birthPlanContent} \n          onUpdate={onUpdateBirthPlan} \n          onNext={onNextStage}\n          onBack={() => onGoToStage('questionnaire')}\n          questionnaireAnswers={questionnaireAnswers}\n        />\n      );\n      \n    case 'preview':\n      return (\n        <BirthPlanPreview \n          birthPlan={birthPlanContent} \n          onEdit={() => onGoToStage('editor')} \n          onNext={onNextStage} \n        />\n      );\n      \n    case 'share':\n      return (\n        <BirthPlanShare \n          birthPlan={birthPlanContent} \n          onEdit={() => onGoToStage('editor')} \n        />\n      );\n      \n    default:\n      return <div>Stage not found</div>;\n  }\n}\n","\nimport { Link } from 'react-router-dom';\nimport { BookOpen, Newspaper, Award } from 'lucide-react';\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-gradient-to-r from-maternal-50 to-purple-50 py-12 mt-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div>\n            <div className=\"flex flex-col items-start mb-4\">\n              <a href=\"https://www.energiamaterna.com.br\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img \n                  src=\"/lovable-uploads/6f452e84-0922-495e-bad9-57a66fa763f6.png\" \n                  alt=\"Energia Materna\" \n                  className=\"h-16 mb-4 hover:opacity-90 transition-opacity\"\n                />\n              </a>\n              <p className=\"text-maternal-700\">Apoiando gestantes a terem experiências de parto mais conscientes, respeitosas e transformadoras.</p>\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end\">\n            <div>\n              <h3 className=\"text-maternal-900 font-semibold text-lg mb-4\">Links Rápidos</h3>\n              <ul className=\"space-y-3\">\n                <li>\n                  <Link \n                    to=\"/guia-online\" \n                    className=\"text-maternal-700 hover:text-maternal-600 transition-colors flex items-center\"\n                  >\n                    <BookOpen className=\"h-4 w-4 mr-2\" />\n                    Guia Online\n                  </Link>\n                </li>\n                <li>\n                  <a \n                    href=\"https://www.energiamaterna.com.br/especiais\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\" \n                    className=\"text-maternal-700 hover:text-maternal-600 transition-colors flex items-center\"\n                  >\n                    <Award className=\"h-4 w-4 mr-2\" />\n                    Especiais Energia Materna\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"https://www.energiamaterna.com.br/blog\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\" \n                    className=\"text-maternal-700 hover:text-maternal-600 transition-colors flex items-center\"\n                  >\n                    <Newspaper className=\"h-4 w-4 mr-2\" />\n                    Blog\n                  </a>\n                </li>\n              </ul>\n              \n              <div className=\"flex space-x-4 mt-6\">\n                <a href=\"https://www.instagram.com/energiamaternabr\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-maternal-700 hover:text-maternal-600 transition-colors\">\n                  <span className=\"sr-only\">Instagram</span>\n                  <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                    <path fillRule=\"evenodd\" d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\" clipRule=\"evenodd\" />\n                  </svg>\n                </a>\n                <a href=\"https://www.facebook.com/profile.php?id=61574158252682\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-maternal-700 hover:text-maternal-600 transition-colors\">\n                  <span className=\"sr-only\">Facebook</span>\n                  <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                    <path fillRule=\"evenodd\" d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\" clipRule=\"evenodd\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-maternal-200 mt-12 pt-8 text-center\">\n          <p className=\"text-maternal-600\">&copy; {new Date().getFullYear()} Energia Materna. Todos os direitos reservados.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","\nimport { BuilderStage } from './types/questionnaire';\nimport { BirthPlanHeader } from './BirthPlanHeader';\nimport { StageContent } from './StageContent';\nimport { Footer } from '@/components/Footer';\n\ninterface BuilderMainContentProps {\n  currentStage: BuilderStage;\n  birthPlanContent: Record<string, any>;\n  questionnaireAnswers: Record<string, any>;\n  embedded: boolean;\n  onQuestionnaireSubmit: (data: Record<string, any>) => void;\n  onUpdateBirthPlan: (data: Record<string, any>) => void;\n  onNextStage: () => void;\n  onGoToStage: (stage: BuilderStage) => void;\n}\n\nexport function BuilderMainContent({\n  currentStage,\n  birthPlanContent,\n  questionnaireAnswers,\n  embedded,\n  onQuestionnaireSubmit,\n  onUpdateBirthPlan,\n  onNextStage,\n  onGoToStage\n}: BuilderMainContentProps) {\n  console.log(\"BuilderMainContent rendering with stage:\", currentStage, \"embedded:\", embedded);\n  \n  return (\n    <div \n      className={`bg-maternal-50 min-h-screen w-full ${embedded ? 'embedded-mode' : ''}`} \n      role=\"main\" \n      aria-label=\"Construa seu Plano de Parto\"\n    >\n      <div className=\"w-full\">\n        {!embedded && (\n          <BirthPlanHeader currentStage={currentStage} onStageChange={onGoToStage} />\n        )}\n        \n        <main className=\"w-full max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Versão compacta do banner de informações */}\n          <div className=\"w-full mb-6 p-3 bg-maternal-100 border-l-4 border-maternal-400 rounded-md\">\n            <h1 className=\"text-xl font-semibold text-maternal-800\">\n              {currentStage === 'welcome' ? 'Bem-vinda ao Construtor de Plano de Parto' : \n               currentStage === 'questionnaire' ? 'Questionário do Plano de Parto' :\n               currentStage === 'editor' ? 'Editor do Plano de Parto' :\n               currentStage === 'preview' ? 'Visualização do Plano de Parto' :\n               'Compartilhar seu Plano de Parto'}\n            </h1>\n          </div>\n          \n          <div className=\"w-full bg-white shadow-xl rounded-lg p-4 sm:p-6 md:p-8 mb-8 border-t-4 border-maternal-400\">\n            <StageContent \n              currentStage={currentStage}\n              birthPlanContent={birthPlanContent}\n              questionnaireAnswers={questionnaireAnswers}\n              onQuestionnaireSubmit={onQuestionnaireSubmit}\n              onUpdateBirthPlan={onUpdateBirthPlan}\n              onNextStage={onNextStage}\n              onGoToStage={onGoToStage}\n            />\n          </div>\n        </main>\n        \n        {!embedded && <Footer />}\n      </div>\n    </div>\n  );\n}\n","\nimport { Button } from '@/components/ui/button';\nimport { useEffect, useState } from 'react';\nimport { Footer } from '@/components/Footer';\nimport { useNavigation } from '@/hooks/useNavigation';\nimport { toast } from 'sonner';\nimport { Check, Lock } from 'lucide-react';\n\ninterface PaymentGateProps {\n  onPaymentComplete: () => void;\n}\n\n// URL para a página de pagamento do Wix - substitua pelo seu link real\nconst WIX_PAYMENT_URL = \"https://www.energiamaterna.com.br/product-page/plano-de-parto\";\n\nexport function PaymentGate({ onPaymentComplete }: PaymentGateProps) {\n  const { navigateTo } = useNavigation();\n  const [checkingPayment, setCheckingPayment] = useState(true);\n  const [uniqueUserIdentifier, setUniqueUserIdentifier] = useState<string | null>(null);\n  \n  // Gerar ou recuperar um identificador único para o usuário\n  useEffect(() => {\n    // Verificar se o usuário já tem um ID\n    let userId = localStorage.getItem('birthPlanUserId');\n    \n    if (!userId) {\n      // Gerar um ID único para este usuário com mais entropia\n      userId = `user_${Date.now()}_${Math.random().toString(36).substring(2, 9)}_${Math.random().toString(36).substring(2, 9)}`;\n      localStorage.setItem('birthPlanUserId', userId);\n    }\n    \n    setUniqueUserIdentifier(userId);\n  }, []);\n  \n  // Verificar se o usuário já pagou\n  useEffect(() => {\n    // Verificar parâmetros de URL (ao retornar do Wix)\n    const urlParams = new URLSearchParams(window.location.search);\n    const paymentStatus = urlParams.get('payment_status');\n    const paymentId = urlParams.get('payment_id');\n    \n    // Verificar localStorage para registro de pagamento existente\n    const paidStatus = localStorage.getItem('birthPlanPaid');\n    const storedPaymentId = localStorage.getItem('birthPlanPaymentId');\n    const paymentTimestamp = localStorage.getItem('birthPlanPaymentTimestamp');\n    \n    // Adicionar verificação de timestamp para validar se os pagamentos não são muito antigos\n    const isPaymentValid = paidStatus === 'true' && storedPaymentId;\n    const isPaymentFresh = !paymentTimestamp || \n                          (Date.now() - Number(paymentTimestamp)) < (9 * 30 * 24 * 60 * 60 * 1000); // 9 meses\n    \n    if (paymentStatus === 'success' && paymentId) {\n      // Pagamento acabou de ser concluído via Wix\n      // Armazenar status do pagamento, ID e timestamp\n      localStorage.setItem('birthPlanPaid', 'true');\n      localStorage.setItem('birthPlanPaymentId', paymentId);\n      localStorage.setItem('birthPlanPaymentTimestamp', Date.now().toString());\n      \n      toast.success(\"Pagamento realizado com sucesso!\");\n      onPaymentComplete();\n    } else if (isPaymentValid && isPaymentFresh) {\n      // O usuário já pagou em uma sessão anterior e o pagamento ainda é válido\n      onPaymentComplete();\n    }\n    \n    setCheckingPayment(false);\n  }, [onPaymentComplete]);\n\n  // Redirecionar para a página de pagamento do Wix com o identificador único do usuário\n  const handlePaymentRedirect = () => {\n    if (!uniqueUserIdentifier) {\n      toast.error(\"Erro ao processar pagamento. Por favor, tente novamente.\");\n      return;\n    }\n    \n    // Adicionar o identificador do usuário ao URL de pagamento\n    const paymentUrl = `${WIX_PAYMENT_URL}?user_id=${uniqueUserIdentifier}&timestamp=${Date.now()}`;\n    window.location.href = paymentUrl;\n  };\n  \n  if (checkingPayment) {\n    return (\n      <div className=\"bg-maternal-50 min-h-screen flex items-center justify-center\">\n        <div className=\"bg-white p-8 rounded-lg shadow-md text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-maternal-600 mx-auto mb-4\"></div>\n          <p className=\"text-maternal-700\">Verificando status do pagamento...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"bg-maternal-50 min-h-screen\">\n      <header className=\"bg-white text-brand-black py-4 px-4 sm:px-6 lg:px-8 shadow-md\">\n        <div className=\"max-w-6xl mx-auto flex justify-between items-center\">\n          <h1 className=\"text-xl font-bold text-brand-black\">Plano de Parto Personalizado</h1>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={() => navigateTo(\"/guia-online\")}\n            className=\"text-maternal-900\"\n          >\n            Voltar ao Guia\n          </Button>\n        </div>\n      </header>\n      \n      <main className=\"max-w-4xl mx-auto px-4 sm:px-6 py-8 md:py-12\">\n        <div className=\"bg-white shadow-md rounded-lg overflow-hidden\">\n          <div className=\"bg-maternal-600 p-4 md:p-6 text-white text-center\">\n            <h2 className=\"text-xl md:text-2xl font-bold mb-2\">Construa seu Plano de Parto Personalizado</h2>\n            <p className=\"mb-0\">Acesso único por apenas R$ 97,00</p>\n            <p className=\"text-sm text-maternal-100 mt-1\">Válido por 9 meses</p>\n          </div>\n          \n          <div className=\"p-4 md:p-8\">\n            <div className=\"mb-6 md:mb-8\">\n              <h3 className=\"text-lg md:text-xl font-semibold mb-4\">O que você vai receber:</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex items-start\">\n                  <div className=\"bg-maternal-100 rounded-full p-1 mr-3 mt-1\">\n                    <Check className=\"w-4 h-4 text-maternal-600\" />\n                  </div>\n                  <span className=\"text-sm md:text-base\">Questionário personalizado para entender suas necessidades específicas</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <div className=\"bg-maternal-100 rounded-full p-1 mr-3 mt-1\">\n                    <Check className=\"w-4 h-4 text-maternal-600\" />\n                  </div>\n                  <span className=\"text-sm md:text-base\">Plano de parto gerado automaticamente com base em suas respostas</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <div className=\"bg-maternal-100 rounded-full p-1 mr-3 mt-1\">\n                    <Check className=\"w-4 h-4 text-maternal-600\" />\n                  </div>\n                  <span className=\"text-sm md:text-base\">Editor para personalizar cada aspecto do seu plano</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <div className=\"bg-maternal-100 rounded-full p-1 mr-3 mt-1\">\n                    <Check className=\"w-4 h-4 text-maternal-600\" />\n                  </div>\n                  <span className=\"text-sm md:text-base\">Opções para compartilhar com sua equipe médica e imprimir</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <div className=\"bg-maternal-100 rounded-full p-1 mr-3 mt-1\">\n                    <Check className=\"w-4 h-4 text-maternal-600\" />\n                  </div>\n                  <span className=\"text-sm md:text-base\">Acesso por 9 meses para fazer alterações ao seu plano</span>\n                </li>\n              </ul>\n            </div>\n            \n            <div className=\"bg-maternal-50 p-4 mb-6 rounded-lg border border-maternal-100\">\n              <div className=\"flex items-start\">\n                <Lock className=\"w-5 h-5 text-maternal-600 mr-3 mt-1\" />\n                <div>\n                  <h4 className=\"text-maternal-800 font-semibold mb-1\">Acesso Válido por 9 Meses</h4>\n                  <p className=\"text-sm text-maternal-700\">\n                    Seu pagamento dá acesso ao construtor de plano de parto por 9 meses, \n                    suficiente para planejar, criar e ajustar seu documento até o nascimento do bebê.\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <Button \n              onClick={handlePaymentRedirect}\n              className=\"w-full text-white py-4 md:py-6 text-base md:text-lg\"\n              variant=\"birth-plan-builder\"\n            >\n              Ir para Página de Pagamento\n            </Button>\n            \n            <p className=\"text-sm text-center text-gray-500 mt-4\">\n              Pagamento único e seguro. Acesso imediato após confirmação.\n            </p>\n          </div>\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}\n","\nexport function LoadingIndicator() {\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-maternal-600\"></div>\n    </div>\n  );\n}\n","\nimport { useEffect, useState } from 'react';\nimport { BuilderMainContent } from './BuilderMainContent';\nimport { useBirthPlanState } from './hooks/useBirthPlanState';\nimport { PaymentGate } from './PaymentGate';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'sonner';\n\nexport function BirthPlanBuilder({ embedded = false }: { embedded?: boolean }) {\n  const navigate = useNavigate();\n  const [hasAccess, setHasAccess] = useState<boolean>(false);\n  const [checkingPayment, setCheckingPayment] = useState<boolean>(true);\n\n  const {\n    currentStage,\n    birthPlanContent,\n    questionnaireAnswers,\n    goToNextStage,\n    goToStage,\n    handleQuestionnaireSubmit,\n    setBirthPlanContent\n  } = useBirthPlanState();\n\n  // Log when the component mounts to verify it's being rendered\n  useEffect(() => {\n    console.log(\"BirthPlanBuilder mounted, current stage:\", currentStage, \"embedded mode:\", embedded);\n  }, [currentStage, embedded]);\n\n  // Verify if the user has already paid\n  useEffect(() => {\n    // When embedded, skip payment verification\n    if (embedded) {\n      console.log(\"BirthPlanBuilder running in embedded mode - skipping payment check\");\n      setHasAccess(true);\n      setCheckingPayment(false);\n      return;\n    }\n    \n    // Check payment from localStorage\n    const checkPaymentStatus = () => {\n      const paidStatus = localStorage.getItem('birthPlanPaid');\n      const paymentTimestamp = localStorage.getItem('birthPlanPaymentTimestamp');\n      \n      console.log(\"Checking payment status:\", paidStatus, paymentTimestamp);\n      \n      // Check if payment is valid (within 9 months)\n      if (paidStatus === 'true' && paymentTimestamp) {\n        const paymentDate = Number(paymentTimestamp);\n        const expirationDate = paymentDate + (9 * 30 * 24 * 60 * 60 * 1000); // 9 months in milliseconds\n        \n        if (Date.now() < expirationDate) {\n          console.log(\"User has valid access\");\n          setHasAccess(true);\n        } else {\n          console.log(\"Payment expired\");\n          toast.error(\"Acesso expirado\", {\n            description: \"Seu acesso ao plano de parto expirou. Por favor, renove para continuar.\"\n          });\n        }\n      }\n      \n      setCheckingPayment(false);\n    };\n    \n    checkPaymentStatus();\n  }, [embedded]);\n\n  // Função para simular pagamento (para demonstração)\n  const handlePaymentComplete = () => {\n    console.log(\"Simulating payment completion\");\n    localStorage.setItem('birthPlanPaid', 'true');\n    localStorage.setItem('birthPlanPaymentTimestamp', Date.now().toString());\n    \n    toast.success(\"Pagamento processado com sucesso!\", {\n      description: \"Você agora tem acesso ao Plano de Parto Personalizado\"\n    });\n    \n    setHasAccess(true);\n  };\n\n  // If checking payment, show loading indicator\n  if (checkingPayment) {\n    console.log(\"Still checking payment status\");\n    return <LoadingIndicator />;\n  }\n\n  // If user doesn't have access, show PaymentGate\n  if (!hasAccess && !embedded) {\n    console.log(\"User doesn't have access, showing payment gate\");\n    return <PaymentGate onPaymentComplete={handlePaymentComplete} />;\n  }\n\n  console.log(\"Rendering BuilderMainContent with currentStage:\", currentStage);\n  return (\n    <BuilderMainContent\n      currentStage={currentStage}\n      birthPlanContent={birthPlanContent}\n      questionnaireAnswers={questionnaireAnswers}\n      embedded={embedded}\n      onQuestionnaireSubmit={handleQuestionnaireSubmit}\n      onUpdateBirthPlan={setBirthPlanContent}\n      onNextStage={goToNextStage}\n      onGoToStage={goToStage}\n    />\n  );\n}\n","\nimport { useState } from 'react';\nimport { BuilderStage, BirthPlanData } from '../types/questionnaire';\nimport { generateEmptyBirthPlan, generateBirthPlanFromAnswers } from '../utils/birthPlanGenerationUtils';\nimport { toast } from '@/components/ui/use-toast';\nimport { useNavigate } from 'react-router-dom';\n\nexport function useBirthPlanState() {\n  const navigate = useNavigate();\n  \n  // State for the current stage of the birth plan builder\n  const [currentStage, setCurrentStage] = useState<BuilderStage>('welcome');\n  // State to store questionnaire answers\n  const [questionnaireAnswers, setQuestionnaireAnswers] = useState<Record<string, any>>({});\n  // State to store the birth plan content\n  const [birthPlanContent, setBirthPlanContent] = useState<BirthPlanData>(generateEmptyBirthPlan());\n\n  // Function to move to the next stage\n  const goToNextStage = () => {\n    // Log current state before transitioning\n    console.log(\"Current stage before transition:\", currentStage);\n    console.log(\"Birth plan content before transition:\", birthPlanContent);\n    \n    switch (currentStage) {\n      case 'welcome':\n        setCurrentStage('questionnaire');\n        break;\n      case 'questionnaire':\n        setCurrentStage('editor');\n        break;\n      case 'editor':\n        setCurrentStage('preview');\n        break;\n      case 'preview':\n        setCurrentStage('share');\n        break;\n      case 'share':\n        // Navigate to success page when completed\n        navigate('/plano-concluido');\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Function to move to a specific stage\n  const goToStage = (stage: BuilderStage) => {\n    // Log before changing stage\n    console.log(`Changing from stage ${currentStage} to ${stage}`);\n    console.log(\"Birth plan content during stage change:\", birthPlanContent);\n    \n    setCurrentStage(stage);\n  };\n\n  // Function to handle questionnaire submission\n  const handleQuestionnaireSubmit = (answers: Record<string, any>) => {\n    console.log(\"Questionnaire submitted with answers:\", answers);\n    setQuestionnaireAnswers(answers);\n    \n    // Generate initial birth plan based on answers\n    const generatedPlan = generateBirthPlanFromAnswers(answers);\n    console.log(\"Generated birth plan:\", generatedPlan);\n    setBirthPlanContent(generatedPlan);\n    \n    toast({\n      title: \"Questionário concluído\",\n      description: \"Seu plano de parto inicial foi gerado com sucesso!\"\n    });\n    \n    goToNextStage();\n  };\n\n  return {\n    currentStage,\n    birthPlanContent,\n    questionnaireAnswers,\n    goToNextStage,\n    goToStage,\n    handleQuestionnaireSubmit,\n    setBirthPlanContent\n  };\n}\n","\nimport { BirthPlanBuilder } from './BirthPlanBuilder';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\nimport '../../styles/embed.css';\nimport { useDomainDebug } from '@/hooks/useDomainDebug';\n\nexport function EmbeddedBirthPlanBuilder() {\n  const [loaded, setLoaded] = useState(false);\n  \n  // Use debug hook\n  useDomainDebug();\n  \n  // Debug logs to check component rendering\n  console.log(\"EmbeddedBirthPlanBuilder - Component rendering started\");\n  \n  // Enviar mensagem para o iframe container sobre o tamanho\n  useEffect(() => {\n    console.log(\"EmbeddedBirthPlanBuilder - useEffect running\");\n    \n    const sendResizeMessage = () => {\n      // Envia mensagem para o container (Wix) com altura do conteúdo\n      const height = document.body.scrollHeight;\n      try {\n        window.parent.postMessage({ \n          type: 'resize', \n          height, \n          source: 'energia-materna-birth-plan',\n          component: 'EmbeddedBirthPlanBuilder'\n        }, '*');\n        console.log(\"EmbeddedBirthPlanBuilder - Sending resize message, height:\", height);\n      } catch (error) {\n        console.error(\"EmbeddedBirthPlanBuilder - Error sending postMessage:\", error);\n      }\n    };\n\n    // Envia mensagem inicial e configura listener para resize\n    setTimeout(sendResizeMessage, 100);\n    window.addEventListener('resize', sendResizeMessage);\n    \n    // Observe DOM changes to detect content changes\n    const observer = new MutationObserver(() => {\n      console.log(\"EmbeddedBirthPlanBuilder - DOM mutation detected, sending resize\");\n      sendResizeMessage();\n    });\n    \n    // Start observing\n    observer.observe(document.body, { \n      childList: true, \n      subtree: true, \n      attributes: true,\n      characterData: true \n    });\n    \n    // Verificar periodicamente mudanças de altura no conteúdo\n    const resizeInterval = setInterval(sendResizeMessage, 500);\n\n    // Remove o Header padrão do site que pode estar aparecendo\n    document.body.classList.add('embedded-mode');\n    \n    // Send ready signal to parent\n    try {\n      window.parent.postMessage({ \n        type: 'ready', \n        source: 'energia-materna-birth-plan',\n        component: 'EmbeddedBirthPlanBuilder',\n        url: window.location.href\n      }, '*');\n      console.log(\"EmbeddedBirthPlanBuilder - Sent ready message to parent\");\n    } catch (error) {\n      console.error(\"EmbeddedBirthPlanBuilder - Error sending ready message:\", error);\n    }\n    \n    console.log(\"EmbeddedBirthPlanBuilder mounted completely\");\n    setLoaded(true);\n\n    return () => {\n      console.log(\"EmbeddedBirthPlanBuilder - Cleanup running\");\n      window.removeEventListener('resize', sendResizeMessage);\n      clearInterval(resizeInterval);\n      observer.disconnect();\n      document.body.classList.remove('embedded-mode');\n    };\n  }, []);\n\n  // Listen for messages from parent window\n  useEffect(() => {\n    const handleParentMessages = (event: MessageEvent) => {\n      console.log(\"EmbeddedBirthPlanBuilder - Received message from parent:\", event.data);\n      \n      // Handle check message from parent\n      if (event.data && event.data.type === 'wix-check') {\n        try {\n          window.parent.postMessage({ \n            type: 'loaded', \n            source: 'energia-materna-birth-plan',\n            component: 'EmbeddedBirthPlanBuilder',\n            height: document.body.scrollHeight\n          }, '*');\n          console.log(\"EmbeddedBirthPlanBuilder - Sent loaded confirmation to parent\");\n        } catch (error) {\n          console.error(\"EmbeddedBirthPlanBuilder - Error sending loaded confirmation:\", error);\n        }\n      }\n    };\n    \n    window.addEventListener('message', handleParentMessages);\n    return () => window.removeEventListener('message', handleParentMessages);\n  }, []);\n\n  if (!loaded) {\n    console.log(\"EmbeddedBirthPlanBuilder - Initial loading state\");\n    return <div className=\"p-8 text-center\">Carregando...</div>;\n  }\n\n  console.log(\"EmbeddedBirthPlanBuilder - Rendering main content\");\n  return (\n    <div className=\"relative embedded-container\">\n      {/* Banner de navegação para a versão completa */}\n      <div className=\"bg-maternal-800 text-white p-2 text-center\">\n        <p className=\"text-sm\">\n          Esta é a versão incorporada do Construtor de Plano de Parto.\n          <Link to=\"/criar-plano\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"ml-2 text-xs bg-white text-maternal-800 hover:bg-maternal-100\"\n            >\n              Acessar Versão Completa\n            </Button>\n          </Link>\n        </p>\n      </div>\n      \n      {/* Passing embedded=true to indicate that it's being used in an iframe/embedded context */}\n      {/* Embedded mode skips payment verification as it will only be shown to paying users in Wix */}\n      <BirthPlanBuilder embedded={true} />\n    </div>\n  );\n}\n","\nimport { Toaster as Sonner } from \"@/components/ui/sonner\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Routes, Route, Navigate, HashRouter } from \"react-router-dom\";\nimport NotFound from \"./pages/NotFound\";\nimport { Header } from \"./components/Header\";\n\n// Pages\nimport { OnlineGuide } from \"./components/Guide/OnlineGuide\";\nimport { BirthPlanBuilder } from \"./components/BirthPlan/BirthPlanBuilder\";\nimport { EmbeddedBirthPlanBuilder } from \"./components/BirthPlan/EmbeddedBirthPlanBuilder\";\nimport { EmbeddedOnlineGuide } from \"./components/Guide/EmbeddedOnlineGuide\";\n\n// Create query client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1,\n      refetchOnWindowFocus: false\n    }\n  }\n});\n\n// Enhanced log for debugging\nconsole.log(\"APP COMPONENT INITIALIZING - SETTING UP ROUTES\");\n\n// Check if the current environment supports window\nif (typeof window !== 'undefined') {\n  console.log(`Current URL: ${window.location.href}`);\n  console.log(`Current path: ${window.location.pathname}`);\n  console.log(`Current hash: ${window.location.hash}`);\n}\n\nconst App = () => {\n  console.log(\"APP COMPONENT RENDERING\");\n  \n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Sonner />\n        <HashRouter>\n          <Routes>\n            <Route path=\"/\" element={<Navigate to=\"/guia-online\" replace />} />\n            <Route \n              path=\"/guia-online\" \n              element={\n                <>\n                  <Header />\n                  <div className=\"pt-16 md:pt-20\">\n                    <OnlineGuide />\n                  </div>\n                </>\n              } \n            />\n            <Route \n              path=\"/embedded-guia\" \n              element={\n                <>\n                  {console.log(\"ROUTE /embedded-guia ACCESSED - RENDERING EMBEDDED ONLINE GUIDE\")}\n                  <EmbeddedOnlineGuide />\n                </>\n              } \n            />\n            <Route \n              path=\"/criar-plano\" \n              element={\n                <>\n                  {console.log(\"ROUTE /criar-plano ACCESSED - RENDERING BIRTH PLAN BUILDER\")}\n                  <Header />\n                  <div className=\"pt-16 md:pt-20\">\n                    <BirthPlanBuilder />\n                  </div>\n                </>\n              } \n            />\n            <Route \n              path=\"/embedded-plano\" \n              element={\n                <>\n                  {console.log(\"ROUTE /embedded-plano ACCESSED - RENDERING EMBEDDED BIRTH PLAN BUILDER\")}\n                  <EmbeddedBirthPlanBuilder />\n                </>\n              } \n            />\n            {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL \"*\" ROUTE */}\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </HashRouter>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\nimport { registerServiceWorker } from './registerSW.tsx';\n\n// Enhanced error reporting\nwindow.onerror = function(message, source, lineno, colno, error) {\n  console.error('Global error caught:', { message, source, lineno, colno, error });\n  return false;\n};\n\nwindow.addEventListener('unhandledrejection', event => {\n  console.error('Unhandled Promise Rejection:', event.reason);\n});\n\nconsole.log(\"Main.tsx - Application bootstrapping started\");\n\n// Make sure the DOM is fully loaded before rendering\nconst renderApp = () => {\n  console.log(\"Main.tsx - Rendering application to DOM\");\n  const rootElement = document.getElementById('root');\n  \n  if (!rootElement) {\n    console.error(\"Main.tsx - Root element not found in DOM!\");\n    // Try to create one as a fallback\n    const newRoot = document.createElement('div');\n    newRoot.id = 'root';\n    document.body.appendChild(newRoot);\n    console.log(\"Main.tsx - Created root element as fallback\");\n    \n    ReactDOM.createRoot(newRoot).render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n    return;\n  }\n  \n  try {\n    const root = ReactDOM.createRoot(rootElement);\n    \n    console.log(\"Main.tsx - React root created, ready to render App\");\n    \n    // Render with a small delay to ensure DOM is completely ready\n    // This can help with some timing issues in certain browsers\n    setTimeout(() => {\n      root.render(\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      );\n      console.log(\"Main.tsx - App rendered successfully\");\n    }, 0);\n  } catch (error) {\n    console.error(\"Main.tsx - Critical error rendering application:\", error);\n    \n    // Fallback rendering without StrictMode as a last resort\n    try {\n      console.log(\"Main.tsx - Attempting fallback render without StrictMode\");\n      ReactDOM.createRoot(rootElement).render(<App />);\n    } catch (fallbackError) {\n      console.error(\"Main.tsx - Fallback rendering also failed:\", fallbackError);\n      \n      // Display error to user\n      rootElement.innerHTML = `\n        <div style=\"padding: 20px; color: red; text-align: center;\">\n          <h2>Application Error</h2>\n          <p>The application failed to load. Please try refreshing the page.</p>\n          <pre style=\"text-align: left; background: #f5f5f5; padding: 10px; overflow: auto;\">${error}</pre>\n        </div>\n      `;\n    }\n  }\n};\n\n// Register the service worker when the window is loaded\nwindow.addEventListener('load', () => {\n  console.log(\"Main.tsx - Window loaded, registering service worker\");\n  try {\n    registerServiceWorker();\n    console.log(\"Main.tsx - Service worker registration initiated\");\n  } catch (error) {\n    console.error(\"Main.tsx - Error registering service worker:\", error);\n  }\n});\n\n// Execute rendering immediately to avoid delay\nconsole.log(\"Main.tsx - Initializing application...\");\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', renderApp);\n  console.log(\"Main.tsx - Waiting for DOMContentLoaded event\");\n} else {\n  renderApp();\n}\n","\n/**\n * Service Worker Registration for PWA support\n */\n\n// Register the service worker\nexport const registerServiceWorker = () => {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', async () => {\n      try {\n        console.log('🔧 Attempting to register service worker...');\n        \n        // Use the appropriate scope based on the deployment environment\n        const registration = await navigator.serviceWorker.register('/sw.js', {\n          scope: '/',\n          type: 'classic' // Explicitly set to classic to avoid module type issues\n        });\n        \n        console.log('✅ Service worker registered successfully:', registration.scope);\n        \n        // Check if this is a new service worker\n        if (registration.installing) {\n          console.log('Service worker installing');\n        } else if (registration.waiting) {\n          console.log('Service worker installed and waiting');\n        } else if (registration.active) {\n          console.log('Service worker active');\n        }\n        \n        // Listen for service worker messages\n        navigator.serviceWorker.addEventListener('message', (event) => {\n          if (event.data && event.data.type === 'CACHED_RESOURCES') {\n            console.log(`Service worker cached ${event.data.count} resources`);\n          }\n        });\n      } catch (error) {\n        console.error('❌ Service worker registration failed:', error);\n        // Don't let service worker errors block the main application\n        console.warn('Continuing without service worker functionality');\n      }\n    });\n  } else {\n    console.log('❌ Service workers are not supported in this browser');\n  }\n};\n\n// Check for service worker updates\nexport const updateServiceWorker = async () => {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registrations = await navigator.serviceWorker.getRegistrations();\n      for (const registration of registrations) {\n        console.log('Checking for updates on service worker with scope:', registration.scope);\n        await registration.update();\n        \n        // Force skip waiting if there's a waiting service worker\n        if (registration.waiting) {\n          registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n        }\n      }\n    } catch (error) {\n      console.error('Error updating service worker:', error);\n    }\n  }\n};\n\n// Function to unregister service workers (useful for troubleshooting)\nexport const unregisterServiceWorkers = async () => {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registrations = await navigator.serviceWorker.getRegistrations();\n      for (const registration of registrations) {\n        await registration.unregister();\n        console.log('Service worker unregistered:', registration.scope);\n      }\n      return registrations.length > 0;\n    } catch (error) {\n      console.error('Error unregistering service workers:', error);\n      return false;\n    }\n  }\n  return false;\n};\n"],"names":["useNavigation","navigate","useNavigate","navigateTo","path","NotFound","location","useLocation","useEffect","pathname","className","children","jsxs","jsx","jsxRuntimeExports","onClick","Header","scrolled","setScrolled","useState","handleScroll","isScrolled","window","scrollY","addEventListener","removeEventListener","src","alt","BirthPlanHeader","currentStage","onStageChange","FileText","Button","variant","size","open","BirthPlanWelcome","onStart","ChevronRight","QuestionField","question","errors","control","FormItem","FormLabel","text","isRequired","description","type","TextQuestion","TextareaQuestion","options","RadioQuestion","CheckboxQuestion","SelectQuestion","id","FormMessage","FormField","name","rules","required","render","field","FormControl","Input","Textarea","rows","RadioGroup","onValueChange","onChange","defaultValue","value","_a","map","option","RadioGroupItem","htmlFor","Checkbox","checked","onCheckedChange","Select","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","getSectionIcon","sectionId","personal","User","atmosphere","Sun","laborPreferences","HeartPulse","birth","Baby","cesarean","Scissors","postpartum","Heart","specialSituations","AlertTriangle","QuestionnaireSection","section","onNext","onPrevious","isFirstSection","isLastSection","initialData","form","useForm","defaultValues","handleSubmit","formState","watch","setValue","watchedValues","Object","keys","length","entries","forEach","key","SectionIcon","scrollTo","top","behavior","title","Form","onSubmit","Card","CardHeader","CardTitle","CardDescription","CardContent","questions","conditionalDisplay","dependsOn","showWhen","dependentValue","Array","isArray","includes","disabled","ArrowLeft","ArrowRight","questionnaireSections","BirthPlanSectionProgress","sections","currentSectionIndex","onSectionClick","stageType","completedSections","progress","MoonStar","Stethoscope","AlertCircle","Book","Fragment","Math","round","Progress","indicatorClassName","index","isActive","isCompleted","color","CheckCircle","BirthPlanQuestionnaire","setCurrentSectionIndex","formData","setFormData","setCompletedSections","currentSection","data","processedData","updatedFormData","SelectableOptions","questionId","selectedOptions","setSelectedOptions","isSelected","newSelectedOptions","handleCheckedChange","Label","OptionsDialog","dialogOpen","setDialogOpen","activeFieldKey","getRelevantQuestionsForField","handleAddSelectedOptions","DialogContent","DialogHeader","DialogTitle","DialogFooter","EditorField","activeSection","sectionData","handleFieldChange","shouldShowAddButton","useSingleLineInput","resetOptionsForField","fieldValue","showAddButton","isMobile","useIsMobile","label","Dialog","onOpenChange","DialogTrigger","asChild","Plus","e","target","toLowerCase","join","generateEmptyBirthPlan","emptyPlan","birthPlanSections","fields","formatCheckboxAnswers","checkboxData","filter","_","generateBirthPlanFromAnswers","answers","birthPlan","personalInfo","dueDate","healthProvider","birthLocation","hospital","pediatrician","pediatricianName","pediatricianRegistry","midwife","midwifeName","midwifeRegistry","doula","doulaName","companions","updatePersonalInfo","lighting","atmosfera","sound","clothing","photos","updateAtmosphere","mobility","trabalhoDeParto","positions","hydration","monitoring","painRelief","interventions","currentValue","updateLaborPreferences","birthPositions","nascimento","episiotomy","cordCutting","skinToSkin","placenta","updateBirthPreferences","cesareanPreferences","cesarea","anesthesia","cesareanCompanion","curtain","cesareanSkinToSkin","updateCesareanPreferences","firstHour","posParto","breastfeeding","newbornCare","vaccination","motherCare","updatePostpartumPreferences","complications","situacoesEspeciais","nicu","emergencyPreferences","emergencyScenarios","highRiskComplications","lowRiskOccurrences","cascadeInterventions","specialWishes","updateSpecialSituations","fieldKey","questionnaireAnswers","relevantQuestionIds","relevantQuestions","push","checkSectionCompletion","plan","find","filledFields","trim","prev","EditorContent","activeSectionIndex","localBirthPlan","singleLineFields","EditorFooter","birthPlanSectionLength","handleSave","setActiveSectionIndex","max","Save","min","EditorHeader","EditorTip","useEditorState","onUpdate","setLocalBirthPlan","setActiveFieldKey","prevPlan","updatedPlan","goToPreviousSection","goToNextSection","toast","initialSelectedOptions","currentFieldOptions","split","parseCurrentFieldOptions","answer","initializeOptionsFromCurrentField","allSelectedOptions","values","some","selectedForQuestion","formattedOptions","mappedSectionId","questionnaireId","q","findQuestionById","BackToTopButton","threshold","isVisible","setIsVisible","toggleVisibility","ArrowUp","BirthPlanEditor","onBack","PreviewHeader","print","Printer","exportAsPDF","then","catch","error","Download","exportAsWord","PreviewSection","style","printColorAdjust","item","SignatureSection","healthProviderRegistry","doulaRegistry","PrintTitle","personName","PrintFooter","Date","getFullYear","BirthPlanPreview","onEdit","EmailShareDialog","onExportPDF","email","setEmail","subject","setSubject","message","setMessage","isSending","setIsSending","resetForm","DialogDescription","async","preventDefault","mailtoLink","encodeURIComponent","NextSteps","ShareOption","icon","Icon","ShareOptionsGrid","onCopyText","onExportWord","onShareWhatsApp","onOpenEmailDialog","Copy","Share2","Mail","renderPersonalInfoSection","container","personalSection","document","createElement","personalTitle","textContent","appendChild","personalList","renderSection","sectionKey","sectionTitle","getSectionDisplayName","sectionContent","content","painManagement","newborn","renderBirthPlanForExport","birthPlanData","containerId","getElementById","innerHTML","titleContainer","logo","disclaimer","renderHeader","renderBirthPlanContent","signatureSection","signatureTitle","signatureGrid","patientSignature","patientLine","patientName","patientLabel","doctorSignature","doctorLine","doctorName","doctorLabel","doctorCRM","additionalSignatures","pediatricianSignature","pediatricianLine","pediatricianLabel","pediatricianCRM","doulaSignature","doulaLine","doulaLabel","renderSignatures","footer","toLocaleDateString","renderFooter","display","createShareableText","hospitalAddress","hospitalPhone","healthProviderContact","midwifeContact","doulaContact","toUpperCase","BirthPlanShare","emailDialogOpen","setEmailDialogOpen","handleCopyText","handleExportPDF","handleExportWord","handleExportText","handleShareViaWhatsApp","navigator","clipboard","writeText","exportAsText","whatsappUrl","useExportHandlers","StageContent","birthPlanContent","onQuestionnaireSubmit","onUpdateBirthPlan","onNextStage","onGoToStage","Footer","href","rel","Link","to","BookOpen","Award","Newspaper","fill","viewBox","fillRule","d","clipRule","BuilderMainContent","embedded","role","PaymentGate","onPaymentComplete","checkingPayment","setCheckingPayment","uniqueUserIdentifier","setUniqueUserIdentifier","userId","localStorage","getItem","now","random","toString","substring","setItem","urlParams","URLSearchParams","search","paymentStatus","get","paymentId","paidStatus","storedPaymentId","paymentTimestamp","isPaymentValid","isPaymentFresh","Number","success","Check","Lock","paymentUrl","LoadingIndicator","BirthPlanBuilder","hasAccess","setHasAccess","goToNextStage","goToStage","handleQuestionnaireSubmit","setBirthPlanContent","setCurrentStage","setQuestionnaireAnswers","stage","generatedPlan","useBirthPlanState","expirationDate","handlePaymentComplete","EmbeddedBirthPlanBuilder","loaded","setLoaded","sendResizeMessage","height","body","scrollHeight","parent","postMessage","source","component","setTimeout","observer","MutationObserver","observe","childList","subtree","attributes","characterData","resizeInterval","setInterval","classList","add","url","clearInterval","disconnect","remove","handleParentMessages","event","queryClient","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","App","QueryClientProvider","client","TooltipProvider","Sonner","HashRouter","Routes","Route","element","Navigate","replace","OnlineGuide","console","EmbeddedOnlineGuide","onerror","lineno","colno","renderApp","rootElement","newRoot","createRoot","React","StrictMode","root","ReactDOM","fallbackError","registration","serviceWorker","register","scope","installing","waiting","active","readyState"],"mappings":"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CACP,gDACA,6BACA,yBACA,sBACA,sCAEFL,YAAY,GAEd,CACES,GAAI,YACJV,KAAM,8CACNG,KAAM,WACNG,QAAS,CACP,aACA,YACA,eACA,QACA,cACA,sBAEFL,YAAY,GAEd,CACES,GAAI,YACJV,KAAM,kCACNG,KAAM,WACNG,QAAS,CACP,qCACA,kCACA,wCACA,oCAEFL,YAAY,GAEd,CACES,GAAI,aACJV,KAAM,6BACNG,KAAM,QACNG,QAAS,CACP,0CACA,qDACA,iCACA,gCAEFL,YAAY,GAEd,CACES,GAAI,aACJV,KAAM,uBACNG,KAAM,WACNG,QAAS,CACP,yCACA,kDACA,wEACA,+CAEFL,YAAY,GAEd,CACES,GAAI,gBACJV,KAAM,sCACNG,KAAM,WACNG,QAAS,CACP,qCACA,iDACA,yDACA,qDACA,oEACA,oEACA,2CAEFL,YAAY,GAEd,CACES,GAAI,kBACJV,KAAM,iCACNG,KAAM,WACNG,QAAS,CACP,yEACA,qDACA,0DACA,2EAEFL,YAAY,KC7F2B,CAC3CS,GAAI,QACJwE,MAAO,aACPhF,YAAa,iDACbwF,UAAW,CACT,CACEhF,GAAI,iBACJV,KAAM,8BACNG,KAAM,WACNG,QAAS,CACP,oCACA,2CACA,eACA,YACA,eACA,kCAEFL,YAAY,GAEd,CACES,GAAI,aACJV,KAAM,qBACNG,KAAM,QACNG,QAAS,CACP,yDACA,4CACA,2CAEFL,YAAY,GAEd,CACES,GAAI,cACJV,KAAM,qCACNG,KAAM,WACNG,QAAS,CACP,mDACA,oCACA,2BACA,iCAEFL,YAAY,GAEd,CACES,GAAI,aACJV,KAAM,gCACNG,KAAM,QACNG,QAAS,CACP,+CACA,qCACA,0CACA,gCAEFL,YAAY,GAEd,CACES,GAAI,WACJV,KAAM,oBACNG,KAAM,QACNG,QAAS,CACP,uBACA,+BACA,kCACA,iCAEFL,YAAY,KChE8B,CAC9CS,GAAI,WACJwE,MAAO,qBACPhF,YAAa,qDACbwF,UAAW,CACT,CACEhF,GAAI,sBACJV,KAAM,6CACNG,KAAM,WACNG,QAAS,CACP,4BACA,6CACA,mCACA,oCACA,gCAEFL,YAAY,GAEd,CACES,GAAI,aACJV,KAAM,+BACNG,KAAM,QACNG,QAAS,CACP,uBACA,uCACA,wCAEFL,YAAY,GAEd,CACES,GAAI,oBACJV,KAAM,iCACNG,KAAM,QACNG,QAAS,CACP,2DACA,+CACA,kCAEFL,YAAY,GAEd,CACES,GAAI,UACJV,KAAM,6BACNG,KAAM,QACNG,QAAS,CACP,iEACA,kDACA,oBAEFL,YAAY,GAEd,CACES,GAAI,qBACJV,KAAM,kCACNG,KAAM,QACNG,QAAS,CACP,8DACA,0EACA,0CACA,iCAEFL,YAAY,KC7DgC,CAChDS,GAAI,aACJwE,MAAO,YACPhF,YAAa,6CACbwF,UAAW,CACT,CACEhF,GAAI,YACJV,KAAM,mCACNG,KAAM,WACNG,QAAS,CACP,kDACA,+BACA,kDACA,gEACA,gCAEFL,YAAY,GAEd,CACES,GAAI,gBACJV,KAAM,qBACNG,KAAM,WACNG,QAAS,CACP,kCACA,kEACA,qDACA,mDACA,yBAEFL,YAAY,GAEd,CACES,GAAI,cACJV,KAAM,gCACNG,KAAM,WACNG,QAAS,CACP,kCACA,iCACA,6DACA,0CACA,iCAEFL,YAAY,GAEd,CACES,GAAI,cACJV,KAAM,oCACNG,KAAM,QACNG,QAAS,CACP,sCACA,6CACA,oDACA,gCAEFL,YAAY,GAEd,CACES,GAAI,aACJV,KAAM,mCACNG,KAAM,WACNG,QAAS,CACP,yCACA,2CACA,wCACA,kCACA,0DAEFL,YAAY,KCnEuC,CACvDS,GAAI,oBACJwE,MAAO,sBACPhF,YAAa,0FACbwF,UAAW,CACT,CACEhF,GAAI,gBACJV,KAAM,2BACNG,KAAM,WACNG,QAAS,CACP,gEACA,wDACA,6DACA,0DACA,qFAEFL,YAAY,EACZC,YAAa,sEAEf,CACEQ,GAAI,uBACJV,KAAM,+CACNG,KAAM,WACNG,QAAS,CACP,wFACA,2EACA,qFACA,iFACA,mFACA,wFACA,qFACA,6EACA,oGACA,iGAEFL,YAAY,EACZC,YAAa,2FAEf,CACEQ,GAAI,uBACJV,KAAM,2BACNG,KAAM,WACNG,QAAS,CACP,oEACA,iEACA,8FACA,mFACA,2FACA,0EACA,yFACA,sFACA,2FACA,8EAEFL,YAAY,EACZC,YAAa,8DAEf,CACEQ,GAAI,wBACJV,KAAM,8BACNG,KAAM,WACNG,QAAS,CACP,2EACA,oEACA,+EACA,oFACA,oFACA,uFACA,0FACA,gFACA,2FACA,oGAEFL,YAAY,EACZC,YAAa,kEAEf,CACEQ,GAAI,qBACJV,KAAM,8BACNG,KAAM,WACNG,QAAS,CACP,kGACA,2EACA,0GACA,wHACA,2GACA,gGACA,uGACA,gGACA,yGACA,oGAEFL,YAAY,EACZC,YAAa,iFAEf,CACEQ,GAAI,OACJV,KAAM,2CACNG,KAAM,WACNG,QAAS,CACP,2CACA,4CACA,+CACA,sDACA,yCACA,sEAEFL,YAAY,EACZC,YAAa,8EAEf,CACEQ,GAAI,sBACJV,KAAM,+CACNG,KAAM,WACNF,YAAY,EACZC,YAAa,sFAEf,CACEQ,GAAI,gBACJV,KAAM,uCACNG,KAAM,WACNF,YAAY,EACZC,YAAa,sFC5FZ,SAASoG,IAAyBC,SACvCA,EAAAC,oBACAA,EAAAC,eACAA,EAAAC,UACAA,EAAAC,kBACAA,EAAoB,GAAC/C,WACrBA,EAAAD,OACAA,IAGA,MAOMiD,EANAD,EAAkBjC,OAAS,EACrBiC,EAAkBjC,OAAS6B,EAAS7B,OAAU,KAE/C8B,EAAsB,GAAKD,EAAS7B,OAAU,IAMnDjC,EAAkBC,IACtB,OAAQA,GACN,IAAK,eACL,IAAK,WACI,SAAA1E,IAAC4E,EAAK,CAAAvD,KAAM,KACrB,IAAK,YACL,IAAK,aACI,SAAArB,IAAC6I,EAAS,CAAAxH,KAAM,KACzB,IAAK,kBACL,IAAK,QAQL,IAAK,WACL,IAAK,aACI,SAAArB,IAACkF,EAAK,CAAA7D,KAAM,KARrB,IAAK,aACL,IAAK,QACI,SAAArB,IAACsF,EAAM,CAAAjE,KAAM,KACtB,IAAK,UACL,IAAK,WACI,SAAArB,IAAC8I,EAAY,CAAAzH,KAAM,KAI5B,IAAK,qBACL,IAAK,UACI,SAAArB,IAAC+I,EAAY,CAAA1H,KAAM,KAC5B,QACS,SAAArB,IAACgJ,EAAK,CAAA3H,KAAM,KACvB,EAGF,aACG,MAAI,CAAAxB,UAAU,oBACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,yBAEZC,SAAA,CAAc,kBAAd4I,GAEG3I,EAAAA,KAAAkJ,EAAAA,SAAA,CAAAnJ,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,oCACbC,SAAA,CAACE,EAAAA,IAAA,OAAA,CAAKH,UAAU,wCAAwCC,SAAa,kBACpEC,EAAAA,KAAA,OAAA,CAAKF,UAAU,wCAAwC,YAAU,SAAUC,SAAA,CAAAoJ,KAAKC,MAAMP,GAAU,UAEnG3I,EAAAD,IAACoJ,GAAA,CACC1F,MAAOkF,EACP/I,UAAU,wBACVwJ,mBAAmB,kBACnB,gBAAe,EACf,gBAAe,IACf,gBAAeT,OAMN,WAAdF,GAA0B9C,GAAcD,GACtC5F,EAAAA,KAAA,MAAA,CAAIF,UAAU,4BACbC,SAAA,CAAAG,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRC,KAAK,KACLnB,QAAS0F,EACTsC,SAAkC,IAAxBM,EACV3I,UAAU,+EAEVC,SAAA,GAACE,IAAAmI,EAAA,CAAUtI,UAAU,iBAAiB,qBAGxCI,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRC,KAAK,KACLnB,QAASyF,EACTuC,SAAUM,IAAwBD,EAAS7B,OAAS,EACpD7G,UAAU,+EACXC,SAAA,CAAA,mBACeE,IAACoI,EAAW,CAAAvI,UAAU,uBAK1CG,MAAC,OAAIH,UAAU,uDACZC,WAAS8D,KAAI,CAAC8B,EAAS4D,KACtB,MAAMC,EAAWD,IAAUd,EACrBgB,EAAcb,EAAkBV,SAASvC,EAAQhD,KAAO4G,EAAQd,EAGpE,OAAAvI,EAAAF,KAACoB,EAAA,CAECC,QAAQ,QACRC,KAAK,KACLxB,UAAW,gFACT0J,EACI,eAAe7D,EAAQ+D,OAAS,0BAChCD,EACE,mCACA,kEAERtJ,QAAS,IAAMuI,EAAea,GAE7BxJ,SAAA,CAAA2E,EAAeiB,EAAQhD,IACvB1C,EAAAA,IAAA,OAAA,CAAKH,UAAU,mBAAoBC,WAAQoH,QAC3CsC,IAAgBD,GACdvJ,EAAAA,IAAA0J,EAAA,CAAY7J,UAAU,qCAfpB6F,EAAQhD,GAAA,UAwB7B,CCpJgB,SAAAiH,IAAuBvC,SAAEA,IACvC,MAAOoB,EAAqBoB,GAA0BtJ,WAAS,IACxDuJ,EAAUC,GAAexJ,EAAAA,SAA8B,CAAE,IACzDqI,EAAmBoB,GAAwBzJ,EAAAA,SAAmB,IAE/D0J,EAAiB3B,GAAsBG,GACvC3C,EAAyC,IAAxB2C,EACjB1C,EAAgB0C,IAAwBH,GAAsB3B,OAAS,EAkD7E,OAEIzG,EAAAF,KAAAkJ,WAAA,CAAAnJ,SAAA,CAAAG,EAAAD,IAACsI,GAAA,CACCC,SAAUF,GACVG,sBACAC,eAfsBa,KAEtBX,EAAkBV,SAASI,GAAsBiB,GAAO5G,KACxD4G,IAAUd,GACVc,IAAUd,EAAsB,GAAKG,EAAkBV,SAASI,GAAsBG,GAAqB9F,OAC7GkH,EAAuBN,GAChB7I,OAAAsG,SAAS,EAAG,GACrB,EASI2B,UAAU,gBACVC,sBAGF1I,EAAAD,IAACyF,GAAA,CACCC,QAASsE,EACTrE,OA5DuBsE,IAIrB,MAAAC,EAAgB,IAAKD,GAGrBE,EAAkB,IACnBN,KACAK,GAILJ,EAAYK,GAGPxB,EAAkBV,SAAS+B,EAAetH,KAC7CqH,EAAqB,IAAIpB,EAAmBqB,EAAetH,KAGzDoD,EAGFsB,EAAS+C,IAGTP,EAAuBpB,EAAsB,GACtC/H,OAAAsG,SAAS,EAAG,GACrB,EAiCInB,WA9BsB,KACrBC,IACH+D,EAAuBpB,EAAsB,GACtC/H,OAAAsG,SAAS,EAAG,GACrB,EA2BIlB,iBACAC,gBACAC,YAAa8D,MAIrB,CC5EO,SAASO,IAAkBzI,SAChCA,EAAA0I,WACAA,EAAAC,gBACAA,EAAAC,mBACAA,IAEA,IAAK5I,EAASW,SAAuC,IAA5BX,EAASW,QAAQoE,OACjC,OAAA,KAeP1G,OAAAA,MAAC,OAAIH,UAAU,sBACZC,WAASwC,QAAQsB,KAAKC,UACrB,MAAM2G,GAAa,OAAA7G,EAAA2G,EAAgBD,aAAcxG,MAAW,EAE1D,SAAA9D,KAAC,MAAiB,CAAAF,UAAU,8BAC1BC,SAAA,CAAAG,EAAAD,IAACgE,EAAA,CACCtB,GAAI,UAAU2H,KAAcxG,IAC5BI,QAASuG,EACTtG,gBAAkBD,IApBF,EAACJ,EAAgBI,KAC3C,MAAMwG,EAAqB,IACtBH,EACHD,CAACA,GAAa,IACTC,EAAgBD,GACnBxG,CAACA,GAASI,IAGdsG,EAAmBE,EAAkB,EAaLC,CAAA7G,IAAUI,EAAO,IAGzChE,EAAAD,IAAC2K,GAAA,CACC5G,QAAS,UAAUsG,KAAcxG,IACjChE,UAAW,YAAW2K,EAAa,cAAgB,iBAElD1K,SAAA+D,MAZKA,EAcV,KAKV,CClCO,SAAS+G,IAAcC,WAC5BA,EAAAC,cACAA,EAAAC,eACAA,EAAAT,gBACAA,EAAAC,mBACAA,EACAS,6BAAAA,EACAC,yBAAAA,IAGE,SAAAlL,KAACmL,GAAc,CAAArL,UAAU,WACvBC,SAAA,OAACqL,GACC,CAAArL,SAAAE,EAAAA,IAACoL,GAAY,CAAAtL,SAAA,gDAGd,MAAI,CAAAD,UAAU,oCACZC,SAAAkL,EAA6BD,GAAgBrE,OAAS,EACrDsE,EAA6BD,GAAgBnH,KAAI,EAAGjC,eAClD,MAAM0I,EAAa1I,EAASe,GAG1B,SAAA3C,KAAC,MAAqB,CAAAF,UAAU,gCAC9BC,SAAA,CAAAE,EAAAA,IAAC,MAAI,CAAAH,UAAU,gCACZC,SAAA6B,EAASK,OAGZ/B,EAAAD,IAACoK,GAAA,CACCzI,WACA0I,aACAC,kBACAC,yBATMF,EAWV,IAIJrK,EAAAA,IAAC,KAAEH,UAAU,iCAAiCC,oFAMjDuL,GACC,CAAAvL,SAAA,CAACE,EAAAA,IAAAmB,EAAA,CAAOC,QAAQ,UAAUlB,QAAS,IAAM4K,GAAc,GAAQhL,SAE/D,aACCE,EAAAA,IAAAmB,EAAA,CAAOjB,QAAS+K,EAA0BnL,SAE3C,gCAIR,CC/CO,SAASwL,IAAYrI,MAC1BA,EAAAsI,cACAA,EAAAC,YACAA,EAAAC,kBACAA,EACAC,oBAAAA,EAAAA,mBACAC,EAAAC,qBACAA,EAAAb,eACAA,EAAAF,WACAA,EAAAC,cACAA,EAAAR,gBACAA,EAAAC,mBACAA,EACAS,6BAAAA,EACAC,yBAAAA,IAEA,MAAMY,EAAaL,EAAYvI,EAAM4D,MAAQ,GACvCiF,EAAgBJ,EAAoBzI,EAAM4D,KAC1CkF,EAAWC,KAGf,SAAAjM,KAAC,MAAI,CAAAF,UAAU,kFACbC,SAAA,CAAAC,EAAAA,KAAC,OAAIF,UAAW,iBAAkBkM,EAA8D,GAAnD,wDAC3CjM,SAAA,CAAAG,EAAAD,IAAC,QAAA,CACC+D,QAAS,GAAGwH,EAAc7I,MAAMO,EAAM4D,MACtChH,UAAU,wEAETC,SAAMmD,EAAAgJ,QAGRH,GACE/L,EAAAA,KAAAmM,GAAA,CAAO5K,KAAMuJ,GAAcE,IAAmB9H,EAAM4D,IAAKsF,aAAe7K,IACnEA,GAAQyJ,IAAmB9H,EAAM4D,IACnC+E,EAAqB3I,EAAM4D,KACjBvF,GACVwJ,GAAc,EAChB,EAEAhL,SAAA,GAACE,IAAAoM,GAAA,CAAcC,SAAO,EACpBvM,SAAAG,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRC,KAAK,KACLxB,UAAU,sIACVK,QAAS,IAAM0L,EAAqB3I,EAAM4D,KAE1C/G,SAAA,GAACE,IAAAsM,EAAA,CAAKzM,UAAU,YAAY,kCAGhCI,EAAAD,IAAC4K,GAAA,CACCC,aACAC,gBACAC,iBACAT,kBACAC,qBACAS,6BAAAA,EACAC,yBAAAA,UAMPU,EACC1L,EAAAD,IAACmD,EAAA,CACCT,GAAI,GAAG6I,EAAc7I,MAAMO,EAAM4D,MACjCnD,MAAOmI,EACPrI,SAAW+I,GAAMd,EACfF,EAAc7I,GACdO,EAAM4D,IACN0F,EAAEC,OAAO9I,OAEX7D,UAAU,+EACVyE,YAAa,UAAUrB,EAAMgJ,MAAMQ,kBAGrCxM,EAAAD,IAACoD,EAAA,CACCV,GAAI,GAAG6I,EAAc7I,MAAMO,EAAM4D,MACjCnD,MAAOqE,MAAMC,QAAQ6D,GAAcA,EAAWa,KAAK,MAAQb,EAC3DrI,SAAW+I,GAAMd,EACfF,EAAc7I,GACdO,EAAM4D,IACN0F,EAAEC,OAAO9I,OAEXL,KAAM0I,EAAW,EAAI,EACrBlM,UAAU,+EACVyE,YAAa,iCAAiCrB,EAAMgJ,MAAMQ,oBAKpE,CChHa,MCSAE,GAAyB,KACpC,MAAMC,EAAiC,CAAA,EAShC,OAPWC,GAAAjG,SAASlB,IACfkH,EAAAlH,EAAQhD,IAAM,GAChBgD,EAAAoH,OAAOlG,SAAS3D,IACtB2J,EAAUlH,EAAQhD,IAAIO,EAAM4D,KAAO,EAAA,GACpC,IAGI+F,CAAA,EAMIG,GAAyBC,IAChC,IAACA,EAAqB,MAAA,GAMnB,OAJiBxG,OAAOG,QAAQqG,GACpCC,QAAO,EAAEC,EAAGxJ,KAAWA,IACvBE,KAAI,EAAEiD,KAASA,IAEK6F,KAAK,KAAI,EAMrBS,GAAgCC,IAE3C,MAAMC,EAAYV,KAYX,MDpDyB,EAACU,EAAgCD,KAC7DA,EAAQvK,OAAgBwK,EAAAC,aAAazK,KAAOuK,EAAQvK,MACpDuK,EAAQG,UAAmBF,EAAAC,aAAaC,QAAUH,EAAQG,SAC1DH,EAAQI,iBAA0BH,EAAAC,aAAaE,eAAiBJ,EAAQI,gBACxEJ,EAAQK,gBAAyBJ,EAAAC,aAAaG,cAAgBL,EAAQK,eACtEL,EAAQM,WAAoBL,EAAAC,aAAaI,SAAWN,EAAQM,UAGnC,QAAzBN,EAAQO,eACNP,EAAQQ,mBAA4BP,EAAAC,aAAaK,aAAeP,EAAQQ,kBACxER,EAAQS,uBAAgCR,EAAAC,aAAaO,qBAAuBT,EAAQS,uBAIlE,QAApBT,EAAQU,UACNV,EAAQW,cAAuBV,EAAAC,aAAaQ,QAAUV,EAAQW,aAC9DX,EAAQY,kBAA2BX,EAAAC,aAAaU,gBAAkBZ,EAAQY,kBAI1D,QAAlBZ,EAAQa,OACNb,EAAQc,YAAqBb,EAAAC,aAAaW,MAAQb,EAAQc,WAG5Dd,EAAQe,aAAsBd,EAAAC,aAAaa,WAAaf,EAAQe,WAAA,ECmBpEC,CAAmBf,EAAWD,GCzCA,EAACC,EAAgCD,KAC3DA,EAAQiB,WACVhB,EAAUiB,UAAUD,SAAWtB,GAAsBK,EAAQiB,WAE3DjB,EAAQmB,QACVlB,EAAUiB,UAAUC,MAAQxB,GAAsBK,EAAQmB,QAExDnB,EAAQoB,WACAnB,EAAAiB,UAAUE,SAAWpB,EAAQoB,UAErCpB,EAAQqB,SACVpB,EAAUiB,UAAUG,OAAS1B,GAAsBK,EAAQqB,QAC7D,ED8BAC,CAAiBrB,EAAWD,GE1CQ,EAACC,EAAgCD,KAgBrE,GAfIA,EAAQuB,WACVtB,EAAUuB,gBAAgBD,SAAW5B,GAAsBK,EAAQuB,WAEjEvB,EAAQyB,YACVxB,EAAUuB,gBAAgBC,UAAY9B,GAAsBK,EAAQyB,YAElEzB,EAAQ0B,YACVzB,EAAUuB,gBAAgBE,UAAY/B,GAAsBK,EAAQ0B,YAElE1B,EAAQ2B,aACA1B,EAAAuB,gBAAgBG,WAAa3B,EAAQ2B,YAE7C3B,EAAQ4B,aACV3B,EAAUuB,gBAAgBK,cAAgBlC,GAAsBK,EAAQ4B,aAEtE5B,EAAQ6B,cAAe,CACnB,MAAAC,EAAe7B,EAAUuB,gBAAgBK,cACzCA,EAAgBlC,GAAsBK,EAAQ6B,eACpD5B,EAAUuB,gBAAgBK,cAAgBC,EACxC,GAAGA,MAAiBD,IAAkBA,CAC1C,GFsBAE,CAAuB9B,EAAWD,GG3CE,EAACC,EAAgCD,KACjEA,EAAQgC,iBACV/B,EAAUgC,WAAWD,eAAiBrC,GAAsBK,EAAQgC,iBAElEhC,EAAQkC,aACAjC,EAAAgC,WAAWC,WAAalC,EAAQkC,YAExClC,EAAQmC,cACVlC,EAAUgC,WAAWE,YAAcxC,GAAsBK,EAAQmC,cAE/DnC,EAAQoC,aACAnC,EAAAgC,WAAWG,WAAapC,EAAQoC,YAExCpC,EAAQqC,WACApC,EAAAgC,WAAWI,SAAWrC,EAAQqC,SAC1C,EH6BAC,CAAuBrC,EAAWD,GI5CK,EAACC,EAAgCD,KACpEA,EAAQuC,sBACVtC,EAAUuC,QAAQD,oBAAsB5C,GAAsBK,EAAQuC,sBAEpEvC,EAAQyC,aACAxC,EAAAuC,QAAQC,WAAazC,EAAQyC,YAErCzC,EAAQ0C,oBACAzC,EAAAuC,QAAQE,kBAAoB1C,EAAQ0C,mBAE5C1C,EAAQ2C,UACA1C,EAAAuC,QAAQG,QAAU3C,EAAQ2C,SAElC3C,EAAQ4C,qBACA3C,EAAAuC,QAAQI,mBAAqB5C,EAAQ4C,mBACjD,EJ8BAC,CAA0B5C,EAAWD,GK7CI,EAACC,EAAgCD,KACtEA,EAAQ8C,YACV7C,EAAU8C,SAASD,UAAYnD,GAAsBK,EAAQ8C,YAE3D9C,EAAQgD,gBACV/C,EAAU8C,SAASC,cAAgBrD,GAAsBK,EAAQgD,gBAE/DhD,EAAQiD,cACVhD,EAAU8C,SAASE,YAActD,GAAsBK,EAAQiD,cAE7DjD,EAAQkD,cACAjD,EAAA8C,SAASG,YAAclD,EAAQkD,aAEvClD,EAAQmD,aACVlD,EAAU8C,SAASI,WAAaxD,GAAsBK,EAAQmD,YAChE,EL+BAC,CAA4BnD,EAAWD,GM9CF,EAACC,EAAgCD,KAClEA,EAAQqD,gBACVpD,EAAUqD,mBAAmBD,cAAgB1D,GAAsBK,EAAQqD,gBAGzErD,EAAQuD,OACVtD,EAAUqD,mBAAmBC,KAAO5D,GAAsBK,EAAQuD,OAGhEvD,EAAQwD,uBACVvD,EAAUqD,mBAAmBG,mBAAqB9D,GAAsBK,EAAQwD,uBAG9ExD,EAAQ0D,wBACVzD,EAAUqD,mBAAmBI,sBAAwB/D,GAAsBK,EAAQ0D,wBAGjF1D,EAAQ2D,qBACV1D,EAAUqD,mBAAmBK,mBAAqBhE,GAAsBK,EAAQ2D,qBAG9E3D,EAAQ4D,uBACV3D,EAAUqD,mBAAmBM,qBAAuBjE,GAAsBK,EAAQ4D,uBAGhF5D,EAAQ6D,gBACA5D,EAAAqD,mBAAmBO,cAAgB7D,EAAQ6D,cACvD,ENoBAC,CAAwB7D,EAAWD,GAG5BC,CAAA,EOtCIrC,GAA+B,CAC1CmG,EACAC,EAA4C,MAE5C,MAgDMC,EAhD+C,CACnDxO,KAAQ,CAAC,QACT0K,QAAW,CAAC,WACZC,eAAkB,CAAC,kBACnBC,cAAiB,CAAC,iBAClBC,SAAY,CAAC,YACbI,QAAW,CAAC,UAAW,cAAe,mBACtCG,MAAS,CAAC,QAAS,aACnBE,WAAc,CAAC,cAEfE,SAAY,CAAC,YACbE,MAAS,CAAC,SACVC,SAAY,CAAC,YACbC,OAAU,CAAC,UAEXE,SAAY,CAAC,YACbE,UAAa,CAAC,aACdC,UAAa,CAAC,aACdC,WAAc,CAAC,cACfE,cAAiB,CAAC,aAAc,gBAAiB,mBAEjDG,eAAkB,CAAC,kBACnBE,WAAc,CAAC,cACfC,YAAe,CAAC,eAChBC,WAAc,CAAC,cACfC,SAAY,CAAC,YAEbE,oBAAuB,CAAC,uBACxBE,WAAc,CAAC,cACfC,kBAAqB,CAAC,qBACtBC,QAAW,CAAC,WACZC,mBAAsB,CAAC,sBAEvBE,UAAa,CAAC,aACdE,cAAiB,CAAC,iBAClBC,YAAe,CAAC,eAChBC,YAAe,CAAC,eAChBC,WAAc,CAAC,cAEfE,cAAiB,CAAC,gBAAiB,wBACnCE,KAAQ,CAAC,QACTE,mBAAsB,CAAC,wBACvBC,sBAAyB,CAAC,yBAC1BC,mBAAsB,CAAC,sBACvBC,qBAAwB,CAAC,wBACzBC,cAAiB,CAAC,kBAG2BE,IAAa,GAEtDG,EAA+D,GAErE,IAAA,MAAW5L,KAAW2C,GACT,IAAA,MAAA1G,KAAY+D,EAAQgC,UACzB2J,EAAoBpJ,SAAStG,EAASe,UAA6C,IAAtC0O,EAAqBzP,EAASe,KAC7E4O,EAAkBC,KAAK,CACrB5P,WACA+C,UAAWgB,EAAQhD,KAMpB,OAAA4O,CAAA,EA0EIE,GAAyB,CACpC9M,EACA+M,EACA9I,EACAoB,KAEA,MAAMrE,EAAUmH,GAAkB6E,MAAKhM,GAAWA,EAAQhD,KAAOgC,IACjE,IAAKgB,EAAS,OAEd,MAAMiM,EAAejM,EAAQoH,OAAOG,QAAgBhK,UAClD,MAAMS,EAAQ,OAAAC,EAAA8N,EAAK/M,aAAazB,EAAM4D,KAC/B,OAAAnD,GAA0B,KAAjBA,EAAMkO,MAAW,IAG/BD,EAAajL,QAAU,IAAMiC,EAAkBV,SAASvD,GAC1DqF,GAA6B8H,GAAA,IAAIA,EAAMnN,KAC9BiN,EAAajL,OAAS,GAAKiC,EAAkBV,SAASvD,IAC1CqF,MAAQ8H,EAAK5E,QAAavK,GAAAA,IAAOgC,KACxD,EC7JK,SAASoN,IAAcC,mBAC5BA,EAAAC,eACAA,EAAAvG,kBACAA,EAAAG,qBACAA,EAAAb,eACAA,EAAAF,WACAA,EAAAC,cACAA,EAAAR,gBACAA,EAAAC,mBACAA,EAAA6G,qBACAA,EACAnG,yBAAAA,IAEM,MAAAM,EAAgBsB,GAAkBkF,GAClCE,EDqHC,CACL,OAAQ,UAAW,iBAAkB,wBAAyB,yBAC9D,gBAAiB,WAAY,kBAAmB,gBAChD,UAAW,iBAAkB,kBAC7B,QAAS,eAAgB,iBCxHrBlG,EAAWC,mBAGd,MAAI,CAAAnM,UAAW,uCAAuC0L,EAAc9B,OAAS,qDAC5E3J,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,WAAckM,EAAW,UAAY,YAA1B,gDACZjM,WAAcoH,QAGhBqE,EAAcuB,OAAOlJ,KAAKX,IACzB,MAAMuI,EAAcwG,EAAezG,EAAc7I,KAAO,CAAA,EAClDiJ,EAAqBsG,EAAiBhK,SAAShF,EAAM4D,KAGzD,OAAA5G,EAAAD,IAACsL,GAAA,CAECrI,QACAsI,gBACAC,cACAC,oBACAC,oBAAsByF,GDqFC,EAACA,EAAkBC,EAA4C,MAHzF,CAAC,OAAQ,UAAW,iBAAkB,WAAY,cAMtCnJ,SAASkJ,IAIFnG,GAA6BmG,EAAUC,GACxC1K,OAAS,EC7FWgF,CAAoByF,EAAUC,GACjEzF,qBACAC,uBACAb,iBACAF,aACAC,gBACAR,kBACAC,qBACAS,6BAA+BmG,GAAanG,GAA6BmG,EAAUC,GACnFnG,yBAAAA,GAdKhI,EAAM4D,IAAA,MAoBvB,CCzDO,SAASqL,IAAaH,mBAC3BA,EAAAI,uBACAA,EAAAC,WACAA,EAAAzM,OACAA,EAAA0M,sBACAA,IAGE,SAAAtS,KAAC,MAAI,CAAAF,UAAU,4BACbC,SAAA,CAAAG,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAAS,IAAMmS,EAAsBnJ,KAAKoJ,IAAI,EAAGP,EAAqB,IACtE7J,SAAiC,IAAvB6J,EACVlS,UAAU,+EAEVC,SAAA,GAACE,IAAAmI,EAAA,CAAUtI,UAAU,iBAAiB,qBAGxCI,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAASkS,EACTvS,UAAU,+EAEVC,SAAA,GAACE,IAAAuS,EAAA,CAAK1S,UAAU,iBAAiB,wBAGlCkS,IAAuBI,EAAyB,EAC/ClS,EAAAF,KAACoB,EAAA,CACCjB,QAAS,cAITL,UAAU,0DACXC,SAAA,CAAA,+BAC2BE,IAACyB,EAAa,CAAA5B,UAAU,oBAGpDI,EAAAF,KAACoB,EAAA,CACCjB,QAAS,IAAMmS,EAAsBnJ,KAAKsJ,IAAIL,EAAyB,EAAGJ,EAAqB,IAC/FlS,UAAU,0DACXC,SAAA,CAAA,mBACeE,IAACyB,EAAa,CAAA5B,UAAU,sBAKhD,CCzDO,SAAS4S,KAEXzS,OAAAA,EAAAA,IAAA,KAAA,CAAGH,UAAU,4CAA4CC,SAAwB,4BAEtF,CCJO,SAAS4S,KACd,aACG,MAAI,CAAA7S,UAAU,gEACbC,SAACC,EAAAA,KAAA,IAAA,CAAEF,UAAU,4BACXC,SAAA,GAAAE,IAAC,UAAOF,SAAK,UAAS,2IAK9B,CCAO,SAAS6S,GACdtF,EACAuF,EACAxB,EAA4C,CAAA,GAE5C,MAAOW,EAAoBM,GAAyB/R,WAAS,IACtD0R,EAAgBa,GAAqBvS,WAAS,IAAK+M,KACnD/C,EAAiBC,GAAsBjK,EAAAA,SAAkD,CAAE,IAC3FyK,EAAgB+H,GAAqBxS,WAAiB,KACtDuK,EAAYC,GAAiBxK,YAAS,IACtCqI,EAAmBoB,GAAwBzJ,EAAAA,SAAmB,IAkCrEX,EAAAA,WAAU,KACUkN,GAAAjG,SAAmBlB,IACnC8L,GAAuB9L,EAAQhD,GAAIsP,EAAgBrJ,EAAmBoB,EAAoB,GAC3F,GACA,IAGHpK,EAAAA,WAAU,KACRc,OAAOsG,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAU,GAC7C,CAAC8K,IAsBG,MAAA,CACLA,qBACAM,wBACAL,iBACAa,oBACAvI,kBACAC,qBACAQ,iBACA+H,oBACAjI,aACAC,gBACAnC,oBACAoB,uBACA0B,kBA5EwB,CAAC/G,EAAmByM,EAAkBzN,KAC9DmP,GAA8BE,IAC5B,MAAMC,EAAc,IACfD,EACHrO,CAACA,GAAY,IACRqO,EAASrO,GACZyM,CAACA,GAAWzN,IAOT,OAFgB8N,GAAA9M,EAAWsO,EAAarK,EAAmBoB,GAE3DiJ,CAAA,GACR,EA+DDC,oBA3D0B,KACtBlB,EAAqB,GACvBM,EAAsBN,EAAqB,EAC7C,EAyDAmB,gBArDsB,KAClBnB,EAAqBlF,GAAkBnG,OAAS,GAClD2L,EAAsBN,EAAqB,EAC7C,EAmDAK,WApCiB,KACjBQ,EAASZ,GACTmB,GAAM,iDAAgD,EAmCtDvH,qBAhC4BuF,IAC5B2B,EAAkB3B,GAEZ,MACAiC,EL6BuC,EAC/CjC,EACAzM,EACA2I,EACA+D,KAEA,MAAMiC,EAXgC,EAAClC,EAAkBzM,EAAmB2I,KAE5E,OM7DmCrL,EN4DdqL,EAAU3I,GAAWyM,IAAa,IMxDhDnP,EAAKsR,MAAM,KAAK1P,KAAcC,GAAAA,EAAO+N,SAAQ3E,QAAiBpJ,GAAAA,EAAO6C,OAAS,IAHnE,GADgB,IAAC1E,CN6DK,EASZuR,CAAyBpC,EAAUzM,EAAW2I,GACpEiE,EAAoBtG,GAA6BmG,EAAUC,GAE3DgC,EAAkE,CAAA,EAoBjE,OAlBP9B,EAAkB1K,SAAQ,EAAGjF,eAC3B,MAAM0I,EAAa1I,EAASe,GACL0Q,EAAA/I,GAAc,GAEjC1I,EAASW,SACFX,EAAAW,QAAQsE,SAAS/C,IACpB,IAAA2G,EAAa6I,EAAoBpL,SAASpE,GAExC,MAAA2P,EAASpC,EAAqB/G,GACd,iBAAXmJ,IAAwBzL,MAAMC,QAAQwL,IAAWA,EAAO3P,KACpD2G,GAAA,GAGQ4I,EAAA/I,GAAYxG,GAAU2G,CAAA,GAEjD,IAGK4I,CAAA,EK1D0BK,CAC7BtC,EAFoBtE,GAAkBkF,GAGxBrP,GACdsP,EACAZ,GAGF7G,EAAmB6I,GACnBtI,GAAc,EAAI,EAsBtB,CEpGa,MAAAG,GAA2B,CACtCF,EACAT,EACA0H,EACAa,EACAlK,EACAoB,EACAQ,EACAO,KAEM,MAAAkI,EAAc,IAAKhB,GAEnB0B,EAA+B,GAYjC,GAVGlN,OAAAG,QAAQ2D,GAAiB1D,SAAQ,EAAEyD,EAAY/H,MAChD,GAAAkE,OAAOmN,OAAOrR,GAASsR,MAAKlQ,GAASA,IAAQ,CAC/C,MAAMmQ,EAAsBrN,OAAOG,QAAQrE,GACxC2K,QAAO,EAAEC,EAAG1C,KAAgBA,IAC5B5G,KAAI,EAAEC,KAAYA,IAEF6P,EAAAnC,QAAQsC,EAC7B,KAGEH,EAAmBhN,OAAS,EAAG,CAC3B,MAAAoN,EAAmBJ,EAAmBhH,KAAK,MAE3CqH,EPzBgC,CACtCpP,SAAY,eACZE,WAAc,YACdE,iBAAoB,kBACpBE,MAAS,aACTE,SAAY,UACZE,WAAc,WACdE,kBAAqB,sBARmByO,EO2BtCxN,OAAOC,KAAK6D,GAAiB1G,KAAIlB,UAAuB,OAAjB,OAAiBiB,EPwD9B,CAAC0G,IAC/B,IAAA,MAAW3E,KAAW2C,GAAuB,CACrC,MAAA1G,EAAW+D,EAAQgC,UAAUgK,MAAUuC,GAAAA,EAAEvR,KAAO2H,IACtD,GAAI1I,EACF,MAAO,CAAEA,WAAU+C,UAAWgB,EAAQhD,GAE1C,CACO,OAAA,IAAA,EO/DqDwR,CAAAxR,SAAjB,EAAAiB,EAAsBe,YAAa,EAAA,IAAI,KPjB/CsP,EOoBrBhB,EAAAe,GAAiBhJ,GAAkB+I,EAC/CjB,EAAkBG,GAGKxB,GAAAuC,EAAiBf,EAAarK,EAAmBoB,GAExEoJ,GAAM,kEAAiE,MAEvEA,GAAM,kCPtCiC,IAACa,EOyC1CzJ,EAAmB,CAAE,GACrBO,GAAc,EAAK,ECrCd,SAASqJ,IAAgBC,UAAEA,EAAY,IAAKvU,UAAAA,EAAY,KAC7D,MAAOwU,EAAWC,GAAgBhU,YAAS,GAE3CX,EAAAA,WAAU,KACR,MAAM4U,EAAmB,KACVD,EAAA7T,OAAOC,QAAU0T,EAAS,EAIzC,OADO3T,OAAAE,iBAAiB,SAAU4T,GAC3B,IAAM9T,OAAOG,oBAAoB,SAAU2T,EAAgB,GACjE,CAACH,IASJ,yBAEKtU,SACCuU,GAAApU,EAAAD,IAACmB,EAAA,CACCjB,QAXY,KAClBO,OAAOsG,SAAS,CACdC,IAAK,EACLC,SAAU,UACX,EAQKpH,UAAW,uEAAuEA,IAClF,aAAW,iBACXuB,QAAQ,aACRC,KAAK,OAELvB,SAAAE,EAAAA,IAACwU,EAAQ,CAAA3U,UAAU,eAK7B,CCzBO,SAAS4U,IAAgBpH,UAC9BA,EAAAuF,SACAA,EAAAjN,OACAA,EAAA+O,OACAA,EAAAtD,qBACAA,EAAuB,CAAC,IAElB,MAAAW,mBACJA,EAAAM,sBACAA,EAAAL,eACAA,EAAAa,kBACAA,EAAAvI,gBACAA,EAAAC,mBACAA,EAAAQ,eACAA,EAAAF,WACAA,EAAAC,cACAA,EAAAnC,kBACAA,EAAAoB,qBACAA,EAAA0B,kBACAA,EAAAwH,oBACAA,EAAAC,gBACAA,EAAAd,WACAA,EAAAxG,qBACAA,GACE+G,GAAetF,EAAWuF,EAAUxB,GAgBtC,SAAArR,KAAC,MAAI,CAAAF,UAAU,kBACbC,SAAA,CAAAG,EAAAD,IAACyS,GAAa,IAEdxS,EAAAD,IAACsI,GAAA,CACCC,SAAUsE,GACVrE,oBAAqBuJ,EACrBtJ,eAAgB4J,EAChB3J,UAAU,SACVC,oBACA/C,WAAYqN,EACZtN,OAAQuN,IAGVjT,EAAAD,IAAC8R,GAAA,CACCC,qBACAC,iBACAvG,oBACAG,uBACAb,iBACAF,aACAC,gBACAR,kBACAC,qBACA6G,uBACAnG,yBAtC4B,KAChCA,GACEF,EACAT,EACA0H,EACAa,EACAlK,EACAoB,EACAQ,EACAO,EAAA,UAgCC4H,GAAU,IAEXzS,EAAAD,IAACkS,GAAA,CACCH,qBACAI,uBAAwBtF,GAAkBnG,OAC1C0L,aACAzM,SACA0M,gCAGD8B,GAAgB,MAGvB,CCzFO,SAASQ,IAAczN,MAAEA,EAAOmG,UAAAA,IAmEnC,SAAAtN,KAAC,MAAI,CAAAF,UAAU,sDACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,uCAAwCC,SAAMoH,MAE5DnH,KAAC,MAAI,CAAAF,UAAU,iBACbC,SAAA,CAAAG,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAvEY,KACZiT,GAAA,CACJjM,MAAO,4BACPhF,YAAa,4DAGfzB,OAAOmU,OAAM,EAkEP/U,UAAU,oBAEVC,SAAA,GAACE,IAAA6U,EAAA,CAAQhV,UAAU,iBAAiB,eAGtCI,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAtEkB,KAClBiT,GAAA,CACJjM,MAAO,oBACPhF,YAAa,oDAGf4S,GAAY,qBAAsB,0BAC/BC,MAAK,KACE5B,GAAA,CACJjM,MAAO,qBACPhF,YAAa,+CACd,IAEF8S,OAAOC,IAEA9B,GAAA,CACJjM,MAAO,mBACPhF,YAAa,gFACd,GACF,EAoDGrC,UAAU,oBAEVC,SAAA,GAACE,IAAAkV,EAAA,CAASrV,UAAU,iBAAiB,UAGvCI,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAxDmB,KACpBmN,GAWC8F,GAAA,CACJjM,MAAO,oBACPhF,YAAa,+DAGfiT,GAAa9H,EAAW,2BACrB0H,MAAK,KACE5B,GAAA,CACJjM,MAAO,qBACPhF,YAAa,mEACd,IAEF8S,OAAOC,IAEA9B,GAAA,CACJjM,MAAO,mBACPhF,YAAa,0EACd,KA3BGiR,GAAA,CACJjM,MAAO,mBACPhF,YAAa,4CA0Bd,EA2BGrC,UAAU,oBAEVC,SAAA,GAACE,IAAAkB,EAAA,CAASrB,UAAU,iBAAiB,gBAK/C,CChGgB,SAAAuV,IAAe1Q,UAAEA,EAAAwC,MAAWA,EAAOsE,YAAAA,EAAc,GAAIsB,OAAAA,EAAS,KACtE,MAAAhG,EAAcrC,GAAeC,GAC7BqH,EAAWC,KAGf,SAAAjM,KAAC,MAAI,CAAAF,UAAU,mDACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,kDACZC,SAAA,CACCgH,KAAA9G,IAAC,OAAK,CAAAH,UAAU,kCACdC,SAAAG,EAAAD,IAAC8G,EAAA,CACCjH,UAAU,2DACV,cAAY,OACZwV,MAAO,CAAEC,iBAAkB,aAIjCtV,EAAAA,IAAC,MAAGH,WAAckM,EAAW,UAAY,YAA1B,iEACZjM,SACHoH,aAGD,MAAI,CAAArH,UAAU,2CACZC,SAAOgN,EAAAlJ,KAAKX,IACL,MAAAS,EAAQ8H,EAAYvI,EAAM4D,KAG5B,OAACnD,GAAUqE,MAAMC,QAAQtE,IAA2B,IAAjBA,EAAMgD,OACpC,OAIP3G,KAAC,MAAoB,CAAAF,UAAU,aAC7BC,SAAA,CAAAE,EAAAA,IAAC,KAAG,CAAAH,UAAU,0EAA2EC,SAAAmD,EAAMgJ,QAC9FjM,EAAAA,IAAA,MAAA,CAAIH,UAAU,qFACZC,SAAMiI,MAAAC,QAAQtE,GACZzD,EAAAD,IAAA,KAAA,CAAGH,UAAU,8DACXC,SAAM4D,EAAAE,KAAI,CAAC2R,EAAMjM,IAChBrJ,EAAAD,IAAC,KAAgB,CAAAF,SAAAyV,GAARjM,OAIZrJ,EAAAD,IAAA,IAAA,CAAEH,UAAU,qCAAsCC,iBAV/CmD,EAAM4D,IAahB,QAMZ,CCxDgB,SAAA2O,IAAiBlI,aAAEA,IAC3B,MAAAzK,EAAOyK,EAAazK,MAAQ,GAGhC,SAAA9C,KAAC,MAAI,CAAAF,UAAU,oDACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,2CAA2CC,SAAW,kBAEpEC,KAAC,MAAI,CAAAF,UAAU,yBACbC,SAAA,QAAC,MACC,CAAAA,SAAA,GAACE,IAAA,MAAA,CAAIH,UAAU,oCACdG,EAAAA,IAAA,IAAA,CAAEH,UAAU,cAAeC,SAAK+C,IAChC7C,EAAAA,IAAA,IAAA,CAAEH,UAAU,oCAAoCC,SAAQ,uBAG1D,MACC,CAAAA,SAAA,GAACE,IAAA,MAAA,CAAIH,UAAU,0CACd,IAAE,CAAAA,UAAU,cAAeC,SAAAwN,EAAaE,gBAAkB,sBAC1DxN,EAAAA,IAAA,IAAA,CAAEH,UAAU,oCAAoCC,SAAe,sBAChEC,KAAC,IAAE,CAAAF,UAAU,oCAAoCC,SAAA,CAAA,QAAMwN,EAAamI,wBAA0B,+BAIlG1V,KAAC,MAAI,CAAAF,UAAU,8BACbC,SAAA,QAAC,MACC,CAAAA,SAAA,GAACE,IAAA,MAAA,CAAIH,UAAU,0CACd,IAAE,CAAAA,UAAU,cAAeC,SAAAwN,EAAaK,cAAgB,sBACxD3N,EAAAA,IAAA,IAAA,CAAEH,UAAU,oCAAoCC,SAAiB,wBAClEC,KAAC,IAAE,CAAAF,UAAU,oCAAoCC,SAAA,CAAA,QAAMwN,EAAaO,sBAAwB,iCAG7F,MACC,CAAA/N,SAAA,GAACE,IAAA,MAAA,CAAIH,UAAU,0CACd,IAAE,CAAAA,UAAU,cAAeC,SAAAwN,EAAaW,OAAS,sBACjDjO,EAAAA,IAAA,IAAA,CAAEH,UAAU,oCAAoCC,SAAK,YACtDC,KAAC,IAAE,CAAAF,UAAU,oCAAoCC,SAAA,CAAA,aAAWwN,EAAaoI,eAAiB,+BAKpG,CCvCgB,SAAAC,IAAWC,WAAEA,IAEzB,SAAA7V,KAAC,MAAI,CAAAF,UAAU,0BACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,oCACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,qBAAqBC,SAAc,mBACjDG,EAAAD,IAAC,MAAA,CACCa,IAAI,4DACJC,IAAI,kBACJjB,UAAU,iCAGb+V,KACC5V,IAAC,KAAG,CAAAH,UAAU,eAAgBC,SAAW8V,IAE1C5V,EAAAA,IAAA,IAAA,CAAEH,UAAU,kCAAkCC,SAO/C,igBAGN,CC5BO,SAAS+V,KACd,aACG,MAAI,CAAAhW,UAAU,uCACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,kDACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,0BACbC,SAAA,CAAAG,EAAAD,IAAC,MAAA,CACCa,IAAI,4DACJC,IAAI,kBACJjB,UAAU,+BAEZE,KAAC,IAAE,CAAAF,UAAU,wBAAwBC,SAAA,CAAA,MAChC,IAAIgW,MAAOC,cAAc,qDAGhC/V,EAAAA,IAAC,OAAIH,UAAU,sDACbC,eAAC,OAAK,CAAAD,UAAU,4BAK1B,CCDO,SAASmW,IAAiB3I,UAAEA,EAAW4I,OAAAA,EAAAtQ,OAAQA,UACpD,MAAMoG,EAAWC,KAKXsB,EAAeD,EAAUC,cAAgB,GAQ7C,OALF3N,EAAAA,WAAU,KACDc,OAAAsG,SAAS,EAAG,EAAC,GACnB,MAGDhH,KAAC,MAAI,CAAAF,UAAU,kBACbC,SAAA,GAACE,IAAA2U,GAAA,CAAczN,MAAM,iCAAiCmG,cAEtDpN,EAAAF,KAAC,MAAA,CACC2C,GAAG,qBACH7C,UAAU,mGAEVC,SAAA,GAACE,IAAA2V,GAAA,CAAWC,WAAYtI,EAAazK,SAErC9C,KAAC,MAAI,CAAAF,UAAU,eACbC,SAAA,CAAAE,EAAAA,IAAC,KAAEH,WAAckM,EAAW,YAAc,WAA5B,gBAAsDjM,SAGpE,yJAGAE,IAAC,OAAIH,UAAU,mFACbC,eAAC,IAAE,CAAAD,UAAU,qDAAqDC,SAAA,ogBAYtEG,EAAAD,IAACoV,GAAA,CACClO,MAAM,uBACNsE,YAAa6B,EAAUC,cAAgB,CAAC,EACxC5I,UAAU,eACVoI,QAAQ,OAAAnJ,EAAkBkJ,GAAA6E,MAAKhM,GAA0B,iBAAfA,EAAQhD,WAAwB,EAAAiB,EAAAmJ,SAAU,KAIrFD,GACEI,QAAkBvH,GAAe,iBAAfA,EAAQhD,KAC1BkB,KACC8B,GAAAzF,EAAAD,IAACoV,GAAA,CAEClO,MAAOxB,EAAQwB,MACfsE,YAAa6B,EAAU3H,EAAQhD,KAAO,CAAC,EACvCgC,UAAWgB,EAAQhD,GACnBoK,OAAQpH,EAAQoH,QAJXpH,EAAQhD,YAUlB8S,GAAiB,CAAAlI,aAAcD,EAAUC,cAAgB,CAAA,UAGzDuI,GAAY,SAGf9V,KAAC,MAAI,CAAAF,UAAU,4EACbC,SAAA,CAAAG,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAAS+V,EACTpW,UAAU,mCAEVC,SAAA,GAACE,IAAAmI,EAAA,CAAUtI,UAAU,iBAAiB,sBAGxCI,EAAAF,KAACoB,EAAA,CACCjB,QAASyF,EACT9F,UAAU,yEACXC,SAAA,CAAA,kBACcE,IAACoI,EAAW,CAAAvI,UAAU,yBAK7C,CC9FO,SAASqW,IAAiB5U,KAAEA,EAAM6K,aAAAA,EAAAgK,YAAcA,IACrD,MAAOC,EAAOC,GAAY/V,WAAS,KAC5BgW,EAASC,GAAcjW,WAAS,uBAChCkW,EAASC,GAAcnW,EAAAA,SAC5B,2SAKKoW,EAAWC,GAAgBrW,YAAS,GAgCrCsW,EAAY,KAChBP,EAAS,IACTE,EAAW,sBACXE,EACE,ySAAA,EAOJ,aACGvK,GAAO,CAAA5K,OAAY6K,eAClBrM,SAACC,EAAAA,KAAAmL,GAAA,CAAcrL,UAAU,mBACvBC,SAAA,QAACqL,GACC,CAAArL,SAAA,GAAAE,IAACoL,IAAYtL,SAAuB,8BACpCE,IAAC6W,IAAkB/W,SAEnB,sFAGDC,EAAAA,KAAA,OAAA,CAAKqH,SAnDS0P,MAAOvK,IAG1B,GAFAA,EAAEwK,iBAEGX,EAAL,CAKAO,GAAa,GAET,UAEIR,IAIA,MAAAa,EAAa,UAAUZ,aAAiBa,mBAAmBX,WAAiBW,mBAAmBT,KAC9F/V,OAAAa,KAAK0V,EAAY,UAExB7D,GAAM,gFACNhH,GAAa,aAEN8I,GAEP9B,GAAM,oEAAmE,CACzE,QACAwD,GAAa,EACf,CArBA,MAFExD,GAAM,4CAuBR,EAwBkCtT,UAAU,iBACtCC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,YACbC,SAAA,CAACE,EAAAA,IAAA2K,GAAA,CAAM5G,QAAQ,QAAQjE,SAAsB,2BAC7CG,EAAAD,IAACmD,EAAA,CACCT,GAAG,QACHP,KAAK,QACLmC,YAAY,mBACZZ,MAAO0S,EACP5S,SAAW+I,GAAM8J,EAAS9J,EAAEC,OAAO9I,cAIvC3D,KAAC,MAAI,CAAAF,UAAU,YACbC,SAAA,CAACE,EAAAA,IAAA2K,GAAA,CAAM5G,QAAQ,UAAUjE,SAAO,YAChCG,EAAAD,IAACmD,EAAA,CACCT,GAAG,UACHgB,MAAO4S,EACP9S,SAAW+I,GAAMgK,EAAWhK,EAAEC,OAAO9I,cAIzC3D,KAAC,MAAI,CAAAF,UAAU,YACbC,SAAA,CAACE,EAAAA,IAAA2K,GAAA,CAAM5G,QAAQ,UAAUjE,SAAQ,aACjCG,EAAAD,IAACoD,EAAA,CACCV,GAAG,UACHW,KAAM,EACNK,MAAO8S,EACPhT,SAAW+I,GAAMkK,EAAWlK,EAAEC,OAAO9I,cAIzC3D,KAACsL,GAAa,CAAAxL,UAAU,OACtBC,SAAA,CAACE,EAAAA,IAAAmB,EAAA,CAAOgB,KAAK,SAASf,QAAQ,UAAUlB,QAAS,IAAMiM,GAAa,GAAQrM,SAE5E,aACAE,EAAAA,IAACmB,GAAOgB,KAAK,SAAS+F,SAAUwO,EAC7B5W,SAAA4W,EAAY,cAAgB,wBAKlC1W,MAAA,MAAA,CAAIH,UAAU,6BACbC,gBAAC,IACC,CAAAA,SAAA,GAAAE,IAAC,UAAOF,SAAK,UAAS,0HAOlC,CC5HO,SAASoX,KAEZ,SAAAnX,KAAC,MAAI,CAAAF,UAAU,sCACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,+CAA+CC,SAAe,sBAC5EC,KAAC,KAAG,CAAAF,UAAU,mCACZC,SAAA,GAAAE,IAAC,MAAGF,SAAyD,gEAC7DE,IAAC,MAAGF,SAA2D,kEAC/DE,IAAC,MAAGF,SAAwD,+DAC5DE,IAAC,MAAGF,SAA8D,qEAClEE,IAAC,MAAGF,SAAwD,+DAC5DE,IAAC,MAAGF,SAA6C,uDAIzD,CCNO,SAASqX,IAAcC,KAAMC,QAAMnQ,EAAOhF,YAAAA,EAAAhC,QAAaA,IAE1D,OAAAD,EAAAF,KAAC,SAAA,CACCF,UAAU,yGACVK,UAEAJ,SAAA,GAACE,IAAAqX,EAAA,CAAKxX,UAAU,qCACfG,EAAAA,IAAA,OAAA,CAAKH,UAAU,gCAAiCC,SAAMoH,IACtDlH,EAAAA,IAAA,OAAA,CAAKH,UAAU,6BAA8BC,SAAYoC,MAGhE,CCTO,SAASoV,IAAiBC,WAC/BA,EAAAC,aACAA,EAAAC,gBACAA,EAAAC,kBACAA,IAEA,MAAM3L,EAAWC,KAGf,SAAAjM,KAAC,MAAI,CAAAF,UAAU,qEACbC,SAAA,CAAAE,EAAAA,IAAC,MAAGH,WAAckM,EAAW,UAAY,YAA1B,gDAAqFjM,SAEpG,iCAEAC,KAAC,MAAI,CAAAF,UAAU,iDACbC,SAAA,CAAAG,EAAAD,IAACmX,GAAA,CACCC,KAAMO,EACNzQ,MAAM,eACNhF,YAAY,qCACZhC,QAASqX,IAGXtX,EAAAD,IAACmX,GAAA,CACCC,KAAMlW,EACNgG,MAAM,kBACNhF,YAAY,gCACZhC,QAASsX,IAGXvX,EAAAD,IAACmX,GAAA,CACCC,KAAMQ,EACN1Q,MAAM,WACNhF,YAAY,2BACZhC,QAASuX,IAGXxX,EAAAD,IAACmX,GAAA,CACCC,KAAMS,EACN3Q,MAAM,SACNhF,YAAY,mCACZhC,QAASwX,SAKnB,CCrDa,MCmBPI,GAA4B,CAChCxK,EACAyK,KAEMC,MAAAA,EAAkBC,SAASC,cAAc,OAC/CF,EAAgBnY,UAAY,OAEtB,MAAAsY,EAAgBF,SAASC,cAAc,MAC7CC,EAActY,UAAY,yBAC1BsY,EAAcC,YAAc,uBAC5BJ,EAAgBK,YAAYF,GAEtB,MAAAG,EAAeL,SAASC,cAAc,OAC5CI,EAAazY,UAAY,OAGF,CACrB,CAAEgH,IAAK,OAAQoF,MAAO,QACtB,CAAEpF,IAAK,UAAWoF,MAAO,iBACzB,CAAEpF,IAAK,gBAAiBoF,MAAO,gCAC/B,CAAEpF,IAAK,WAAYoF,MAAO,wBAC1B,CAAEpF,IAAK,kBAAmBoF,MAAO,YACjC,CAAEpF,IAAK,gBAAiBoF,MAAO,YAC/B,CAAEpF,IAAK,iBAAkBoF,MAAO,mBAChC,CAAEpF,IAAK,wBAAyBoF,MAAO,YACvC,CAAEpF,IAAK,yBAA0BoF,MAAO,QAG3BrF,SAAiB3D,IAC1B,GAAAqK,EAAarK,EAAM4D,KAAM,CACrB,MAAA0O,EAAO0C,SAASC,cAAc,OACpC3C,EAAK1V,UAAY,OAEX,MAAAoM,EAAQgM,SAASC,cAAc,MACrCjM,EAAMpM,UAAY,gBAClBoM,EAAMmM,YAAcnV,EAAMgJ,MAC1BsJ,EAAK8C,YAAYpM,GAEX,MAAAvI,EAAQuU,SAASC,cAAc,KAC/BxU,EAAA0U,YAAc9K,EAAarK,EAAM4D,KACvC0O,EAAK8C,YAAY3U,GAEjB4U,EAAaD,YAAY9C,EAC3B,KAGFyC,EAAgBK,YAAYC,GAC5BP,EAAUM,YAAYL,EAAe,EAMjCO,GAAgB,CACpBC,EACAhN,EACAuM,KAEM,MAAArS,EAAUuS,SAASC,cAAc,OACvCxS,EAAQ7F,UAAY,OAEd,MAAA4Y,EAAeR,SAASC,cAAc,MAC5CO,EAAa5Y,UAAY,yBACZ4Y,EAAAL,YAAcM,GAAsBF,GACjD9S,EAAQ2S,YAAYI,GAEd,MAAAE,EAAiBV,SAASC,cAAc,OAC9CS,EAAe9Y,UAAY,OAGpB2G,OAAAG,QAAQ6E,GAAa5E,SAAQ,EAAEC,EAAKnD,MACzC,IAAKA,EAAO,OAEN,MAAA6R,EAAO0C,SAASC,cAAc,OACpC3C,EAAK1V,UAAY,OAEX,MAAAoM,EAAQgM,SAASC,cAAc,MACrCjM,EAAMpM,UAAY,gBAClBoM,EAAMmM,YAAcvR,EACpB0O,EAAK8C,YAAYpM,GAEX,MAAA2M,EAAUX,SAASC,cAAc,KAC/BU,EAAAR,YAAcrQ,MAAMC,QAAQtE,GAASA,EAAMgJ,KAAK,MAAQhJ,EAChE6R,EAAK8C,YAAYO,GAEjBD,EAAeN,YAAY9C,EAAI,IAGjC7P,EAAQ2S,YAAYM,GACpBZ,EAAUM,YAAY3S,EAAO,EAMzBgT,GAAyBhU,IACkB,CAC7C4I,aAAc,uBACdvI,iBAAkB,wCAClBuJ,UAAW,4BACXM,gBAAiB,oBACjBiK,eAAgB,gBAChBxJ,WAAY,QACZyJ,QAAS,+BACTlJ,QAAS,0BACTO,SAAU,YACVO,mBAAoB,uBAGAhM,IAAcA,GCzHzBqU,GAA2B,CACtCC,EACAC,EAAsB,wBAEhB,MAAAlB,EAAYE,SAASiB,eAAeD,GACrClB,IAGLA,EAAUoB,UAAY,GFfI,CAACpB,IAErB,MAAAqB,EAAiBnB,SAASC,cAAc,OAC9CkB,EAAevZ,UAAY,yCAErB,MAAAqH,EAAQ+Q,SAASC,cAAc,MACrChR,EAAMrH,UAAY,qBAClBqH,EAAMkR,YAAc,iBACpBgB,EAAef,YAAYnR,GAErB,MAAAmS,EAAOpB,SAASC,cAAc,OACpCmB,EAAKxY,IAAM,4DACXwY,EAAKvY,IAAM,kBACXuY,EAAKxZ,UAAY,OACjBuZ,EAAef,YAAYgB,GAC3BtB,EAAUM,YAAYe,GAGhB,MAAAE,EAAarB,SAASC,cAAc,KAC1CoB,EAAWzZ,UAAY,kCACvByZ,EAAWlB,YAAc,6fAMzBL,EAAUM,YAAYiB,EAAU,EERhCC,CAAaxB,GDjBuB,EACpCiB,EACAjB,KAGAD,GAA0BkB,EAAc1L,cAAgB,CAAC,EAAGyK,GAGrDvR,OAAAG,QAAQqS,GAAepS,SAAQ,EAAE4R,EAAYhN,MAC/B,iBAAfgN,GAAkChN,GAAsC,iBAAhBA,GAE9C+M,GAAAC,EAAYhN,EAAoCuM,EAAS,GACxE,ECMDyB,CAAuBR,EAAejB,GClBR,EAC9BzK,EACAyK,KAGM,MAAA0B,EAAmBxB,SAASC,cAAc,OAChDuB,EAAiB5Z,UAAY,QAEvB,MAAA6Z,EAAiBzB,SAASC,cAAc,MAC9CwB,EAAe7Z,UAAY,uCAC3B6Z,EAAetB,YAAc,cAC7BqB,EAAiBpB,YAAYqB,GAEvB,MAAAC,EAAgB1B,SAASC,cAAc,OAC7CyB,EAAc9Z,UAAY,yBAGpB,MAAA+Z,EAAmB3B,SAASC,cAAc,OAC1C2B,EAAc5B,SAASC,cAAc,OAC3C2B,EAAYha,UAAY,kCACxB+Z,EAAiBvB,YAAYwB,GAEvB,MAAAC,EAAc7B,SAASC,cAAc,KAC3C4B,EAAYja,UAAY,cACZia,EAAA1B,YAAc9K,EAAazK,MAAQ,GAC/C+W,EAAiBvB,YAAYyB,GAEvB,MAAAC,EAAe9B,SAASC,cAAc,KAC5C6B,EAAala,UAAY,oCACzBka,EAAa3B,YAAc,WAC3BwB,EAAiBvB,YAAY0B,GAGvB,MAAAC,EAAkB/B,SAASC,cAAc,OACzC+B,EAAahC,SAASC,cAAc,OAC1C+B,EAAWpa,UAAY,kCACvBma,EAAgB3B,YAAY4B,GAEtB,MAAAC,EAAajC,SAASC,cAAc,KAC1CgC,EAAWra,UAAY,cACZqa,EAAA9B,YAAc9K,EAAaE,gBAAkB,oBACxDwM,EAAgB3B,YAAY6B,GAEtB,MAAAC,EAAclC,SAASC,cAAc,KAC3CiC,EAAYta,UAAY,oCACxBsa,EAAY/B,YAAc,kBAC1B4B,EAAgB3B,YAAY8B,GAEtB,MAAAC,EAAYnC,SAASC,cAAc,KACzCkC,EAAUva,UAAY,oCACtBua,EAAUhC,YAAc,QAAQ9K,EAAamI,wBAA0B,sBACvEuE,EAAgB3B,YAAY+B,GAE5BT,EAActB,YAAYuB,GAC1BD,EAActB,YAAY2B,GAGpB,MAAAK,EAAuBpC,SAASC,cAAc,OACpDmC,EAAqBxa,UAAY,8BAG3B,MAAAya,EAAwBrC,SAASC,cAAc,OAC/CqC,EAAmBtC,SAASC,cAAc,OAChDqC,EAAiB1a,UAAY,kCAC7Bya,EAAsBjC,YAAYkC,GAE5B,MAAA3M,EAAmBqK,SAASC,cAAc,KAChDtK,EAAiB/N,UAAY,cACZ+N,EAAAwK,YAAc9K,EAAaK,cAAgB,oBAC5D2M,EAAsBjC,YAAYzK,GAE5B,MAAA4M,EAAoBvC,SAASC,cAAc,KACjDsC,EAAkB3a,UAAY,oCAC9B2a,EAAkBpC,YAAc,oBAChCkC,EAAsBjC,YAAYmC,GAE5B,MAAAC,EAAkBxC,SAASC,cAAc,KAC/CuC,EAAgB5a,UAAY,oCAC5B4a,EAAgBrC,YAAc,QAAQ9K,EAAaO,sBAAwB,sBAC3EyM,EAAsBjC,YAAYoC,GAG5B,MAAAC,EAAiBzC,SAASC,cAAc,OACxCyC,EAAY1C,SAASC,cAAc,OACzCyC,EAAU9a,UAAY,kCACtB6a,EAAerC,YAAYsC,GAErB,MAAAzM,EAAY+J,SAASC,cAAc,KACzChK,EAAUrO,UAAY,cACZqO,EAAAkK,YAAc9K,EAAaW,OAAS,oBAC9CyM,EAAerC,YAAYnK,GAErB,MAAA0M,EAAa3C,SAASC,cAAc,KAC1C0C,EAAW/a,UAAY,oCACvB+a,EAAWxC,YAAc,QACzBsC,EAAerC,YAAYuC,GAErB,MAAAlF,EAAgBuC,SAASC,cAAc,KAC7CxC,EAAc7V,UAAY,oCAC1B6V,EAAc0C,YAAc,aAAa9K,EAAaoI,eAAiB,sBACvEgF,EAAerC,YAAY3C,GAE3B2E,EAAqBhC,YAAYiC,GACjCD,EAAqBhC,YAAYqC,GAEjCjB,EAAiBpB,YAAYsB,GAC7BF,EAAiBpB,YAAYgC,GAC7BtC,EAAUM,YAAYoB,EAAgB,EDxFtCoB,CAAiB7B,EAAc1L,cAAgB,CAAC,EAAGyK,GEpBzB,CAACA,IAErB,MAAA+C,EAAS7C,SAASC,cAAc,OACtC4C,EAAOjb,UAAY,mBACnBib,EAAO1C,YAAc,cAAa,IAAItC,MAAOiF,uBAC7ChD,EAAUM,YAAYyC,EAAM,EFgB5BE,CAAajD,GAGbA,EAAU1C,MAAM4F,QAAU,QAAA,EG+EfC,GAAuB7N,IAC5B,MAAAC,EAAeD,EAAUC,cAAgB,GAE/C,IAAItL,EAAO,yBA0DJ,OAzDCA,GAAA,SAASsL,EAAazK,MAAQ,oBAC9Bb,GAAA,kBAAkBsL,EAAaC,SAAW,oBAC1CvL,GAAA,iCAAiCsL,EAAaG,eAAiB,oBAC/DzL,GAAA,uCAAuCsL,EAAaI,UAAY,oBAChE1L,GAAA,aAAasL,EAAa6N,iBAAmB,oBAC7CnZ,GAAA,aAAasL,EAAa8N,eAAiB,oBAC3CpZ,GAAA,oBAAoBsL,EAAaE,gBAAkB,oBACnDxL,GAAA,aAAasL,EAAa+N,uBAAyB,oBACnDrZ,GAAA,QAAQsL,EAAamI,wBAA0B,oBAEnDnI,EAAaQ,UACP9L,GAAA,yBAAyBsL,EAAaQ,SAAW,oBACjD9L,GAAA,aAAasL,EAAagO,gBAAkB,oBAC5CtZ,GAAA,UAAUsL,EAAaU,iBAAmB,qBAGhDV,EAAaW,QACPjM,GAAA,UAAUsL,EAAaW,OAAS,oBAChCjM,GAAA,aAAasL,EAAaiO,cAAgB,oBAC1CvZ,GAAA,iBAAiBsL,EAAaoI,eAAiB,qBAGjD1T,GAAA,kBAAkBsL,EAAaa,YAAc,uBAG9C3H,OAAAG,QAAQ0G,GAAWzG,SAAQ,EAAE4R,EAAYhN,MAC3B,iBAAfgN,GAAkChN,GAAsC,iBAAhBA,IAE5DxJ,GAAQ,GAAG0W,GAAsBF,GAAYgD,mBAGtChV,OAAAG,QAAQ6E,GAAoC5E,SAAQ,EAAEC,EAAKnD,MAC3DA,IAEG1B,GAAA,KAAK6E,MAAQkB,MAAMC,QAAQtE,GAASA,EAAMgJ,KAAK,MAAQhJ,MAAK,IAG9D1B,GAAA,KAAA,IAGVA,GAAQ,cAAa,IAAI8T,MAAOiF,uBACxB/Y,GAAA,2FACAA,GAAA,uBACAA,GAAA,mEACRA,GAAQ,GAAGsL,EAAazK,MAAQ,8BAA8ByK,EAAaE,gBAAkB,sBACrFxL,GAAA,2CAA2CsL,EAAamI,wBAA0B,kBAGlFzT,GAAA,mEACJsL,EAAaQ,SACf9L,GAAQ,GAAGsL,EAAaQ,SAAW,qCAAqCR,EAAaW,OAAS,YAC9FjM,GAAQ,UAAUsL,EAAaU,iBAAmB,mCAAmCV,EAAaoI,eAAiB,gBAE3G1T,GAAA,sCAAsCsL,EAAaW,OAAS,YAC5DjM,GAAA,kDAAkDsL,EAAaoI,eAAiB,eAGnF1T,CAAA,EAMI0W,GAAyBhU,IACW,CAC7C4I,aAAc,uBACdvI,iBAAkB,wCAClBuJ,UAAW,4BACXM,gBAAiB,oBACjBiK,eAAgB,gBAChBxJ,WAAY,QACZyJ,QAAS,+BACTlJ,QAAS,0BACTO,SAAU,YACVO,mBAAoB,uBAGAhM,IAAcA,GC9K/B,SAAS+W,IAAepO,UAAEA,EAAW4I,OAAAA,IAC1C,MAAOyF,EAAiBC,GAAsBrb,YAAS,GACjDyL,EAAWC,KAMjBrM,EAAAA,WAAU,KACDc,OAAAsG,SAAS,EAAG,EAAC,GACnB,IAGG,MAAA6U,eACJA,EAAAC,gBACAA,EAAAC,iBACAA,EAAAC,iBACAA,EAAAC,uBACAA,GD7B6B,CAAC3O,IA4FzB,CACLuO,eA3FqB,KACrB,IAAKvO,EAAW,OAEV,MAAArL,EAAOkZ,GAAoB7N,GAEjC4O,UAAUC,UAAUC,UAAUna,GAC3B+S,MAAK,KACJ5B,GAAM,uEAAsE,IAE7E6B,OAAM,KACL7B,GAAM,gEAA+D,GACtE,EAiFH0I,gBA7EsB,KACjBxO,IAGL0L,GAAyB1L,GAGzByH,GAAY,qBAAsB,0BAC/BC,MAAK,KACJ5B,GAAM,0BAAyB,IAEhC6B,OAAOC,IAEN9B,GAAM,iFAAgF,IACvF,EAgEH2I,iBA5DuB,KAClBzO,GAA+C,IAAlC7G,OAAOC,KAAK4G,GAAW3G,OAQzCyO,GAAa9H,EAAW,2BACrB0H,MAAK,KACJ5B,GAAM,qCAAoC,IAE3C6B,OAAOC,IAEN9B,GAAM,yEAAwE,IAbhFA,GAAM,iEAcL,EA6CH4I,iBAzCuB,KAClB1O,IAGL0L,GAAyB1L,GAEzB+O,GAAa,qBAAsB,0BAChCrH,MAAK,KACJ5B,GAAM,uCAAsC,IAE7C6B,OAAOC,IAEN9B,GAAM,2EAA0E,IACjF,EA6BH6I,uBAzB6B,KAC7B,IAAK3O,EAAW,OAGV,MACAgP,EAAc,uBADJpF,mBAAmB,0FAInC9B,GAAa9H,EAAW,2BACrB0H,MAAK,KAEGtU,OAAAa,KAAK+a,EAAa,UACzBlJ,GAAM,oEAAmE,IAE1E6B,OAAOC,IAEN9B,GAAM,4DAA2D,GAClE,IC3DDmJ,CAAkBjP,GAGpB,SAAAtN,KAAC,MAAI,CAAAF,UAAU,kBACbC,SAAA,CAAAE,EAAAA,IAAC,MAAGH,WAAckM,EAAW,WAAa,YAA3B,4CAAkFjM,SAEjG,qCAEAC,KAAC,MAAI,CAAAF,UAAU,gCACbC,SAAA,CAAAE,EAAAA,IAAC,KAAEH,UAAW,IAAGkM,EAAW,YAAc,WAAajM,SAGvD,kLAEC,MAAI,CAAAD,UAAU,mFACbC,SAACC,EAAAA,KAAA,IAAA,CAAEF,UAAU,0DACXC,SAAA,GAAAE,IAAC,UAAOF,SAAK,UAAS,kKAO3BE,EAAAA,IAAA,MAAA,CAAI0C,GAAG,qBAAqB7C,UAAU,WAKvCI,EAAAD,IAACsX,GAAA,CACCC,WAAYqE,EACZpE,aAAcsE,EACdrE,gBAAiBuE,EACjBtE,kBAAmB,IAAMiE,GAAmB,WAI7CzE,GAAU,MAGXlX,IAAC,MAAI,CAAAH,UAAU,oCACbC,SAAAG,EAAAF,KAACoB,EAAA,CACCC,QAAQ,UACRlB,QAAS+V,EACTpW,UAAU,oBAEVC,SAAA,GAACE,IAAAmI,EAAA,CAAUtI,UAAU,iBAAiB,wBAK1CI,EAAAD,IAACkW,GAAA,CACC5U,KAAMoa,EACNvP,aAAcwP,EACdxF,YAAa2F,MAIrB,CCzEO,SAASS,IAAavb,aAC3BA,EAAAwb,iBACAA,EAAApL,qBACAA,EAAAqL,sBACAA,EAAAC,kBACAA,EAAAC,YACAA,EAAAC,YACAA,IAEA,OAAQ5b,GACN,IAAK,UACI,SAAAhB,IAACuB,GAAiB,CAAAC,QAASmb,IAEpC,IAAK,gBACI,SAAA3c,IAAC2J,GAAuB,CAAAvC,SAAUqV,IAE3C,IAAK,SAED,OAAAxc,EAAAD,IAACyU,GAAA,CACCpH,UAAWmP,EACX5J,SAAU8J,EACV/W,OAAQgX,EACRjI,OAAQ,IAAMkI,EAAY,iBAC1BxL,yBAIN,IAAK,UAED,OAAAnR,EAAAD,IAACgW,GAAA,CACC3I,UAAWmP,EACXvG,OAAQ,IAAM2G,EAAY,UAC1BjX,OAAQgX,IAId,IAAK,QAED,OAAA1c,EAAAD,IAACyb,GAAA,CACCpO,UAAWmP,EACXvG,OAAQ,IAAM2G,EAAY,YAIhC,QACS,SAAA5c,IAAC,OAAIF,SAAe,oBAEjC,CC7DO,SAAS+c,KACd,aACG,SAAO,CAAAhd,UAAU,6DAChBC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,yCACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,wCACbC,SAAA,CAAAE,MAAC,MACC,CAAAF,SAAAC,EAAAA,KAAC,MAAI,CAAAF,UAAU,iCACbC,SAAA,CAAAE,MAAC,KAAE8c,KAAK,oCAAoCtQ,OAAO,SAASuQ,IAAI,sBAC9Djd,SAAAG,EAAAD,IAAC,MAAA,CACCa,IAAI,4DACJC,IAAI,kBACJjB,UAAU,oDAGbG,EAAAA,IAAA,IAAA,CAAEH,UAAU,oBAAoBC,SAAiG,2GAIrIE,MAAA,MAAA,CAAIH,UAAU,mBACbC,gBAAC,MACC,CAAAA,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,+CAA+CC,SAAa,oBAC1EC,KAAC,KAAG,CAAAF,UAAU,YACZC,SAAA,OAAC,KACC,CAAAA,SAAAG,EAAAF,KAACid,EAAA,CACCC,GAAG,eACHpd,UAAU,gFAEVC,SAAA,GAACE,IAAAkd,EAAA,CAASrd,UAAU,iBAAiB,yBAIxC,KACC,CAAAC,SAAAG,EAAAF,KAAC,IAAA,CACC+c,KAAK,8CACLtQ,OAAO,SACPuQ,IAAI,sBACJld,UAAU,gFAEVC,SAAA,GAACE,IAAAmd,EAAA,CAAMtd,UAAU,iBAAiB,uCAIrC,KACC,CAAAC,SAAAG,EAAAF,KAAC,IAAA,CACC+c,KAAK,yCACLtQ,OAAO,SACPuQ,IAAI,sBACJld,UAAU,gFAEVC,SAAA,GAACE,IAAAod,EAAA,CAAUvd,UAAU,iBAAiB,iBAM5CE,KAAC,MAAI,CAAAF,UAAU,sBACbC,SAAA,CAACC,EAAAA,KAAA,IAAA,CAAE+c,KAAK,6CAA6CtQ,OAAO,SAASuQ,IAAI,sBAAsBld,UAAU,8DACvGC,SAAA,CAACE,EAAAA,IAAA,OAAA,CAAKH,UAAU,UAAUC,SAAS,oBAClC,MAAI,CAAAD,UAAU,UAAUwd,KAAK,eAAeC,QAAQ,YAAY,cAAY,OAC3Exd,eAAC,QAAKyd,SAAS,UAAUC,EAAE,8jDAA8jDC,SAAS,iBAGtmD1d,EAAAA,KAAC,KAAE+c,KAAK,yDAAyDtQ,OAAO,SAASuQ,IAAI,sBAAsBld,UAAU,8DACnHC,SAAA,CAACE,EAAAA,IAAA,OAAA,CAAKH,UAAU,UAAUC,SAAQ,mBACjC,MAAI,CAAAD,UAAU,UAAUwd,KAAK,eAAeC,QAAQ,YAAY,cAAY,OAC3Exd,eAAC,QAAKyd,SAAS,UAAUC,EAAE,yQAAyQC,SAAS,kCAOxT,MAAI,CAAA5d,UAAU,sDACbC,SAACC,EAAAA,KAAA,IAAA,CAAEF,UAAU,oBAAoBC,SAAA,CAAA,MAAQ,IAAIgW,MAAOC,cAAc,2DAK5E,CCjEO,SAAS2H,IAAmB1c,aACjCA,EAAAwb,iBACAA,EAAApL,qBACAA,EAAAuM,SACAA,EAAAlB,sBACAA,EAAAC,kBACAA,EAAAC,YACAA,EAAAC,YACAA,IAKE,OAAA3c,EAAAD,IAAC,MAAA,CACCH,UAAW,uCAAsC8d,EAAW,gBAAkB,IAC9EC,KAAK,OACL,aAAW,8BAEX9d,SAAAG,EAAAF,KAAC,MAAI,CAAAF,UAAU,SACZC,SAAA,EAAC6d,GACA3d,EAAAA,IAACe,GAAgB,CAAAC,eAA4BC,cAAe2b,MAG9D7c,KAAC,OAAK,CAAAF,UAAU,qDAEdC,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAIH,UAAU,4EACbC,SAAAE,MAAC,MAAGH,UAAU,0CACXC,SAAiB,cAAY,4CACZ,kBAAjBkB,EAAmC,iCAClB,WAAjBA,EAA4B,2BACX,YAAjBA,EAA6B,iCAC7B,wCAILhB,IAAC,MAAI,CAAAH,UAAU,6FACbC,SAAAG,EAAAD,IAACuc,GAAA,CACCvb,eACAwb,mBACApL,uBACAqL,wBACAC,oBACAC,cACAC,sBAKJe,GAAY3d,EAAAA,IAAC6c,GAAO,QAI9B,CCtDgB,SAAAgB,IAAYC,kBAAEA,IACtB,MAAAxe,WAAEA,GAAeH,MAChB4e,EAAiBC,GAAsB1d,YAAS,IAChD2d,EAAsBC,GAA2B5d,WAAwB,MAGhFX,EAAAA,WAAU,KAEJ,IAAAwe,EAASC,aAAaC,QAAQ,mBAE7BF,IAEMA,EAAA,QAAQrI,KAAKwI,SAASpV,KAAKqV,SAASC,SAAS,IAAIC,UAAU,EAAG,MAAMvV,KAAKqV,SAASC,SAAS,IAAIC,UAAU,EAAG,KACxGL,aAAAM,QAAQ,kBAAmBP,IAG1CD,EAAwBC,EAAM,GAC7B,IAGHxe,EAAAA,WAAU,KAER,MAAMgf,EAAY,IAAIC,gBAAgBne,OAAOhB,SAASof,QAChDC,EAAgBH,EAAUI,IAAI,kBAC9BC,EAAYL,EAAUI,IAAI,cAG1BE,EAAab,aAAaC,QAAQ,iBAClCa,EAAkBd,aAAaC,QAAQ,sBACvCc,EAAmBf,aAAaC,QAAQ,6BAGxCe,EAAgC,SAAfH,GAAyBC,EAC1CG,GAAkBF,GACDrJ,KAAKwI,MAAQgB,OAAOH,GAAsB,QAE3C,YAAlBL,GAA+BE,GAGpBZ,aAAAM,QAAQ,gBAAiB,QACzBN,aAAAM,QAAQ,qBAAsBM,GAC3CZ,aAAaM,QAAQ,4BAA6B5I,KAAKwI,MAAME,YAE7DrL,GAAMoM,QAAQ,yCAELH,GAAkBC,OAK7BrB,GAAmB,EAAK,GACvB,CAACF,IAcJ,OAAIC,QAEC,MAAI,CAAAle,UAAU,+DACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,gDACbC,SAAA,GAACE,IAAA,MAAA,CAAIH,UAAU,oFACdG,EAAAA,IAAA,IAAA,CAAEH,UAAU,oBAAoBC,SAAkC,8CAOzEC,KAAC,MAAI,CAAAF,UAAU,8BACbC,SAAA,CAAAE,EAAAA,IAAC,UAAOH,UAAU,gEAChBC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,sDACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,qCAAqCC,SAA4B,iCAC/EG,EAAAD,IAACmB,EAAA,CACCC,QAAQ,UACRC,KAAK,KACLnB,QAAS,IAAMZ,EAAW,gBAC1BO,UAAU,oBACXC,SAAA,8BAMJ,OAAK,CAAAD,UAAU,+CACdC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,gDACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,oDACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,qCAAqCC,SAAyC,8CAC3FE,EAAAA,IAAA,IAAA,CAAEH,UAAU,OAAOC,SAAgC,qCACnDE,EAAAA,IAAA,IAAA,CAAEH,UAAU,iCAAiCC,SAAkB,4BAGlEC,KAAC,MAAI,CAAAF,UAAU,aACbC,SAAA,GAACC,KAAA,MAAA,CAAIF,UAAU,eACbC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,wCAAwCC,SAAuB,8BAC7EC,KAAC,KAAG,CAAAF,UAAU,YACZC,SAAA,GAACC,KAAA,KAAA,CAAGF,UAAU,mBACZC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6CACbC,eAAC0f,EAAM,CAAA3f,UAAU,gCAElBG,EAAAA,IAAA,OAAA,CAAKH,UAAU,uBAAuBC,SAAsE,gFAE/GC,KAAC,KAAG,CAAAF,UAAU,mBACZC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6CACbC,eAAC0f,EAAM,CAAA3f,UAAU,gCAElBG,EAAAA,IAAA,OAAA,CAAKH,UAAU,uBAAuBC,SAAgE,0EAEzGC,KAAC,KAAG,CAAAF,UAAU,mBACZC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6CACbC,eAAC0f,EAAM,CAAA3f,UAAU,gCAElBG,EAAAA,IAAA,OAAA,CAAKH,UAAU,uBAAuBC,SAAkD,4DAE3FC,KAAC,KAAG,CAAAF,UAAU,mBACZC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6CACbC,eAAC0f,EAAM,CAAA3f,UAAU,gCAElBG,EAAAA,IAAA,OAAA,CAAKH,UAAU,uBAAuBC,SAAyD,mEAElGC,KAAC,KAAG,CAAAF,UAAU,mBACZC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6CACbC,eAAC0f,EAAM,CAAA3f,UAAU,gCAElBG,EAAAA,IAAA,OAAA,CAAKH,UAAU,uBAAuBC,SAAqD,yEAKjG,MAAI,CAAAD,UAAU,gEACbC,SAACC,EAAAA,KAAA,MAAA,CAAIF,UAAU,mBACbC,SAAA,GAACE,IAAAyf,EAAA,CAAK5f,UAAU,+CACf,MACC,CAAAC,SAAA,CAACE,EAAAA,IAAA,KAAA,CAAGH,UAAU,uCAAuCC,SAAyB,8BAC7EE,EAAAA,IAAA,IAAA,CAAEH,UAAU,4BAA4BC,SAGzC,mKAKNG,EAAAD,IAACmB,EAAA,CACCjB,QAjGkB,KAC5B,IAAK+d,EAEH,YADA9K,GAAM8B,MAAM,4DAKR,MAAAyK,EAAa,yEAA8BzB,eAAkCnI,KAAKwI,QACxF7d,OAAOhB,SAASqd,KAAO4C,CAAA,EA0Fb7f,UAAU,sDACVuB,QAAQ,qBACTtB,SAAA,gCAIAE,EAAAA,IAAA,IAAA,CAAEH,UAAU,yCAAyCC,SAEtD,8EAKL+c,GAAO,MAGd,CCtLO,SAAS8C,KAEZ,OAAA1f,EAAAD,IAAC,OAAIH,UAAU,gDACbC,eAAC,MAAI,CAAAD,UAAU,mFAGrB,CCEO,SAAS+f,IAAiBjC,SAAEA,GAAW,IACfte,IAC7B,MAAOwgB,EAAWC,GAAgBxf,YAAkB,IAC7Cyd,EAAiBC,GAAsB1d,YAAkB,IAE1DU,aACJA,EAAAwb,iBACAA,EAAApL,qBACAA,EAAA2O,cACAA,EAAAC,UACAA,EAAAC,0BACAA,EAAAC,oBACAA,GCdG,WACL,MAAM9gB,EAAWC,KAGV2B,EAAcmf,GAAmB7f,WAAuB,YAExD8Q,EAAsBgP,GAA2B9f,EAAAA,SAA8B,CAAE,IAEjFkc,EAAkB0D,GAAuB5f,EAAAA,SAAwBqM,MAGlEoT,EAAgB,KAKpB,OAAQ/e,GACN,IAAK,UACHmf,EAAgB,iBAChB,MACF,IAAK,gBACHA,EAAgB,UAChB,MACF,IAAK,SACHA,EAAgB,WAChB,MACF,IAAK,UACHA,EAAgB,SAChB,MACF,IAAK,QAEH/gB,EAAS,oBAIb,EA8BK,MAAA,CACL4B,eACAwb,mBACApL,uBACA2O,gBACAC,UA/BiBK,IAKjBF,EAAgBE,EAAK,EA2BrBJ,0BAvBiC7S,IAEjCgT,EAAwBhT,GAGlB,MAAAkT,EAAgBnT,GAA6BC,GAEnD8S,EAAoBI,GAEdnN,GAAA,CACJjM,MAAO,yBACPhF,YAAa,4DAafge,sBAEJ,CD3DMK,GAGJ5gB,EAAAA,WAAU,KACwF,GAC/F,CAACqB,EAAc2c,IAGlBhe,EAAAA,WAAU,KAER,GAAIge,EAIF,OAFAmC,GAAa,QACb9B,GAAmB,GAKM,MACnB,MAAAiB,EAAab,aAAaC,QAAQ,iBAClCc,EAAmBf,aAAaC,QAAQ,6BAK1C,GAAe,SAAfY,GAAyBE,EAAkB,CACvC,MACAqB,EADclB,OAAOH,GACW,QAElCrJ,KAAKwI,MAAQkC,EAEfV,GAAa,GAGb3M,GAAM8B,MAAM,kBAAmB,CAC7B/S,YAAa,2EAGnB,CAEA8b,GAAmB,EAAK,OAIzB,CAACL,IAGJ,MAAM8C,EAAwB,KAEfrC,aAAAM,QAAQ,gBAAiB,QACtCN,aAAaM,QAAQ,4BAA6B5I,KAAKwI,MAAME,YAE7DrL,GAAMoM,QAAQ,oCAAqC,CACjDrd,YAAa,0DAGf4d,GAAa,EAAI,EAInB,OAAI/B,QAEM4B,GAAiB,CAAA,GAItBE,GAAclC,EAOjB1d,EAAAD,IAAC0d,GAAA,CACC1c,eACAwb,mBACApL,uBACAuM,WACAlB,sBAAuBwD,EACvBvD,kBAAmBwD,EACnBvD,YAAaoD,EACbnD,YAAaoD,MAbRhgB,IAAC6d,GAAY,CAAAC,kBAAmB2C,GAgB3C,CElGO,SAASC,KACd,MAAOC,EAAQC,GAAatgB,YAAS,GAsGrC,YA7FAX,EAAAA,WAAU,KAGR,MAAMkhB,EAAoB,KAElB,MAAAC,EAAS7I,SAAS8I,KAAKC,aACzB,IACFvgB,OAAOwgB,OAAOC,YAAY,CACxB/e,KAAM,SACN2e,SACAK,OAAQ,6BACRC,UAAW,4BACV,WAEInM,GAET,GAIFoM,WAAWR,EAAmB,KACvBpgB,OAAAE,iBAAiB,SAAUkgB,GAG5B,MAAAS,EAAW,IAAIC,kBAAiB,YAM7BD,EAAAE,QAAQvJ,SAAS8I,KAAM,CAC9BU,WAAW,EACXC,SAAS,EACTC,YAAY,EACZC,eAAe,IAIX,MAAAC,EAAiBC,YAAYjB,EAAmB,KAG7C5I,SAAA8I,KAAKgB,UAAUC,IAAI,iBAGxB,IACFvhB,OAAOwgB,OAAOC,YAAY,CACxB/e,KAAM,QACNgf,OAAQ,6BACRC,UAAW,2BACXa,IAAKxhB,OAAOhB,SAASqd,MACpB,WAEI7H,GAET,CAKA,OAFA2L,GAAU,GAEH,KAEEngB,OAAAG,oBAAoB,SAAUigB,GACrCqB,cAAcL,GACdP,EAASa,aACAlK,SAAA8I,KAAKgB,UAAUK,OAAO,gBAAe,CAAA,GAE/C,IAGHziB,EAAAA,WAAU,KACF,MAAA0iB,EAAwBC,IAI5B,GAAIA,EAAMrY,MAA4B,cAApBqY,EAAMrY,KAAK9H,KACvB,IACF1B,OAAOwgB,OAAOC,YAAY,CACxB/e,KAAM,SACNgf,OAAQ,6BACRC,UAAW,2BACXN,OAAQ7I,SAAS8I,KAAKC,cACrB,WAEI/L,GAET,CACF,EAIF,OADOxU,OAAAE,iBAAiB,UAAW0hB,GAC5B,IAAM5hB,OAAOG,oBAAoB,UAAWyhB,EAAoB,GACtE,IAEE1B,IAOH5gB,KAAC,MAAI,CAAAF,UAAU,8BAEbC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6CACbC,SAACC,EAAAA,KAAA,IAAA,CAAEF,UAAU,UAAUC,SAAA,CAAA,iEAErBE,IAACgd,EAAK,CAAAC,GAAG,eACPnd,SAAAG,EAAAD,IAACmB,EAAA,CACCC,QAAQ,UACRC,KAAK,KACLxB,UAAU,gEACXC,SAAA,qCASPE,IAAC4f,GAAiB,CAAAjC,UAAU,OAxBtB3d,EAAAA,IAAA,MAAA,CAAIH,UAAU,kBAAkBC,SAAa,iBA2BzD,CC7HA,MAAMyiB,GAAc,IAAIC,GAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,MAAO,EACPC,sBAAsB,MAetBC,GAAM,IAIP7iB,EAAAA,IAAA8iB,EAAA,CAAoBC,OAAQR,GAC3BziB,gBAACkjB,GACC,CAAAljB,SAAA,CAAAG,EAAAD,IAACijB,GAAO,IACRjjB,EAAAA,IAACkjB,EACC,CAAApjB,SAAAC,EAAAA,KAACojB,EACC,CAAArjB,SAAA,GAACE,IAAAojB,EAAA,CAAM7jB,KAAK,IAAI8jB,QAASrjB,EAAAA,IAACsjB,GAASrG,GAAG,eAAesG,SAAO,MAC5DtjB,EAAAD,IAACojB,EAAA,CACC7jB,KAAK,eACL8jB,QAEIpjB,EAAAF,KAAAkJ,WAAA,CAAAnJ,SAAA,CAAAG,EAAAD,IAACG,GAAO,UACP,MAAI,CAAAN,UAAU,iBACbC,SAAAE,MAACwjB,IAAY,UAKrBvjB,EAAAD,IAACojB,EAAA,CACC7jB,KAAK,iBACL8jB,QAEKpjB,EAAAF,KAAAkJ,WAAA,CAAAnJ,SAAA,MAAA2jB,QACAC,GAAoB,SAI3BzjB,EAAAD,IAACojB,EAAA,CACC7jB,KAAK,eACL8jB,QAEKpjB,EAAAF,KAAAkJ,WAAA,CAAAnJ,SAAA,MAAA2jB,QACAtjB,GAAO,UACP,MAAI,CAAAN,UAAU,iBACbC,SAAAE,MAAC4f,IAAiB,UAK1B3f,EAAAD,IAACojB,EAAA,CACC7jB,KAAK,kBACL8jB,QAEKpjB,EAAAF,KAAAkJ,WAAA,CAAAnJ,SAAA,MAAA2jB,QACA/C,GAAyB,eAK/B0C,EAAM,CAAA7jB,KAAK,IAAI8jB,QAASrjB,MAACR,IAAS,eC9E/CiB,OAAOkjB,QAAU,SAASnN,EAAS2K,EAAQyC,EAAQC,EAAO5O,GAEjD,OAAA,CACT,EAEAxU,OAAOE,iBAAiB,sBAA+B2hB,IACK,IAM5D,MAAMwB,GAAY,KAEV,MAAAC,EAAc9L,SAASiB,eAAe,QAE5C,IAAK6K,EAAa,CAGV,MAAAC,EAAU/L,SAASC,cAAc,OAUvC,OATA8L,EAAQthB,GAAK,OACJuV,SAAA8I,KAAK1I,YAAY2L,QAGjBjB,EAAAkB,WAAWD,GAAShhB,aAC1BkhB,EAAMC,WAAN,CACCrkB,SAAAE,EAAAA,IAAC6iB,IAAI,KAIX,CAEI,IACI,MAAAuB,EAAOC,EAASJ,WAAWF,GAMjC1C,YAAW,KACJ+C,EAAAphB,aACFkhB,EAAMC,WAAN,CACCrkB,SAAAE,EAAAA,IAAC6iB,IAAI,KAGyC,GACjD,SACI5N,GAIH,IAEO8N,EAAAkB,WAAWF,GAAa/gB,SAAOhD,IAAC6iB,IAAI,UACtCyB,GAIPP,EAAY5K,UAAY,gSAIiElE,iCAG3F,CACF,GAIFxU,OAAOE,iBAAiB,QAAQ,KAE1B,ICzEA,kBAAmBsb,WACdxb,OAAAE,iBAAiB,QAAQmW,UAC1B,IAIF,MAAMyN,QAAqBtI,UAAUuI,cAAcC,SAAS,SAAU,CACpEC,MAAO,IACPviB,KAAM,YAMJoiB,EAAaI,YAENJ,EAAaK,SAEbL,EAAaM,OAKxB5I,UAAUuI,cAAc7jB,iBAAiB,WAAY2hB,IAC/CA,EAAMrY,MAAQqY,EAAMrY,KAAK9H,IAE7B,UAEK8S,GAIT,WD4CKA,GAET,KAK0B,YAAxBgD,SAAS6M,WACF7M,SAAAtX,iBAAiB,mBAAoBmjB"}