
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Copy CNAME to dist
        run: cp public/CNAME dist/

      - name: Copy 404.html to dist root
        run: cp public/404.html dist/
        
      - name: Create and copy domain-test.txt to dist
        run: |
          echo "Domain test file - Created on $(date)" > dist/domain-test.txt
          echo "If you can see this file, static assets are being served correctly from GitHub Pages." >> dist/domain-test.txt
          echo "Esta é uma verificação de domínio - Criado em $(date)" >> dist/domain-test.txt
          echo "Se você consegue ver este arquivo, os recursos estáticos estão sendo servidos corretamente pelo GitHub Pages." >> dist/domain-test.txt
      
      - name: Copy Service Worker files with proper Content-Type
        run: |
          # Create sw directory in dist if not exists
          mkdir -p dist/sw
          
          # Copy service worker file with proper MIME type headers
          cp public/sw.js dist/
          echo "application/javascript" > dist/sw.js.mime
          
          # Copy service worker modules with proper MIME type headers
          cp public/sw/config.js dist/sw/
          echo "application/javascript" > dist/sw/config.js.mime
          
          cp public/sw/cacheManager.js dist/sw/
          echo "application/javascript" > dist/sw/cacheManager.js.mime
          
          cp public/sw/strategies.js dist/sw/
          echo "application/javascript" > dist/sw/strategies.js.mime
          
          echo "Service worker files copied with proper MIME types"
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          retention-days: 1 # Optional: retain artifact for 1 day
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
