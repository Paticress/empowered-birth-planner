
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Copy CNAME to dist
        run: cp public/CNAME dist/

      - name: Copy 404.html to dist root
        run: cp public/404.html dist/
        
      - name: Make sure favicon is in dist root
        run: |
          # Ensure favicon is copied to the dist root directory
          cp public/favicon.ico dist/
          echo "Favicon copied to dist root"
          
      - name: Create and copy domain-test.txt to dist
        run: |
          echo "Domain test file - Created on $(date)" > dist/domain-test.txt
          echo "If you can see this file, static assets are being served correctly from GitHub Pages." >> dist/domain-test.txt
          echo "Esta é uma verificação de domínio - Criado em $(date)" >> dist/domain-test.txt
          echo "Se você consegue ver este arquivo, os recursos estáticos estão sendo servidos corretamente pelo GitHub Pages." >> dist/domain-test.txt
      
      - name: Copy Service Worker files
        run: |
          # Create sw directory in dist if not exists
          mkdir -p dist/sw
          
          # Copy service worker file
          cp public/sw.js dist/
          
          # Copy service worker modules
          cp public/sw/config.js dist/sw/
          cp public/sw/cacheManager.js dist/sw/
          cp public/sw/strategies.js dist/sw/
          
          echo "Service worker files copied"
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      - name: Create content-type configuration for GitHub Pages
        run: |
          # Create MIME type configuration files
          cat > dist/.htaccess << EOF
          AddType application/javascript .js .mjs
          AddType application/json .json
          AddType text/css .css
          
          # Enable CORS
          <IfModule mod_headers.c>
            Header set Access-Control-Allow-Origin "*"
          </IfModule>
          
          # Proper handling of TS/TSX files
          AddType application/javascript .ts .tsx
          
          # Force application/javascript for module scripts
          <FilesMatch "\.(js|mjs)$">
            Header set Content-Type "application/javascript"
          </FilesMatch>
          EOF
          
          echo "MIME type configuration created"
      
      - name: Update HTML files to properly handle JavaScript modules
        run: |
          # Find all HTML files and ensure they properly load modules
          find dist -name "*.html" -exec sed -i 's/<script /<script type="module" /g' {} \;
          
          echo "HTML files updated for module support"
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true
