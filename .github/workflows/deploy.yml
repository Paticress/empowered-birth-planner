
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # Changed from read to write for GitHub Pages deployment
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Copy CNAME to dist
        run: cp public/CNAME dist/

      - name: Copy 404.html to dist root
        run: cp public/404.html dist/
        
      - name: Create and copy domain-test.txt to dist
        run: |
          echo "Domain test file - Created on $(date)" > dist/domain-test.txt
          echo "If you can see this file, static assets are being served correctly from GitHub Pages." >> dist/domain-test.txt
          echo "Esta é uma verificação de domínio - Criado em $(date)" >> dist/domain-test.txt
          echo "Se você consegue ver este arquivo, os recursos estáticos estão sendo servidos corretamente pelo GitHub Pages." >> dist/domain-test.txt
      
      - name: Copy Service Worker files
        run: |
          # Create sw directory in dist if not exists
          mkdir -p dist/sw
          
          # Copy service worker file
          cp public/sw.js dist/
          
          # Copy service worker modules
          cp public/sw/config.js dist/sw/
          cp public/sw/cacheManager.js dist/sw/
          cp public/sw/strategies.js dist/sw/
          
          echo "Service worker files copied"
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      - name: Create netlify.toml for MIME types
        run: |
          cat <<EOF > dist/netlify.toml
          [[headers]]
            for = "/*.js"
            [headers.values]
              Content-Type = "application/javascript"
          
          [[headers]]
            for = "/*.json"
            [headers.values]
              Content-Type = "application/json"
          
          [[headers]]
            for = "/*.css"
            [headers.values]
              Content-Type = "text/css"
          EOF
          
          echo "netlify.toml created for MIME type handling"
      
      - name: Set proper MIME types
        run: |
          # Create .htaccess file to set proper MIME types
          echo "AddType application/javascript .js" > dist/.htaccess
          echo "AddType application/json .json" >> dist/.htaccess
          echo "AddType text/css .css" >> dist/.htaccess
          
          echo "MIME type configuration created"
      
      - name: Create meta refresh fallback
        run: |
          # Create a meta refresh fallback for direct script loading
          echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=/">' > dist/assets/index.html
          echo '<meta charset="UTF-8"><title>Redirecting...</title></head>' >> dist/assets/index.html
          echo '<body>If you are not redirected automatically, follow this <a href="/">link</a>.' >> dist/assets/index.html
          echo '</body></html>' >> dist/assets/index.html
          
          echo "Meta refresh fallback created"
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true
