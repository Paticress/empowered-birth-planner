
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install terser explicitly
        run: npm install --save-dev terser@latest
      
      - name: Build
        run: npm run build
        env:
          # Add environment variables if needed
          NODE_ENV: production
      
      - name: Copy CNAME to dist
        run: cp public/CNAME dist/

      - name: Copy 404.html to dist root
        run: cp public/404.html dist/
        
      - name: Copy domain-test.txt to dist root
        run: |
          if [ -f "public/domain-test.txt" ]; then
            cp public/domain-test.txt dist/
            echo "Domain test file copied successfully"
          else
            echo "Creating domain-test.txt in dist directory"
            echo "Domain test file - $(date)" > dist/domain-test.txt
          fi
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
