
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Copy CNAME to dist
        run: cp public/CNAME dist/

      - name: Copy 404.html to dist root
        run: cp public/404.html dist/
        
      - name: Make sure favicon is in dist root
        run: |
          echo "Copying favicon.ico to dist root directory"
          cp public/favicon.ico dist/
          ls -la dist/
          echo "Favicon copied and verified"
          
      - name: Create and copy domain-test.txt to dist
        run: |
          echo "Domain test file - Created on $(date)" > dist/domain-test.txt
          echo "If you can see this file, static assets are being served correctly from GitHub Pages." >> dist/domain-test.txt
          echo "Esta é uma verificação de domínio - Criado em $(date)" >> dist/domain-test.txt
          echo "Se você consegue ver este arquivo, os recursos estáticos estão sendo servidos corretamente pelo GitHub Pages." >> dist/domain-test.txt
      
      - name: Copy Service Worker files
        run: |
          # Create sw directory in dist if not exists
          mkdir -p dist/sw
          
          # Copy service worker file
          cp public/sw.js dist/
          
          # Copy service worker modules
          cp public/sw/config.js dist/sw/
          cp public/sw/cacheManager.js dist/sw/
          cp public/sw/strategies.js dist/sw/
          
          echo "Service worker files copied"
      
      - name: Create .nojekyll file
        run: touch dist/.nojekyll
      
      - name: Create content-type configuration file
        run: |
          # Create a _headers file for proper MIME types
          cat > dist/_headers << EOF
          # Headers for all files
          /*
            X-Frame-Options: SAMEORIGIN
            X-XSS-Protection: 1; mode=block
            X-Content-Type-Options: nosniff
            Referrer-Policy: strict-origin-when-cross-origin

          # JavaScript files - ensure proper MIME type
          /*.js
            Content-Type: application/javascript

          # JSON files  
          /*.json
            Content-Type: application/json

          # CSS files
          /*.css
            Content-Type: text/css

          # JavaScript modules specifically
          /*.mjs
            Content-Type: application/javascript

          # TypeScript files (for development)
          /*.ts
            Content-Type: application/javascript

          /*.tsx
            Content-Type: application/javascript

          # Service worker
          /sw.js
            Content-Type: application/javascript
          /sw/*
            Content-Type: application/javascript
          EOF
          
          # Create redirects file for SPA
          cat > dist/_redirects << EOF
          # Redirect all requests to index.html for SPA routing
          /*    /index.html   200

          # Set content type headers explicitly
          /*.js    Content-Type: application/javascript
          /*.css   Content-Type: text/css
          /*.json  Content-Type: application/json
          /*.ico   Content-Type: image/x-icon
          EOF
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true
